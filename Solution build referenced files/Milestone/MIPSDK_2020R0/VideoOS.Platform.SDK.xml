<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VideoOS.Platform.SDK</name>
    </assembly>
    <members>
        <member name="T:VideoOS.Platform.SDK.Config.CameraInFile">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraInFile.BuildCameraConfigurationXml(System.String)">
            <summary>
            Returns a XML document containing a camera configuration that can be used as parameter in the ImageViewer ActiveX connect method.
            </summary>
            <param name="securityToken">The security token used when connecting to the device</param>
            <returns>
            XML document containing a camera configuration for the sprcified device
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.ConnectionStateChangedEventArgs">
            <summary>
            Provides data for the ConnectionStateChanged events. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.ConnectionStateChangedEventArgs.#ctor(VideoOS.Platform.SDK.Config.ConnectStates)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.ConnectionStateChangedEventArgs"/> class.
            </summary>
            <param name="connectState">State of the connect.</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.ConnectionStateChangedEventArgs.ConnectionState">
            <summary>
            Gets the state of the connection.
            </summary>
            <value>The state of the connection.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.ConnectionStateChangedEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.DatabaseBank">
            <summary>
            This file created to, over time, have all BLK handling
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.ExceptionHandler.HandleException(System.Exception)">
            <summary>
            Convert exceptions from a RecorderCommand service or ServerCommandService to MIP type exceptions.
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.InputEvent">
            <summary>
            Only used for XPCO Hardware events
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.LoginServerBase.LoginInfo">
            <summary>
            Gets or sets the login info.
            </summary>
            <value>The login info.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.LoginServerBase.Login(System.Uri)">
            <summary>
            Logs in to the server without getting the configuration. Login() plus ConnectServer() is an alternative to using ConnectServer() alone. 
            </summary>
            <param name="uri">The serverurl.</param>
            <returns>Should return true. If false is returned, you should inspect your application's debug output to find out why.</returns>
            <exception cref="T:VideoOS.Platform.SDK.Platform.InvalidCredentialsMIPException">The credentials supplied are not valid with the server.</exception>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.AuthenticationType">
            <summary>
            Definitions for the 3 authentication types supported by the VMS
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.AuthenticationType.Basic">
            <summary>
            Basic authentication
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.AuthenticationType.Windows">
            <summary>
            Windows authentication with credentials provided
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.AuthenticationType.WindowsDefault">
            <summary>
            Windows authentication using current login credentials in Windows
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.ServerTypes">
            <summary>
            Definitions for the different server types supported for login
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ServerTypes.ENTERPRISE">
            <summary>
            E-code
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ServerTypes.CORPORATE">
            <summary>
            C-code
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ServerTypes.DATABASE">
            <summary>
            Database (offline)
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ServerTypes.ARCUS">
            <summary>
            Arcus
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ServerTypes.MOBILE">
            <summary>
            Mobile server
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ServerTypes.UNKNOWN">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.SiteServerType">
            <summary>
            Definitions for the various site types
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.SiteServerType.None">
            <summary>
            No site
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.SiteServerType.Master">
            <summary>
            Master site
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.SiteServerType.MasterSlave">
            <summary>
            Master slave
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.SiteServerType.Slave">
            <summary>
            Slave
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.MetadataDevice">
            <summary>
            Represents a metadata device. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.MetadataDevice.#ctor(VideoOS.Platform.SDK.Config.ISystemInfo,VideoOS.Platform.SDK.Interface.IMetadataDeviceInfo,VideoOS.Platform.SDK.Config.IRecorder,VideoOS.Platform.SDK.Interface.IRecorderInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.MetadataDevice"/> class.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.MetadataType">
            <summary>
            Represents a type of a metadata stream. This can e.g. be GPS, bounding boxes and so on.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.QueryConfigurationChanges.QueryThreadState.ConfigurationRefreshIntervalInMs">
            <summary>
            The amount of time between each configuration change check in milliseconds.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.QueryConfigurationChanges._exclusiveQueryAccess">
            <summary>
            This is hack to solve DTS46883 - i tis used to solve a race-condition when accessing, looping and modifying the 
            UserContextQueryInfo.NextCheck dictionaries. It appears that this situation can happen when StartQuery is called
            after StopQuery, as this allows multiple threads to run simultaneously in the loop and access the same data.
            
            The AutoResetEvent will be used to allow only on thread to run the loop in QueryThread.
            
            Start by setting the AutoResetEvent to signalled, so the first thread can enter.
            The AutoResetEvent will then be signalled when the thread exists the loop.
            </summary>
            <remarks>If you have time to fix this properly, please do go ahead as this solution only makes things more complicated</remarks>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.QueryConfigurationChanges.ConfigurationRefreshIntervalInMs">
            <summary>
            The amount of time between each configuration change check in milliseconds.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.QueryConfigurationChanges.LastModified(System.Guid,VideoOS.Platform.SDK.Platform.SDKConfiguration)">
            <summary>
            Gets the DateTime for the recorder in a system which has the latest update.
            </summary>
            <param name="systemId"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Shared.LoginServerSvc.CorporateSystemInfo">
            <summary>
            Gets the coporate system info.
            </summary>
            <value>The coporate system info.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Shared.LoginServerSvc.GetSystemInfoAndLogin">
            <summary>
            Connects the server.
            </summary>
            <returns>true if connected else false.  The ServerGuid property has been filled (If available from server)</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Shared.LoginServerSvc.GetItemConfiguration(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get non-cached Item
            </summary>
            <param name="platformDefinitionId"></param>
            <param name="itemKind"></param>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.SiteInfoCache">
            <summary>
            Contains a cache of siteinfo and their result (good or no good)
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.Speaker">
            <summary>
            Represents a Speaker device. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Speaker.#ctor(VideoOS.Platform.SDK.Config.ISystemInfo,VideoOS.Platform.SDK.Config.IRecorder,System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.Speaker"/> class.
            </summary>
            <param name="systemInfo">The system info.</param>
            <param name="recorder">The recorder</param>
            <param name="node">The node.</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Speaker.ConnectionXml">
            <summary>
            Gets the connection XML.
            </summary>
            <value>The connection XML.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Speaker.BuildSpeakerConfigurationXml(System.String)">
            <summary>
            Returns a XML document containing an audiodevice configuration that can be used as parameter in the AudioPlayer ActiveX connect method.
            </summary>
            <param name="securityToken">The security token used when connecting to the device</param>
            <returns>XML document containing an audiodevice configuration for the specified device</returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.SpeakerCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Config.Speaker"/> objects.  
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SpeakerCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.IniFile">
            <summary>
            Class to handle a Ini file.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.ICamera.RelatedMetadataDevices">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of all metadata devices related to this camera.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.IRecorder.MetadataDevices">
            <summary>
            Gets all metadata devices on this <see cref="T:VideoOS.Platform.SDK.Config.IRecorder"/> instance indexed by <see cref="P:VideoOS.Platform.SDK.Config.IMetadataDevice.Id"/>.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.ISystemInfo.MetadataDevices">
            <summary>
            Gets all metadata devices in the system indexed by <see cref="P:VideoOS.Platform.SDK.Config.IMetadataDevice.Id"/>.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.SiteInfo">
            <summary>
            This class contains the information returned by XPCO and XPE in the SiteInfo.xml.
            The actual content is different from the two systems, and thereby some fields may not apply.
            When the SiteItem is constructed from this class, the informational fields are stored as Properties on the Item.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SiteInfoManager.UnpackSiteInfo(System.Uri,System.Xml.XmlNode,System.Boolean,System.Guid,System.Net.CredentialCache)">
            <summary>
            Methods to unpack a XML node to a SiteInfo item.
            It is called recursively for slaves / children.
            </summary>
            <param name="serverAddress"></param>
            <param name="xmlNode"></param>
            <param name="enterprise"></param>
            <param name="parentId"></param>
            <param name="credentialCache"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SiteInfoManager.UnpackSystemInfoToSite(System.Uri,System.Xml.XmlNode,System.Boolean,System.Guid,System.Net.CredentialCache)">
            <summary>
            For very old systems, (GetVersion == 2), we use Systeminfo.xml to build siteinfo
            </summary>
            <param name="serverAddress"></param>
            <param name="xmlNode"></param>
            <param name="enterprise"></param>
            <param name="parentId"></param>
            <param name="credentialCache"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SiteInfoManager.UnpackEngineInfo(System.Xml.XmlNode,System.Guid)">
            <summary>
            Methods to unpack a XML node to a SiteInfo item.
            It is called recursively for slaves / children.
            </summary>
            <param name="xmlNode"></param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SiteInfoManager.UnpackSiteInfoFromUri(System.Uri)">
            <summary>
            Create site info from fields on SystemInfo and LicenseManager
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SiteInfoManager.FillAddresses(VideoOS.Platform.SDK.Config.SiteInfo,System.Xml.XmlNode)">
            <summary>
            We may have both internal and external server addresses (For XPCO right now)
            The server internal's address is here defined with a type="Server"
            </summary>
            <param name="siteInfo"></param>
            <param name="node"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SiteInfoManager.FindSiteUriForUser(System.Uri,System.Boolean,System.Net.ICredentials,System.Boolean,System.Boolean@)">
            <summary>
            Find all sites where this user can login.  Only supported for AD users on XPCO
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SiteInfoManager.GetSiteInfoDocument(System.Uri,System.Boolean,System.Boolean,System.Net.ICredentials,System.Boolean,System.Boolean@)">
            <summary>
            Gets the SiteInfo.Xml document.
            </summary>
            <param name="serverAddress">The server address.</param>
            <param name="isBasic"></param>
            <param name="corpBasic"></param>
            <param name="credentials">The credentials.</param>
            <param name="enterprise">True if server is E-Code</param>
            <param name="unauthorized"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SiteInfoManager.GetEngineInfoDocument(System.Uri)">
            <summary>
            Gets the EngineInfo.Xml document (For Arcus only for now)
            </summary>
            <param name="serverAddress">The server address.</param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.Alert">
            <summary>
            Represent an Alert
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Alert.#ctor(System.Guid,VideoOS.Platform.SDK.Config.ISystemInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.Alert"/> class.
            </summary>
            <param name="guid">GUID for the alert.</param>
            <param name="systemInfo">A system information object to kling to.</param>
            <param name="name"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Alert.Guid">
            <summary>
            ID of the alert
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Alert.Name">
            <summary>
            Name of the alert
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Alert.GetAlerts(System.DateTime,VideoOS.Platform.SDK.Interface.ITimeDuration,System.Int32,VideoOS.Platform.SDK.Interface.ITimeDuration,System.Int32)">
            <summary>
            Get occurrences of this alert
            </summary>
            <param name="time"></param>
            <param name="timeBefore"></param>
            <param name="maxCountBefore"></param>
            <param name="timeAfter"></param>
            <param name="maxCountAfter"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.AlertCollection">
            <summary>
            Represent an alert collection
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.AlertCollection.Item(System.Guid)">
            <summary>
            Gets the <see cref="T:VideoOS.Platform.SDK.Config.Alert"/> corresponding to the specified id.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.AlertCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.Microphone">
            <summary>
            Represents a microphone device. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Microphone.#ctor(VideoOS.Platform.SDK.Config.ISystemInfo,VideoOS.Platform.SDK.Config.IRecorder,System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.Microphone"/> class.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Microphone.HostName">
            <summary>
            Gets the name of the host.
            </summary>
            <value>The name of the host.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Microphone.ServerUri">
            <summary>
            Gets the Server Uri.
            </summary>
            <value>The Server Uri.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Microphone.ConnectionXml">
            <summary>
            Gets the connection XML.
            </summary>
            <value>The connection XML.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Microphone.BuildMicrophoneConfigurationXml(System.String)">
            <summary>
            Returns a XML document containing an audiodevice configuration that can be used as parameter in the AudioPlayer ActiveX connect method.
            </summary>
            <param name="securityToken">The security token used when connecting to the device</param>
            <returns>XML document containing an audiodevice configuration for the specified device</returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.MicrophoneCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Config.IMicrophone"/> objects.  
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.MicrophoneCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.CameraOnServer">
            <summary>
            Represents a camera. 
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.Events">
            <summary>
            Gets the events.
            </summary>
            <value>The events.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.IpixEnabled">
            <summary>
            Gets a value indicating whether [ipix enabled].
            </summary>
            <value><c>true</c> if [ipix enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.PtzEnabled">
            <summary>
            Gets a value indicating whether camera is a PTZ enabled on camera.
            </summary>
            <value><c>true</c> if [PTZ enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.CenterOnPositionInViewSupported">
            <summary>
            Get the value indicating whether this camera supports PtzCenter operatino
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.PtzSettings">
            <summary>
            New property in order to work more like the Smart Client
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.HostName">
            <summary>
            Gets the name of the host.
            </summary>
            <value>The name of the host.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.Shortcut">
            <summary>
            Gets the shortcut.
            </summary>
            <value>The shortcut.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.ServerUri">
            <summary>
            Gets the Server Uri on which the XProtect server which holds the camera is listening. 
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.Microphone">
            <summary>
            Gets the audio device.
            </summary>
            <value>The audio device.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.Speaker">
            <summary>
            Gets the speaker device.
            </summary>
            <value>The speaker device.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.CameraOnServer.Presets">
            <summary>
            Gets the presets.
            </summary>
            <value>The presets.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.BuildCameraConfigurationXml(System.String,System.Guid)">
            <summary>
            Returns a XML document containing a camera configuration that can be used as parameter in the ImageViewer ActiveX connect method.
            </summary>
            <param name="securityToken">The security token used when connecting to the device</param>
            <param name="streamId"></param>
            <returns>
            XML document containing a camera configuration for the specified device
            </returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.WritePanoramicLensInformation(System.Xml.XmlTextWriter)">
            <summary>
            Use for export to Xpco db format
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.ToString">
            <summary>
            Returns the camera name
            </summary>
            <returns>Camera name</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.GetSequenceAtTimeMinutes(System.DateTime,System.TimeSpan,System.Int32,System.TimeSpan,System.Int32,System.Guid)">
            <summary>
            Gets the sequence at specified time.
            </summary>
            <param name="time">The time.</param>
            <param name="minutesBefore">Number of minutes before.</param>
            <param name="maxCountBefore">The max count before.</param>
            <param name="minutesAfter">Number of minutes after.</param>
            <param name="maxCountAfter">The max count after.</param>
            <param name="seqType"></param> 
            <returns>A collection of sequences</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.AddTheMissingFirst(System.DateTime,VideoOS.Platform.SDK.Config.SequenceCollection,System.TimeSpan,System.Guid)">
            <summary>
            This method add the one missing sequence at the start of the interval.
            </summary>
            <param name="beginTime"></param>
            <param name="result"></param>
            <param name="minutesBefore"></param>
            <param name="seqType"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.CutOffLastSequence(VideoOS.Platform.SDK.Config.SequenceCollection,System.Guid)">
            <summary>
            Enterprise does not complete a sequence, until the next motion detect has occcurred.
            this method tries to cut off to last recorded image.
            </summary>
            <param name="result"></param>
            <param name="seqType"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.MoveToPreset(System.String)">
            <summary>
            Moves to preset.
            </summary>
            <param name="presetName">Name of the preset.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzMoveRelative(VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes)">
            <summary>
            Move camera relative.
            </summary>
            <param name="moveRelative">The move relative.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzMoveRelative(VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes,System.Double,System.Double)">
            <summary>
            Move camera relative controlling speed and step size.
            </summary>
            <param name="moveRelative">The move relative.</param>
            <param name="speed">The speed with which to move. PtzMoveRelative() uses 1.0 for speed</param>
            <param name="step">The step to move. PtzMoveRelative() uses 1.0 for step</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzMoveAbsolute(System.Double,System.Double,System.Double)">
            <summary>
            Move to absolute position.
            </summary>
            <param name="pan">The pan.</param>
            <param name="tilt">The tilt.</param>
            <param name="zoom">The zoom.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzMoveAbsolute(VideoOS.Platform.SDK.Config.PTZArgs)">
            <summary>
            Move to absolute position.
            </summary>
            <param name="ptzArgs">The PTZ args.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzGetAbsolutePosition">
            <summary>
            Get absolute PTZ position.
            </summary>
            <returns>PTZArgs</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzMoveHome">
            <summary>
            PTZ move home.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzMoveStart(VideoOS.Platform.SDK.Config.PTZArgs)">
            <summary>
            Start to move.
            </summary>
            <param name="ptzArgs">The PTZ args.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzAuxOn(System.Int32)">
            <summary>
            PTZs the aux on 1..8
            </summary>
            <param name="auxNumber">1..8 </param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzAuxOff(System.Int32)">
            <summary>
            PTZs the move off 1..8
            </summary>
            <param name="auxNumber">1..8 </param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzMoveStop">
            <summary>
            Stop moving
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraOnServer.PtzCenter(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Move to center position.
            </summary>
            <param name="refWidth"></param>
            <param name="refHeight"></param>
            <param name="centerX"></param>
            <param name="centerY"></param>
            <param name="zoom"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.CameraCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Config.ICamera"/> objects.  
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.CameraCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.ConnectStates">
            <summary>
            Specifies the connection stste
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ConnectStates.Connected">
            <summary>
            Connected.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ConnectStates.NotConnected">
            <summary>
            Not connected.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ConnectStates.TryingToLogOn">
            <summary>
            Trying to log on.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ConnectStates.FailedToLogOn">
            <summary>
            Fail to log on.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.ConnectStates.FailedToConnect">
            <summary>
            Fail to connect.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.LoginServer.EnterpriseSystemInfo">
            <summary>
            Gets the enterprise system info.
            </summary>
            <value>The enterprise system info.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.LoginServer.CorporateSystemInfo">
            <summary>
            Gets the coporate system info.
            </summary>
            <value>The coporate system info.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.LoginServer.GetSystemInfoAndLogin">
            <summary>
            Connects the server.
            </summary>
            <returns>true if connected else false.  The ServerGuid property has been filled (If available from server)</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.LoginServer.GetImageServerDocument(System.Uri,System.Net.ICredentials,System.Boolean)">
            <summary>
            Gets the image server document.
            </summary>
            <param name="serverAddress">The server address.</param>
            <param name="credentials">The credentials.</param>
            <param name="masterOnly"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.LoginServer.GetItemConfiguration(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get non-cached Item
            </summary>
            <param name="platformDefinitionId"></param>
            <param name="itemKind"></param>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.MatrixMonitor">
            <summary>
            Represents a Matrix Monitor. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.MatrixMonitor.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.MatrixMonitor"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.MatrixMonitor.Guid">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.MatrixMonitor.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.MatrixMonitorCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Config.MatrixMonitor"/> objects.  
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.MatrixMonitorCollection.Item(System.Guid)">
            <summary>
            Gets the <see cref="T:VideoOS.Platform.SDK.Config.MatrixMonitor"/> at the specified Guid.
            </summary>
            <value></value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.MatrixMonitorCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.OutputDevice">
            <summary>
            Represents an output device. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.OutputDevice.#ctor(VideoOS.Platform.SDK.Config.IRecorder,System.Xml.XmlElement)">
            <summary>
            Initialzes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.OutputDevice"/> class.
            </summary>
            <param name="recorder">The recorder.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.OutputDevice.OutputActivate">
            <summary>
            Activates an output.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.OutputDevice.OutputDeactivate">
            <summary>
            Deactivates an output.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.OutputDevice.OutputGetState">
            <summary>
            Gets the status of the output.
            </summary>
            <returns>The current state of the output.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.OutputDevice.OutputTrigger(System.Int32)">
            <summary>
            Trigs an output.
            </summary>
            <param name="duration">Duration of the trigger in ms.</param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.OutputDeviceCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Config.OutputDevice"/> objects.  
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.OutputDeviceCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.Preset">
            <summary>
            Represents a Preset. 
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Preset.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.PresetCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Config.Preset"/> objects.  
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PresetCollection.IndexOf(VideoOS.Platform.SDK.Config.Preset)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"></see>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PresetCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:VideoOS.Platform.SDK.Config.Preset"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PresetCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:VideoOS.Platform.SDK.Config.Preset"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PresetCollection.Contains(VideoOS.Platform.SDK.Config.Preset)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PresetCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PresetCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PresetCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.IPTZName">
            <summary>
            Interface used for the inner working of <see cref="T:VideoOS.Platform.SDK.Config.PTZArgs"/>
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.IPTZName.Name">
            <summary>
            Name of the PTZ action
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.PTZPairDouble">
            <summary>
            Class used for the inner working of <see cref="T:VideoOS.Platform.SDK.Config.PTZArgs"/>
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZPairDouble.#ctor">
            <summary>
            Initializes a new instance of the PTZPairDouble class.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZPairDouble.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the PTZPairDouble class.
            </summary>
            <param name="name">PTZ command name</param>
            <param name="value">Command value</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZPairDouble.Name">
            <summary>
            Name of PTZ action
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PTZPairDouble.Value">
            <summary>
            Value for PTZ action
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.PTZPairBoolean">
            <summary>
            Class used for the inner working of <see cref="T:VideoOS.Platform.SDK.Config.PTZArgs"/>
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZPairBoolean.#ctor">
            <summary>
            Initializes a new instance of the PTZPairBoolean class.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZPairBoolean.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the PTZPairBoolean class.
            </summary>
            <param name="name">Name</param>
            <param name="value">Value</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZPairBoolean.Name">
            <summary>
            Name of PTZ action
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PTZPairBoolean.Value">
            <summary>
            Value for PTZ action
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.PTZArgs">
            <summary>
            Class containing aruguments for a PTZ movement of a device
            </summary> 
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PTZArgs.movement">
            <summary>
            Array of movement
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PTZArgs.speed">
            <summary>
            Array of speed
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PTZArgs.automatic">
            <summary>
            Array of automatic setting
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PTZArgs.Normalized">
            <summary>
            
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.#ctor">
            <summary>
            Initializes a new instance of the PTZArgs class.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.#ctor(VideoOS.Platform.SDK.Config.PTZArgs)">
            <summary>
            Initializes a new instance of the PTZArgs class.
            </summary>
            <param name="args">PTZArgs object</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.isAutoDefined(System.String)">
            <summary>
            Check is automatic operation is defined
            </summary>
            <param name="name">PTZ command string</param>
            <returns>true if auto defined else false</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.isAutoDefined(System.Guid)">
            <summary>
            Check is automatic operation is defined
            </summary>
            <param name="guid">Device guid</param>
            <returns>true if auto defined else false</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.SetAuto(System.String,System.Boolean)">
            <summary>
            Set automatic operation
            </summary>
            <param name="name">PTZ command name</param>
            <param name="value">PTZ command value</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.SetAuto(System.Guid,System.Boolean)">
            <summary>
            Set automatic operation
            </summary>
            <param name="guid">Device guid</param>
            <param name="value">Value</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.isPanAvailable">
            <summary>
            Check if Pan movement is defined
            </summary>
            <returns>true if the specified movement is available</returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.isTiltAvailable">
            <summary>
            Check if Tilt movement is defined
            </summary>
            <returns>true if the specified movement is available</returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.isZoomAvailable">
            <summary>
            Check if Zoom movement is defined
            </summary>
            <returns>true if the specified movement is available</returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.isPanSpeedAvailable">
            <summary>
            Check if PanSpeed is defined
            </summary>
            <returns>true if the specified speed is available</returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.isTiltSpeedAvailable">
            <summary>
            Check if TiltSpeed is defined
            </summary>
            <returns>true if the specified speed is available</returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.isZoomSpeedAvailable">
            <summary>
            Check if ZoomSpeed is defined
            </summary>
            <returns>true if the specified speed is available</returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.Pan">
            <summary>
            Get/Set Pan Movement
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.Tilt">
            <summary>
            Get/Set Tilt Movement
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.Zoom">
            <summary>
            Get/Set Zoom Movement
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.PanSpeed">
            <summary>
            Get/Set Pan Speed
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.TiltSpeed">
            <summary>
            Get/Set Tilt Speed
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.ZoomSpeed">
            <summary>
            Get/Set Zoom Speed
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.SetMovement(System.String,System.Double)">
            <summary>
            Set a value for a given movement
            </summary>
            <param name="name">Name of the movement</param>
            <param name="value">Value for the movement</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.SetSpeed(System.String,System.Double)">
            <summary>
            Set speed for a given movement
            </summary>
            <param name="name">Name of the movement</param>
            <param name="value">Speed value</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.isAvailable(System.String)">
            <summary>
            Check if a specific movement is defined
            </summary>
            <param name="name">Name to check</param>
            <returns>true if the specified movement is available</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.isSpeedAvailable(System.String)">
            <summary>
            Check if a specific speed is defined
            </summary>
            <param name="name">Name to check</param>
            <returns>true if the specified speed is available</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.GetMovement(System.String)">
            <summary>
            Get movement position
            </summary>
            <param name="name">Name to retrieve movement position for</param>
            <returns>Movement position or Double.NaN if no movement position is defined for the given name</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.PTZArgs.GetSpeed(System.String)">
            <summary>
            Get movement speed
            </summary>
            <param name="name">Name to retrieve movement speed for</param>
            <returns>Movement speed or Double.NaN if no movement speed is defined for the given name</returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.PTZArgs.Item(System.String)">
            <summary>
            Get or Set Movement information
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes">
            <summary>
            Ptz relative move 
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.Up">
            <summary>
            Move up
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.UpRight">
            <summary>
            Move up right
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.Right">
            <summary>
            Move right
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.DownRight">
            <summary>
            Move down right
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.Down">
            <summary>
            Move down
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.DownLeft">
            <summary>
            Move down left
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.Left">
            <summary>
            Move left
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.UpLeft">
            <summary>
            Move up left
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.Home">
            <summary>
            Move home
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.ZoomIn">
            <summary>
            Zoom in
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes.ZoomOut">
            <summary>
            Zoom out
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.Recorder">
            <summary>
            Represents a recorder. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.#ctor(VideoOS.Platform.SDK.Config.ISystemInfo,System.Xml.XmlDocument)">
            <summary>
            USe for single camera adding
            </summary>
            <param name="systemInfo"></param>
            <param name="doc"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.Cleanup">
            <summary>
            Should possible be made to a Dispose, but it is not called yet!!
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.XmlEncoding">
            <summary>
            Returns the XML encoding used by this recorder, pt "utf-8" or ""
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.Guid">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.HostName">
            <summary>
            Gets the hostname.
            </summary>
            <value>The hostname.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.Port">
            <summary>
            Gets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.Cameras">
            <summary>
            Gets the cameras.
            </summary>
            <value>The cameras.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.Microphones">
            <summary>
            Gets the audio devices.
            </summary>
            <value>The audio devices.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.Speakers">
            <summary>
            Gets the audio devices.
            </summary>
            <value>The audio devices.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.Events">
            <summary>
            Gets the events.
            </summary>
            <value>The events.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.OutputDevices">
            <summary>
            Gets the output devices.
            </summary>
            <value>The output devices.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.ToString">
            <summary>
            Overide ToString
            </summary>
            <returns>name</returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Recorder.MatrixMonitors">
            <summary>
            Gets the matrix monitors.
            </summary>
            <value>The matrix monitors.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.GetSequenceAtTimeMinutes(System.Guid,System.DateTime,System.TimeSpan,System.Int32,System.TimeSpan,System.Int32,System.Guid)">
            <summary>
            Gets the sequence at time.
            </summary>
            <param name="deviceGuid">The device id.</param>
            <param name="time">The time.</param>
            <param name="minutesBefore">The hours before.</param>
            <param name="maxCountBefore">The max count before.</param>
            <param name="minutesAfter">The hours after.</param>
            <param name="maxCountAfter">The max count after.</param>
            <param name="seqType"></param>
            <returns>A collection of sequences</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.GetTimeLineInformation(System.Guid,System.Guid[],System.DateTime,System.Int32,System.Int32)">
            <summary>
            Returns timeline data arrays with 0's and 1's indicating if data is available
            </summary>
            <param name="deviceGuid">A device Id Guid.</param>
            <param name="types">An array of Guids describing the desired types.</param>
            <param name="beginTime">The start time for the returned data</param>
            <param name="interval">The interval between each data value in seconds.</param>
            <param name="maxCount">The maximum number of values in each data array</param>
            <returns>A collection of TimeLineInformations</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.MoveToPreset(System.String,System.String)">
            <summary>
            Moves to preset.
            </summary>
            <param name="deviceId">The device id.</param>
            <param name="presetName">Name of the preset.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.ConvertPTZArgsToService(VideoOS.Platform.SDK.Config.PTZArgs)">
            <summary>
            Converts the PTZ args to service.
            </summary>
            <param name="ptzArgs">The PTZ args.</param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.ConvertPTZArgsFromService(VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs)">
            <summary>
            Converts the PTZ args from service.
            </summary>
            <param name="ptzArgs">The PTZ args.</param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzMoveAction(VideoOS.Platform.SDK.Config.ICamera,VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes)">
            <summary>
            Cameras the PTZ move action.
            </summary>
            <param name="device">The device.</param>
            <param name="ptzMoveType">Type of the PTZ move.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzMoveAction(VideoOS.Platform.SDK.Config.ICamera,VideoOS.Platform.SDK.Config.PtzMoveRelativeTypes,System.Double,System.Double)">
            <summary>
            Cameras the PTZ move action.
            </summary>
            <param name="device">The device.</param>
            <param name="ptzMoveType">Type of the PTZ move.</param>
            <param name="speed">The speed with which to move.</param>
            <param name="step">The step to move.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzMoveActionAbsolute(VideoOS.Platform.SDK.Config.ICamera,System.Double,System.Double,System.Double)">
            <summary>
            Cameras the PTZ move action absolute.
            </summary>
            <param name="camera">The camera.</param>
            <param name="pan">Pan command in absolute coordinates.</param>
            <param name="tilt">Tilt command in absolute coordinates.</param>
            <param name="zoom">Zoom command in absolute coordinates.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzMoveActionAbsolute(VideoOS.Platform.SDK.Config.ICamera,VideoOS.Platform.SDK.Config.PTZArgs)">
            <summary>
            Cameras the PTZ move action absolute.
            </summary>
            <param name="camera">The camera.</param>
            <param name="ptzArgs">An PTZargs object.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.PtzGetAbsolutePosition(VideoOS.Platform.SDK.Config.ICamera)">
            <summary>
            Get absolute PTZ position .
            </summary>
            <param name="camera">The camera.</param>
            <returns>An PTZArgs</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.PtzMoveHome(VideoOS.Platform.SDK.Config.ICamera)">
            <summary>
            PTZ move home.
            </summary>
            <param name="camera">The camera.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzMoveStart(VideoOS.Platform.SDK.Config.ICamera,VideoOS.Platform.SDK.Config.PTZArgs)">
            <summary>
            Start moving a camera.
            </summary>
            <param name="camera">The camera.</param>
            <param name="ptzArgs">An PTZargs object.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzAuxOn(VideoOS.Platform.SDK.Config.ICamera,System.Int32)">
            <summary>
            PTZs the aux on 1, 2, 3 or 4.
            </summary>
            <param name="camera">A camera</param>
            <param name="auxNumber">1 , 2 , 3 wipe,  4 </param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzAuxOff(VideoOS.Platform.SDK.Config.ICamera,System.Int32)">
            <summary>
            PTZs the aux off 1, 2, 3 or 4.
            </summary>
            <param name="camera">A camera</param>
            <param name="auxNumber">1 , 2 , 3 wipe,  4 </param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzMoveStop(VideoOS.Platform.SDK.Config.ICamera)">
            <summary>
            Stop moving a camera.
            </summary>
            <param name="camera">The camera.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.CameraPtzCenter(VideoOS.Platform.SDK.Config.ICamera,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            PTZ center command
            </summary>
            <param name="camera">The target camera</param>
            <param name="refWidth">The Image width used to resolve the X position</param>
            <param name="refHeight">The Image width used to resolve the Y position</param>
            <param name="centerX">The new x postion in pixels</param>
            <param name="centerY">The new y postion in pixels</param>
            <param name="zoom">zoom value 0..1000. Usually no effect</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.OutputActivate(System.String)">
            <summary>
            Activates an output.
            </summary>
            <param name="deviceId">Id of the output device.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.OutputDeactive(System.String)">
            <summary>
            Deactivates an output.
            </summary>
            <param name="deviceId">Id of the output device.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.OutputGetState(System.String)">
            <summary>
            Gets the status of the output.
            </summary>
            <param name="deviceId">Id of the output device.</param>
            <returns>The current state of the output.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Recorder.OuputTrigger(System.String,System.Int32)">
            <summary>
            Trigs an output.
            </summary>
            <param name="deviceId">Id of the output device</param>
            <param name="duration">Duration of the trigger in ms.</param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.RecorderCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Config.IRecorder"/> objects.  
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.RecorderCollection.IndexOf(VideoOS.Platform.SDK.Config.IRecorder)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"></see>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.RecorderCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:VideoOS.Platform.SDK.Config.IRecorder"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.RecorderCollection.Contains(VideoOS.Platform.SDK.Config.IRecorder)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.RecorderCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.RecorderCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.Sequence">
            <summary>
            Represent an sequence (Start time, Trigger time, End time)
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Sequence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.Sequence"/> class.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.Sequence.#ctor(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.Sequence"/> class.
            </summary>
            <param name="begin">The begin.</param>
            <param name="trigger">The trigger.</param>
            <param name="end">The end.</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Sequence.BeginTime">
            <summary>
            Gets the begin time.
            </summary>
            <value>The begin time.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Sequence.TriggerTime">
            <summary>
            Gets the trigger time.
            </summary>
            <value>The trigger time.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.Sequence.EndTime">
            <summary>
            Gets the end time.
            </summary>
            <value>The end time.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.SequenceCollection">
            <summary>
            Represents a sequence.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.CreateSequenceCollection(VideoOS.Platform.SDK.Proxy.RecorderServices.SequenceEntry[])">
            <summary>
            Creates the sequence collection.
            </summary>
            <param name="sequences">The sequences.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.IndexOf(VideoOS.Platform.SDK.Config.Sequence)">
            <summary>
            Index of item.
            </summary>
            <param name="item">The item.</param>
            <returns>A sequence</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.System#Collections#Generic#IList{VideoOS#Platform#SDK#Config#Sequence}#Insert(System.Int32,VideoOS.Platform.SDK.Config.Sequence)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.System#Collections#Generic#IList{VideoOS#Platform#SDK#Config#Sequence}#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SequenceCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:VideoOS.Platform.SDK.Config.Sequence"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#Sequence}#Add(VideoOS.Platform.SDK.Config.Sequence)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#Sequence}#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.Contains(VideoOS.Platform.SDK.Config.Sequence)">
            <summary>
            Determines whether the sequence contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#Sequence}#CopyTo(VideoOS.Platform.SDK.Config.Sequence[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SequenceCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SequenceCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#Sequence}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#Sequence}#Remove(VideoOS.Platform.SDK.Config.Sequence)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SequenceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.SystemInfo">
            <summary>
            Represents a the system information from a server. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SystemInfo.#ctor(VideoOS.Platform.Login.LoginSettings,VideoOS.Platform.UserContext)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.ISystemInfo"/> class.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Config.SystemInfo.InstanceId">
            <summary>
            Uniquely identify this SystemInfo class
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.AuthenticationType">
            <summary>
            Authentication type (Basic, Windows, WindowsDefault)
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.ConfigurationInfo">
            <summary>
            Corporate configuration info
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SystemInfo.ProductSupportOfKind(System.Guid)">
            <summary>
            Return how to suppport the key Kinds
            </summary>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Port">
            <summary>
            Gets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
            	<c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Invalidated">
            <summary>
            Gets a value indicating whether this instance is invalidated.
            </summary>
            <value>
            	<c>true</c> if this instance is invalidated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.ServerType">
            <summary>
            Gets the server type.
            </summary>
            <value>The type of the get server.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Cameras">
            <summary>
            Gets the cameras.
            </summary>
            <value>The cameras.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Recorders">
            <summary>
            Gets the engines.
            </summary>
            <value>The engines.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Microphones">
            <summary>
            Gets the audio devices.
            </summary>
            <value>The audio devices.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Speakers">
            <summary>
            Gets the audio devices.
            </summary>
            <value>The audio devices.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Events">
            <summary>
            Gets the event types defined.
            </summary>
            <value>The events.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Alerts">
            <summary>
            Gets the alert types defined.
            </summary>
            <value>The events.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.OutputDevices">
            <summary>
            Gets the output devices.
            </summary>
            <value>The output devices.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.MatrixMonitors">
            <summary>
            Gets the matrix monitors.
            </summary>
            <value>The matrix monitors.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.Token">
            <summary>
            Gets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SystemInfo.ConstructLoginServer(System.Boolean)">
            <summary>
            Changes from previous version:
            1) _uri is used as server identification, was LoginSettings.Name
            2) FindBestAddress is used for identifying servertype and connect method
            3) Server type is cached
            </summary>
            <param name="ignoreAdBasic"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SystemInfo.Disconnect">
            <summary>
            Disconnect (Logout) and invalidate the current Token.
            Note: Works from XPE version 7.0a and XPCO version 3.0a
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.SystemInfo.RebuildDeviceCollections">
            <summary>
            Rebuild device collections, without modifying - e.g. just replace entire collection (To avoid collection modified exceptions)
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.LoginServer">
            <summary>
            Gets the login server.
            </summary>
            <value>The login server.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.SystemInfo.LastHardwareUpdate">
            <summary>
            Contains the timestamp of the last known hardware update
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.TimeLineInformation">
            <summary>
            Represents TimeLineInformationData
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.TimeLineInformation"/> class.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformation.#ctor(System.Guid,System.Guid,System.DateTime,System.Int64,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Config.TimeLineInformation"/> class.
            </summary>
            <param name="deviceId">The device Id.</param>
            <param name="type">The type.</param>
            <param name="begin">The begin.</param>
            <param name="interval">The interval.</param>
            <param name="count">The count.</param>
            <param name="data">The data.</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformation.DeviceId">
            <summary>
            Gets the device Id.
            </summary>
            <value>The device Id.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformation.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformation.BeginTime">
            <summary>
            Gets the begin time.
            </summary>
            <value>The begin time.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformation.Interval">
            <summary>
            Gets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformation.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformation.Data">
            <summary>
            Gets the data string.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.TimeLineInformationCollection">
            <summary>
            Represents a sequence.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.CreateTimeLineInformationCollection(VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationData[])">
            <summary>
            Creates the sequence collection.
            </summary>
            <param name="TimeLineInformations">The sequences.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.IndexOf(VideoOS.Platform.SDK.Config.TimeLineInformation)">
            <summary>
            Index of item.
            </summary>
            <param name="item">The item.</param>
            <returns>A sequence</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.System#Collections#Generic#IList{VideoOS#Platform#SDK#Config#TimeLineInformation}#Insert(System.Int32,VideoOS.Platform.SDK.Config.TimeLineInformation)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.System#Collections#Generic#IList{VideoOS#Platform#SDK#Config#TimeLineInformation}#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:VideoOS.Platform.SDK.Config.TimeLineInformation"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#TimeLineInformation}#Add(VideoOS.Platform.SDK.Config.TimeLineInformation)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#TimeLineInformation}#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.Contains(VideoOS.Platform.SDK.Config.TimeLineInformation)">
            <summary>
            Determines whether the sequence contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#TimeLineInformation}#CopyTo(VideoOS.Platform.SDK.Config.TimeLineInformation[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#TimeLineInformation}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.System#Collections#Generic#ICollection{VideoOS#Platform#SDK#Config#TimeLineInformation}#Remove(VideoOS.Platform.SDK.Config.TimeLineInformation)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.TimeLineInformationCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.XpeEvent">
            <summary>
            Represents an Event with XProtect Corporate, Enterprise and Professional. 
            Xpe shall be read as "XProtect Event", not as the three letter acronym XPE for XProtect Enterprise.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.XpeEvent.FullName">
            <summary>
            Gets the full name.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.XpeEvent.EventType">
            <summary>
            Gets the type of the event.
            </summary>
            <value>The type of the event.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.XpeEvent.IsCameraEvent">
            <summary>
            Gets a value indicating whether this instance is camera event.
            </summary>
            <value>
            	<c>true</c> if this instance is camera event; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEvent.Trigger">
            <summary>
            Triggers an event. The event must be a Corporate custom event or an Enterprise manual event.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEvent.Trigger(VideoOS.Platform.SDK.Config.ICamera)">
            <summary>
            Triggers an event with a camera GUID as metadata. 
            </summary>
            <param name="camera">A camera</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEvent.Trigger(System.Guid)">
            <summary>
            Triggers an event with a camera GUID as metadata.
            </summary>
            <param name="cameraId">A id of camera</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEvent.Trigger(System.Collections.Generic.List{System.Guid})">
            <summary>
            Triggers an event with a list of camera GUIDs as metadata.
            </summary>
            <param name="cameraIdList">A list of ids of cameras</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEvent.Trigger(VideoOS.Platform.SDK.Proxy.Server.GroupInfo)">
            <summary>
            Triggers an event with the device GUIDs from a group as metadata.
            </summary>
            <param name="deviceGroupInfo">A device group like a CameraGroupInfo</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEvent.Trigger(System.String,System.String)">
            <summary>
            Triggers an event with GUID(s) as metadata. The event must be a Corporate custom event.
            </summary>
            <param name="device">The GUID for one individual devices like a camera. May be null.</param>
            <param name="deviceGroup">The GUID for a device group. May be null.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEvent.Trigger(System.String[],System.String[])">
            <summary>
            Triggers an event with device and/or group GUIDs as metadata. The event must be a Corporate custom event.
            </summary>
            <param name="devices">GUID(s) for one or more individual devices like cameras. May be null.</param>
            <param name="deviceGroups">GUID(s) for one or more device groups. May be null.</param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Config.XpeEventCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Config.XpeEvent"/> objects.  
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEventCollection.IndexOf(VideoOS.Platform.SDK.Config.XpeEvent)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"></see>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.XpeEventCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:VideoOS.Platform.SDK.Config.XpeEvent"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEventCollection.Contains(VideoOS.Platform.SDK.Config.XpeEvent)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Config.XpeEventCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Config.XpeEventCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.EventSource.Undefined">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.EventSource.Device">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.EventSource.External">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.EventSource.Hardware">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.EventSource.Recorder">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.EventSource.Server">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.EventSource.System">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.EventSource.Timer">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.IMediaDeviceType.Camera">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.IMediaDeviceType.Microphone">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.IMediaDeviceType.Speaker">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.SetCustomSettingResultType.UnspecifiedError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.SetCustomSettingResultType.Success">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.SetCustomSettingResultType.ModifiedError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.SetViewGroupDataResultType.UnspecifiedError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.SetViewGroupDataResultType.Success">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.SetViewGroupDataResultType.ReadOnlyError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.SetViewGroupDataResultType.ModifiedError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Interface.ViewGroupType.Normal">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.#ctor">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetVersionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetServerVersionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.LoginCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.LogoutCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetVmoServicesListCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetSmartClientVersionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CheckSmartClientVersionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetProductInfoCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetSystemLicenseInfoCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetUserInfoCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetViewGroupsCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetViewGroupDataCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetViewGroupDataCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetCustomSettingDataGlobalCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetCustomSettingDataUserCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetCustomSettingDataGlobalCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetCustomSettingDataUserCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EventTriggerCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EventTriggerWithMetadataCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.AlertsGetAroundWithSpanCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MatrixMonitorActivateCameraCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MatrixMonitorActivateScriptCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.QueryChangesCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.QueryRecorderInfoCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetConfigurationCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkGetNewReferenceCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkCreateCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkUpdateCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkDeleteCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkGetCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkSearchTimeCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkSearchFromBookmarkCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.AuthorizeCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataGetNewReferenceCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataCreateCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataUpdateCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataDeleteCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataGetCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataSearchCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetClientProfileCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetPresetsCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.DeletePresetCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.UpdatePresetNameCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.UpdatePresetPositionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CreatePresetCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.OrderPresetsCompleted">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetVersion">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetVersion(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetVersion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetVersionAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetVersionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetServerVersion">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetServerVersion(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetServerVersion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetServerVersionAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetServerVersionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.Login(System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginLogin(System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndLogin(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.LoginAsync(System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.LoginAsync(System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.Logout(System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginLogout(System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndLogout(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.LogoutAsync(System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.LogoutAsync(System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetDevicesDisabled">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetVmoServicesList">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetVmoServicesList(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetVmoServicesList(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetVmoServicesListAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetVmoServicesListAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetSmartClientVersion">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetSmartClientVersion(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetSmartClientVersion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetSmartClientVersionAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetSmartClientVersionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CheckSmartClientVersion(System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginCheckSmartClientVersion(System.Int32,System.Int32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndCheckSmartClientVersion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CheckSmartClientVersionAsync(System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CheckSmartClientVersionAsync(System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetProductInfo">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetProductInfo(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetProductInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetProductInfoAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetProductInfoAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.IsOnline">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetSystemLicenseInfo">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetSystemLicenseInfo(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetSystemLicenseInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetSystemLicenseInfoAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetSystemLicenseInfoAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetUserInfo(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetUserInfo(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetUserInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetUserInfoAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetUserInfoAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetViewGroups(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetViewGroups(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetViewGroups(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetViewGroupsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetViewGroupsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetViewGroupData(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetViewGroupData(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetViewGroupData(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetViewGroupDataAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetViewGroupDataAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetViewGroupData(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.ViewGroupData)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginSetViewGroupData(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.ViewGroupData,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndSetViewGroupData(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetViewGroupDataAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.ViewGroupData)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetViewGroupDataAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.ViewGroupData,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetCustomSettingDataGlobal(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetCustomSettingDataGlobal(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetCustomSettingDataGlobal(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetCustomSettingDataGlobalAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetCustomSettingDataGlobalAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetCustomSettingDataUser(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetCustomSettingDataUser(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetCustomSettingDataUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetCustomSettingDataUserAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetCustomSettingDataUserAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetCustomSettingDataGlobal(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.CustomSettingData,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginSetCustomSettingDataGlobal(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.CustomSettingData,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndSetCustomSettingDataGlobal(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetCustomSettingDataGlobalAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.CustomSettingData,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetCustomSettingDataGlobalAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.CustomSettingData,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetCustomSettingDataUser(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.CustomSettingData,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginSetCustomSettingDataUser(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.CustomSettingData,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndSetCustomSettingDataUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetCustomSettingDataUserAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.CustomSettingData,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.SetCustomSettingDataUserAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.CustomSettingData,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EventTrigger(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginEventTrigger(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndEventTrigger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EventTriggerAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EventTriggerAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EventTriggerWithMetadata(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.KeyValue[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginEventTriggerWithMetadata(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.KeyValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndEventTriggerWithMetadata(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EventTriggerWithMetadataAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.KeyValue[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EventTriggerWithMetadataAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.KeyValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.AlertsGetAroundWithSpan(System.String,System.Guid[],System.DateTime,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginAlertsGetAroundWithSpan(System.String,System.Guid[],System.DateTime,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndAlertsGetAroundWithSpan(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.AlertsGetAroundWithSpanAsync(System.String,System.Guid[],System.DateTime,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.AlertsGetAroundWithSpanAsync(System.String,System.Guid[],System.DateTime,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MatrixMonitorActivateCamera(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginMatrixMonitorActivateCamera(System.String,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndMatrixMonitorActivateCamera(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MatrixMonitorActivateCameraAsync(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MatrixMonitorActivateCameraAsync(System.String,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MatrixMonitorActivateScript(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginMatrixMonitorActivateScript(System.String,System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndMatrixMonitorActivateScript(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MatrixMonitorActivateScriptAsync(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MatrixMonitorActivateScriptAsync(System.String,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.QueryChanges(System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginQueryChanges(System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndQueryChanges(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.QueryChangesAsync(System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.QueryChangesAsync(System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.QueryRecorderInfo(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginQueryRecorderInfo(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndQueryRecorderInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.QueryRecorderInfoAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.QueryRecorderInfoAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetConfiguration(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetConfiguration(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetConfiguration(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetConfigurationAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetConfigurationAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetConfigurationHardware(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetConfigurationRecorders(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkGetNewReference(System.String,System.Guid,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginBookmarkGetNewReference(System.String,System.Guid,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndBookmarkGetNewReference(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkGetNewReferenceAsync(System.String,System.Guid,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkGetNewReferenceAsync(System.String,System.Guid,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkCreate(System.String,System.Guid,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginBookmarkCreate(System.String,System.Guid,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndBookmarkCreate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkCreateAsync(System.String,System.Guid,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkCreateAsync(System.String,System.Guid,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkUpdate(System.String,System.Guid,System.Guid,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginBookmarkUpdate(System.String,System.Guid,System.Guid,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndBookmarkUpdate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkUpdateAsync(System.String,System.Guid,System.Guid,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkUpdateAsync(System.String,System.Guid,System.Guid,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkDelete(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginBookmarkDelete(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndBookmarkDelete(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkDeleteAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkDeleteAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkGet(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginBookmarkGet(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndBookmarkGet(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkGetAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkGetAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkSearchTime(System.String,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType[],System.Guid[],System.String[],System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginBookmarkSearchTime(System.String,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType[],System.Guid[],System.String[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndBookmarkSearchTime(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkSearchTimeAsync(System.String,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType[],System.Guid[],System.String[],System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkSearchTimeAsync(System.String,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType[],System.Guid[],System.String[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkSearchFromBookmark(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType[],System.Guid[],System.String[],System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginBookmarkSearchFromBookmark(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType[],System.Guid[],System.String[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndBookmarkSearchFromBookmark(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkSearchFromBookmarkAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType[],System.Guid[],System.String[],System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BookmarkSearchFromBookmarkAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.Server.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType[],System.Guid[],System.String[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.Authorize(System.String,VideoOS.Platform.SDK.Proxy.Server.AuthorizationActionType)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginAuthorize(System.String,VideoOS.Platform.SDK.Proxy.Server.AuthorizationActionType,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndAuthorize(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.AuthorizeAsync(System.String,VideoOS.Platform.SDK.Proxy.Server.AuthorizationActionType)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.AuthorizeAsync(System.String,VideoOS.Platform.SDK.Proxy.Server.AuthorizationActionType,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataGetNewReference(System.String,System.Guid[],System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginMarkedDataGetNewReference(System.String,System.Guid[],System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndMarkedDataGetNewReference(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataGetNewReferenceAsync(System.String,System.Guid[],System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataGetNewReferenceAsync(System.String,System.Guid[],System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataCreate(System.String,System.Guid,System.Guid[],System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.RetentionOption)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginMarkedDataCreate(System.String,System.Guid,System.Guid[],System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.RetentionOption,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndMarkedDataCreate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataCreateAsync(System.String,System.Guid,System.Guid[],System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.RetentionOption)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataCreateAsync(System.String,System.Guid,System.Guid[],System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.RetentionOption,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataUpdate(System.String,System.Guid,System.Guid[],System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.RetentionOption)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginMarkedDataUpdate(System.String,System.Guid,System.Guid[],System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.RetentionOption,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndMarkedDataUpdate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataUpdateAsync(System.String,System.Guid,System.Guid[],System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.RetentionOption)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataUpdateAsync(System.String,System.Guid,System.Guid[],System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Int32,System.Boolean,System.DateTime,VideoOS.Platform.SDK.Proxy.Server.RetentionOption,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataDelete(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginMarkedDataDelete(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndMarkedDataDelete(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataDeleteAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataDeleteAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataGet(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginMarkedDataGet(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndMarkedDataGet(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataGetAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataGetAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataSearch(System.String,System.Guid[],System.String,System.String[],System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,VideoOS.Platform.SDK.Proxy.Server.SortOrderOption,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginMarkedDataSearch(System.String,System.Guid[],System.String,System.String[],System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,VideoOS.Platform.SDK.Proxy.Server.SortOrderOption,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndMarkedDataSearch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataSearchAsync(System.String,System.Guid[],System.String,System.String[],System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,VideoOS.Platform.SDK.Proxy.Server.SortOrderOption,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.MarkedDataSearchAsync(System.String,System.Guid[],System.String,System.String[],System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,VideoOS.Platform.SDK.Proxy.Server.SortOrderOption,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetClientProfile(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetClientProfile(System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetClientProfile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetClientProfileAsync(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetClientProfileAsync(System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetPresets(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginGetPresets(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndGetPresets(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetPresetsAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.GetPresetsAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.DeletePreset(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginDeletePreset(System.String,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndDeletePreset(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.DeletePresetAsync(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.DeletePresetAsync(System.String,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.UpdatePresetName(System.String,System.Guid,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginUpdatePresetName(System.String,System.Guid,System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndUpdatePresetName(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.UpdatePresetNameAsync(System.String,System.Guid,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.UpdatePresetNameAsync(System.String,System.Guid,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.UpdatePresetPosition(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginUpdatePresetPosition(System.String,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndUpdatePresetPosition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.UpdatePresetPositionAsync(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.UpdatePresetPositionAsync(System.String,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CreatePreset(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginCreatePreset(System.String,System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndCreatePreset(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CreatePresetAsync(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CreatePresetAsync(System.String,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.OrderPresets(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.BeginOrderPresets(System.String,System.Guid,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.EndOrderPresets(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.OrderPresetsAsync(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.OrderPresetsAsync(System.String,System.Guid,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Server.ServerCommandService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.AlertOccurrence">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AlertOccurrence.AlertId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AlertOccurrence.Time">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.AlertsGetAroundWithSpanCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AlertsGetAroundWithSpanCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.AlertTypeGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AlertTypeGroupInfo.AlertTypeGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AlertTypeGroupInfo.AlertTypes">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.AlertTypeInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AlertTypeInfo.AlertTypeId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AlertTypeInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AlertTypeInfo.Description">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ApplicationSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ApplicationSecurityInfo.SmartClientSecurity">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.Bookmark">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.Id">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.Reference">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.Header">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.Description">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.User">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.TimeBegin">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.TimeTrigged">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Bookmark.TimeEnd">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkCreateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkCreateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkGetCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkGetCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkGetNewReferenceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkGetNewReferenceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkReference">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkReference.Reference">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkReference.Time">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkSearchFromBookmarkCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkSearchFromBookmarkCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkSearchTimeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkSearchTimeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkSettingInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkSettingInfo.DefaultPreTimeSec">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkSettingInfo.DefaultPostTimeSec">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkUpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.BookmarkUpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataGetNewReferenceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataGetNewReferenceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataCreateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataCreateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataUpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataUpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataDeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataDeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataGetCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataGetCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataSearchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataSearchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataReference">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataReference.Reference">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataReference.Time">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataResult">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataResult.MarkedData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataResult.FaultDevices">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedDataResult.Status">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.Id">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.DeviceIds">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.Created">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.LastModified">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.Reference">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.Header">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.Description">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.User">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.StartTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.TagTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.EndTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.UseRetention">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.RetentionExpire">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.RetentionSize">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MarkedData.RetentionOption">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.FaultDevice">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.FaultDevice.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.FaultDevice.ErrorCode">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.FaultDevice.Message">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.FaultDevice.Source">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.RetentionOption">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RetentionOption.RetentionUnits">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RetentionOption.RetentionOptionType">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CameraGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraGroupInfo.CameraGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraGroupInfo.Cameras">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CameraInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.MaxFPS">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.BrowsableStream">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.Streams">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.Tracks">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.CameraSecurity">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.PtzSettings">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.IpixSettings">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.PanoramicLensSettings">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.MulticastEnabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.EdgeStorageSupported">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.EdgeStoragePlayback">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraInfo.StopManualRecordingSeconds">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.Live">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.Browse">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.ExportAvi">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.ExportJpeg">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.SmartSearch">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.GetSequences">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.ExportDatabase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.StartRecording">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.StopRecording">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.PtzSecurity">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.BookmarkView">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.BookmarkAdd">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.BookmarkEdit">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.BookmarkDelete">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.RetentionView">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.RetentionCreate">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.RetentionRemove">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.ManagePresets">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.ManagePatrollingProfiles">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CameraSecurityInfo.RetrieveEdgeRecordings">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo.CapabilityId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo.Absolute">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo.Relative">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo.Start">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo.Stop">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo.Speed">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CapabilityInfo.Automatic">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.Change">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Change.ChangeType">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.Change.Id">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ChangeType">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ChangeType.Recorder">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ChangeType.Hardware">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CheckSmartClientVersionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CheckSmartClientVersionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ClientProfile">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfile.Id">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfile.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfile.Description">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfile.LastModified">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfile.SettingsLastModified">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfile.ClientProfileSettings">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ClientProfileSetting">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfileSetting.Key">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfileSetting.Value">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ClientProfileSetting.Locked">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.RetentionSettingInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RetentionSettingInfo.RetentionOptions">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.ServerId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.ServerName">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.ServerDescription">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.ServerOptions">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.Recorders">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.ApplicationAccess">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.FailoverCheckInterval">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.Licenses">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.DeviceMappings">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.CameraGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.InputGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.OutputGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.MicrophoneGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.SpeakerGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.EventTypeGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.EventTypes">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.SystemEventTypes">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.AlertTypeGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.AlertTypes">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.MatrixMonitors">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.BookmarkSettings">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ConfigurationInfo.RetentionSettings">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CreatePresetCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CreatePresetCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CustomSetting">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CustomSetting.CustomSettingInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CustomSetting.CustomSettingData">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CustomSettingData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CustomSettingData.DataVersion">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CustomSettingData.CustomSettingDataXml">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CustomSettingInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CustomSettingInfo.Id">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CustomSettingInfo.LastModifiedTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.CustomSettingInfo.LastModifiedUser">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.RecorderId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.HardwareId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.Description">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.Shortcut">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.DeviceIndex">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.GisPoint">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.ShortName">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.Icon">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.CoverageDirection">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.CoverageDepth">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceInfo.CoverageFieldOfView">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.DeviceMappingInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceMappingInfo.DeviceA">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DeviceMappingInfo.DeviceB">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.DictionaryEntry">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DictionaryEntry.Key">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.DictionaryEntry.Value">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.EventTypeGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.EventTypeGroupInfo.EventTypeGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.EventTypeGroupInfo.EventTypes">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.EventTypeInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.EventTypeInfo.EventTypeId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.EventTypeInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.EventTypeInfo.Description">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetClientProfileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetClientProfileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetConfigurationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetConfigurationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetCustomSettingDataGlobalCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetCustomSettingDataGlobalCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetCustomSettingDataUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetCustomSettingDataUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetPresetsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetPresetsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetProductInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetProductInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetServerVersionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetServerVersionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetSmartClientVersionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetSmartClientVersionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetSystemLicenseInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetSystemLicenseInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetUserInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetUserInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetVersionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetVersionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetVmoServicesListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetVmoServicesListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GroupInfo.GroupId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GroupInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GroupInfo.Description">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.HardwareInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HardwareInfo.HardwareId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HardwareInfo.DeviceIds">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HardwareInfo.RecorderId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HardwareInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HardwareInfo.Description">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HardwareInfo.Uri">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HardwareInfo.Interconnected">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.HemisphereInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HemisphereInfo.RadiusX">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HemisphereInfo.RadiusY">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HemisphereInfo.CenterX">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.HemisphereInfo.CenterY">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ImmerVisionInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ImmerVisionInfo.LensProfileRpl">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ImmerVisionInfo.LensProfileName">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ImmerVisionInfo.LensProfileData">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.InputGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.InputGroupInfo.InputGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.InputGroupInfo.Inputs">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.InputInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.InputInfo.InputSecurity">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.InputSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.InputSecurityInfo.ReadInput">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.IpixInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.IpixInfo.IpixEnabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.IpixInfo.Hemisphere">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.IpixInfo.Homeposition">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.IpixInfo.CeilingMounted">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.KeyValue">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.KeyValue.Key">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.KeyValue.Value">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.LicenseInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.LicenseInfo.LicenseId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.LicenseInfo.Data">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.LoginCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.LoginCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.LoginInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.LoginInfo.Token">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.LoginInfo.RegistrationTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.LoginInfo.TimeToLive">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.LoginInfo.TimeToLiveLimited">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MatrixMonitorInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MatrixMonitorInfo.MatrixMonitorId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MatrixMonitorInfo.DisplayName">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MicrophoneGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneGroupInfo.MicrophoneGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneGroupInfo.Microphones">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MicrophoneInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneInfo.Tracks">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneInfo.MicrophoneSecurity">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneInfo.MulticastEnabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneInfo.EdgeStorageSupported">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneInfo.EdgeStoragePlayback">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneInfo.StopManualRecordingSeconds">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.Live">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.Browse">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.GetSequences">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.ExportDatabase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.BookmarkView">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.BookmarkAdd">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.BookmarkEdit">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.BookmarkDelete">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.RetentionView">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.RetentionCreate">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.RetentionRemove">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.RetrieveEdgeRecordings">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.StartRecording">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MicrophoneSecurityInfo.StopRecording">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.OutputGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.OutputGroupInfo.OutputGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.OutputGroupInfo.Outputs">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.OutputInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.OutputInfo.OutputSecurity">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.OutputSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.OutputSecurityInfo.Activate">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.PanoramicLensInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PanoramicLensInfo.PanoramicLensEnabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PanoramicLensInfo.PanoramicLensType">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PanoramicLensInfo.CameraMount">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PanoramicLensInfo.ImmerVision">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.PositionInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PositionInfo.Pan">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PositionInfo.Tilt">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PositionInfo.Zoom">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.PresetInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PresetInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PresetInfo.Position">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PresetInfo.Shortcut">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PresetInfo.Id">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PresetInfo.Locked">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ProductInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.ProductName">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.ProductLine">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.VendorId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.SubProduct">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.MajorVersion">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.MinorVersion">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.ServiceVersion">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.BuildConfiguration">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.BuildNumber">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.BuildDate">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.ProductCode">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ProductInfo.SLC">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.PtzInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzInfo.PtzEnabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzInfo.Presets">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzInfo.Capabilities">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzInfo.IsCenterOnPositionInViewSupported">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzInfo.IsPtzCenterAndZoomToRectangleSupported">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzInfo.IsPtzHomeSupported">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzInfo.IsPtzDiagonalSupported">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzInfo.EditPreset">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.PtzSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzSecurityInfo.ManualControl">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzSecurityInfo.PresetControl">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzSecurityInfo.PresetManage">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.PtzSecurityInfo.PresetManageLock">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.QueryChangesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.QueryChangesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.QueryRecorderInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.QueryRecorderInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.RecorderId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.Description">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.HostName">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.WebServerUri">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.TimeZoneName">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.DefaultRecordingTimeSeconds">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.XmlEncoding">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.LastModified">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.Cameras">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.Inputs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.Outputs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.Microphones">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.Speakers">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.MetadataDevices">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.Hardware">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.RecorderInfo.ServiceId">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ServerOption">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ServerOption.Key">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ServerOption.Value">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingDataGlobalCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingDataGlobalCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingDataUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingDataUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SmartClientVersion.ForceUpgrade">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SmartClientVersion.DisplayName">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SmartClientVersion.UpgradeInfo">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SystemLicenseInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemLicenseInfo.HasLicense">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemLicenseInfo.SLC">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemLicenseInfo.ProductSku">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemLicenseInfo.Expires">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemLicenseInfo.ExpiryDate">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemLicenseInfo.Features">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SpeakerGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerGroupInfo.SpeakerGroups">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerGroupInfo.Speakers">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SmartClientSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SmartClientSecurityInfo.SmartClientLive">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SmartClientSecurityInfo.SmartClientBrowse">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SmartClientSecurityInfo.SmartClientSetup">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SmartClientSecurityInfo.SmartClientReport">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SpeakerInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerInfo.Tracks">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerInfo.SpeakerSecurity">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerInfo.MulticastEnabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerInfo.EdgeStorageSupported">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerInfo.EdgeStoragePlayback">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerInfo.StopManualRecordingSeconds">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.Live">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.Browse">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.Speak">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.GetSequences">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.ExportDatabase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.BookmarkView">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.BookmarkAdd">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.BookmarkEdit">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.BookmarkDelete">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.RetentionView">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.RetentionCreate">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.RetentionRemove">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.RetrieveEdgeRecordings">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.StartRecording">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SpeakerSecurityInfo.StopRecording">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.StreamInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.StreamInfo.StreamId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.StreamInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.StreamInfo.Default">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.TrackInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.TrackInfo.TrackId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.TrackInfo.Edge">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SystemEventTypeInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemEventTypeInfo.EventTypeId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemEventTypeInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemEventTypeInfo.Description">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SystemEventTypeInfo.EventSource">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.TimeDuration">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.TimeDuration.MicroSeconds">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.UpgradeInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.UpgradeInfo.Hostname">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.UpgradeInfo.Port">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.UpgradeInfo.Path">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.UserInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.UserInfo.name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.UserInfo.sid">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ViewGroup">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroup.ViewGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroup.ViewGroupData">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ViewGroupData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupData.DataVersion">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupData.XmlVersion">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupData.ViewGroupDataXml">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ViewGroupInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupInfo.Id">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupInfo.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupInfo.ViewGroupType">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupInfo.ReadOnly">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupInfo.LastModifiedTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.ViewGroupInfo.LastModifiedUser">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MetadataDeviceSecurityInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MetadataDeviceSecurityInfo.RetentionView">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MetadataDeviceSecurityInfo.RetentionCreate">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MetadataDeviceSecurityInfo.RetentionRemove">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MetadataDeviceInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MetadataDeviceInfo.Tracks">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.MetadataDeviceInfo.MetadataDeviceSecurity">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.RetentionOptionType">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.RetentionOptionType.Unused">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.RetentionOptionType.Days">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.RetentionOptionType.Weeks">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.RetentionOptionType.Months">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.RetentionOptionType.Years">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.RetentionOptionType.UserDefined">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.RetentionOptionType.Indefinite">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ResultStatus">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.Undefined">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.Success">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.Failed">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.PartlySuccess">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.MarkedDataNotFound">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.FeatureNotLicensed">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.RecorderNotFound">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.ManagementServerUnavailable">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ResultStatus.Unauthorized">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.EventSource">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.EventSource.Undefined">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.EventSource.Device">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.EventSource.External">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.EventSource.Hardware">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.EventSource.Recorder">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.EventSource.Server">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.EventSource.System">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.EventSource.Timer">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.ViewGroupType">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.ViewGroupType.Normal">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SetViewGroupDataResultType">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SetViewGroupDataResultType.UnspecifiedError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SetViewGroupDataResultType.Success">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SetViewGroupDataResultType.ReadOnlyError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SetViewGroupDataResultType.ModifiedError">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingResultType">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingResultType.UnspecifiedError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingResultType.Success">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingResultType.ModifiedError">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType.Camera">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType.Microphone">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.MediaDeviceType.Speaker">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.AuthorizationActionType">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.AuthorizationActionType.None">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.AuthorizationActionType.LogOn">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.Header">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.Description">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.StartTime">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.TagTime">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.EndTime">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.CreateTime">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.RetentionExpireTime">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.UserName">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Server.SortOrderOption.Size">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetVersionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetServerVersionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.LoginCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.LogoutCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetVmoServicesListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetSmartClientVersionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CheckSmartClientVersionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetProductInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetSystemLicenseInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetUserInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetViewGroupsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetViewGroupsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetViewGroupsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetViewGroupDataCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetViewGroupDataCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.GetViewGroupDataCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SetViewGroupDataCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SetViewGroupDataCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.SetViewGroupDataCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetCustomSettingDataGlobalCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetCustomSettingDataUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingDataGlobalCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.SetCustomSettingDataUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.EventTriggerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.EventTriggerWithMetadataCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.AlertsGetAroundWithSpanCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MatrixMonitorActivateCameraCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MatrixMonitorActivateScriptCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.QueryChangesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.QueryRecorderInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetConfigurationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkGetNewReferenceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkCreateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkUpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkDeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkGetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkSearchTimeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.BookmarkSearchFromBookmarkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.AuthorizeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.AuthorizeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Server.AuthorizeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataGetNewReferenceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataCreateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataUpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataDeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataGetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.MarkedDataSearchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetClientProfileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.GetPresetsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.DeletePresetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.UpdatePresetNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.UpdatePresetPositionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.CreatePresetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Server.OrderPresetsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central">
            <summary>
            Represents a central interface to a server. 
            </summary>
            <remarks>
            The central interface is connection to a server to get event and status information.
            </remarks>
            <example>
            Shows how to get information from a camera.
            <code>
            class Sample
            {
                static void Main()
                {   
                    Central central = new Central();
            
                    central.SystemStatusUpdated += Central_SystemInfoUpdated();
            
                    // Updates the system status every second.
                    central.SystemInfoUpdateInterval = 1;
            
                    // Connect to the server.
                    central.Connect("http://localhost:1237", "username", "password");
            
                    ...
                }
            
                void Central_SystemInfoUpdated(object sender, Central.SystemStatusEventArgs e)
                {
                    // You can read the new updated system status here. 
                }
            
            }
            </code>
            </example>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Central class.
            <param name="serverAddress">The server address and port to the Central service, usually port 1237</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.#ctor(VideoOS.Platform.ServerId,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Proxy.Central.Central"/> class.
            This login will utilize Tokens for access to the Central API. (Supported from Enterprise 8.0a)
            A login must have been made already.
            </summary>
            <param name="serverId">The serverId of the VMS server to connect to</param>
            <param name="port"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.ContinuesRetryMode">
            <summary>
            Set this property to true, for a continues retry of Open/Connect to the CentralAPI during the initial Open call.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
            	<c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.ConnectionState">
            <summary>
            Gets or sets the state of the connection.
            </summary>
            <value>The state of the connection.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.Devices">
            <summary>
            Gets the devices.
            </summary>
            <value>The devices.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemInfoUpdateInterval">
            <summary>
            Gets or sets the system info <see cref="T:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus"/>  update interval in seconds.
            </summary>
            <value>The system info update interval in seconds. If the value is 0 it will stop to update the system info.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CurrentSystemStatus">
            <summary>
            Gets the system status.
            </summary>
            <value>The system status.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.AliveInterval">
            <summary>
            Gets or sets the alive interval.
            </summary>
            <value>The alive interval.</value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.Open">
            <summary>
            Connects the specified server address.
            </summary>
            <returns>true if connected else false</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.Reset">
            <summary>
            Resets for next Connect() to try get data
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.RequestCameraStatistics(System.String,System.String)">
            <summary>
            Requests the camera statistics.
            </summary>
            <param name="guid">The GUID.</param>
            <param name="Reset">The reset.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.RequestCameraStatisticsList(System.String)">
            <summary>
            Requests the camera statistics list.
            </summary>
            <param name="Reset">The reset.</param>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Central.Central.ConnectionStateChanged">
            <summary>
            Connection state change handler
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.OnConnectionStateChanged(VideoOS.Platform.SDK.Config.ConnectionStateChangedEventArgs)">
            <summary>
            Raises the connection state changed event.
            </summary>
            <param name="e">The <see cref="T:VideoOS.Sdk.SystemInformation.ConnectionStateChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatusEventHandler">
            <summary>
            System status handler delegate
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatusUpdated">
            <summary>
            System status handler
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.OnSystemInfoUpdated(VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatusEventArgs)">
            <summary>
            Raises the system info updated event.
            </summary>
            <param name="e">The <see cref="T:VideoOS.Sdk.Central.Central.SystemStatusEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatisticsEventHandler">
            <summary>
            Camera statistics handler delegate
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatisticsUpdated">
            <summary>
            Camera statistics handler
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.OnCameraStatisticsUpdated(VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatisticsEventArgs)">
            <summary>
            Raises the system info updated event.
            </summary>
            <param name="e">The <see cref="T:VideoOS.Sdk.Central.Central.SystemStatusEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEventHandler">
            <summary>
            Device event hamdler delegate
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEvent">
            <summary>
            Device event hamdler
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.OnDeviceEvent(VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEventArgs)">
            <summary>
            Raises the device event event.
            </summary>
            <param name="e">The <see cref="T:VideoOS.Sdk.Central.Central.DeviceEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.Connect">
            <summary>
            Connects this instance.  This method will try to connect for 30 seconds.
            </summary>
            <returns>true if connected else false</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.Run">
            <summary>
            Runs this instance.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.StartThread">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.Login">
            <summary>
            Logins this instance.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.DataReceived(System.String)">
            <summary>
            Datas the received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.HandleBubbleCamera(System.Xml.XmlElement)">
            <summary>
            Handles the bubble camera.
            </summary>
            <param name="bubbleCameraElement">The bubble camera element.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.HandleSystemInfo(System.Xml.XmlElement)">
            <summary>
            Handles the system info.
            </summary>
            <param name="systemInfoElement">The system info element.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.HandleBubble(System.Xml.XmlElement)">
            <summary>
            Handles the bubble of Recorder events
            </summary>
            <param name="bubbleElement">The bubble element.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.HandleSimpleReply(System.Xml.XmlElement)">
            <summary>
            Handles the simple reply.
            </summary>
            <param name="simpleReplyElement">The simple reply element.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.HandleAlive">
            <summary>
            Handles the alive.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.HandleStatus(System.Xml.XmlElement)">
            <summary>
            Handles the status.
            </summary>
            <param name="statusElement">The status element.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.RequestStatus">
            <summary>
            Requests the status.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.RequestStatusList">
            <summary>
            Requests the status list.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.RequestSystemInfo(System.String)">
            <summary>
            Requests the statistics.
            </summary>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.UpdateDeviceList(System.Xml.XmlNodeList)">
            <summary>
            Updates the device list.
            </summary>
            <param name="cameraNodeList">The camera node list.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.GetDevice(System.Xml.XmlElement,VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus@)">
            <summary>
            Gets the device.
            </summary>
            <param name="cameraElement">The camera element.</param>
            <param name="deviceStatus">The device status.</param>
            <returns>A centraldevice</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.GetDeviceStatus(System.String)">
            <summary>
            Gets the device status.
            </summary>
            <param name="status">The status.</param>
            <returns>Device status</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.AliveTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Handles the Elapsed event of the _aliveTimer control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceType">
            <summary>
            Device types
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceType.Camera">
            <summary>
            Camera element
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceType.Button">
            <summary>
            Button element
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceType.PirElement">
            <summary>
            PirElement
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceType.GenericEvent">
            <summary>
            GenericEvent
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceType.Recorder">
            <summary>
            The Recording server itself
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus">
            <summary>
            Device status enumeration
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.Start">
            <summary>
            Device start
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.Stop">
            <summary>
            Device stop
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.CameraNotResponding">
            <summary>
            Camera not responding
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.RunningOutOfDiskSpace">
            <summary>
            Server running out of disk space
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.UnitOK">
            <summary>
            Unit OK
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.MotionDetected">
            <summary>
            Motion detected
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.ExternalEvent">
            <summary>
            External event
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.ArchivedFailure">
            <summary>
            Archive failure
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.ArchiveMoveFailure">
            <summary>
            Archive move failure
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.NotificationDefineEngine">
            <summary>
            Notification define engine
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.NotificationAddCamera">
            <summary>
            Notification camera added
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.NotificationAddPIR">
            <summary>
            Notification PIR added
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus.MotionEnded">
            <summary>
            Motion has stopped
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatusEventArgs">
            <summary>
            Provides data for the <see cref="E:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatusUpdated"/> events. 
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatusEventArgs.SystemStatus">
            <summary>
            Gets the system status.
            </summary>
            <value>The system status.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus">
            <summary>
            Represents system information
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus.LastUpdated">
            <summary>
            Gets the last updated.
            </summary>
            <value>The last updated.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus.CpuUsage">
            <summary>
            Gets the cpu usage.
            </summary>
            <value>The cpu usage.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus.CpuPeek">
            <summary>
            Gets the cpu peek.
            </summary>
            <value>The cpu peek.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus.MemoryUsed">
            <summary>
            Gets the memory used.
            </summary>
            <value>The memory used.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus.MemoryFree">
            <summary>
            Gets the memory free.
            </summary>
            <value>The memory free.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus.VirtualMemoryUsed">
            <summary>
            Gets the virtual memory used.
            </summary>
            <value>The virtual memory used.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus.VirtualMemoryFree">
            <summary>
            Gets the virtual memory free.
            </summary>
            <value>The virtual memory free.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.SystemStatus.DiskFree">
            <summary>
            Gets the disk free.
            </summary>
            <value>The disk free.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatisticsEventArgs">
            <summary>
            Camera statistics event argument
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatisticsEventArgs.CameraStatistics">
            <summary>
            Gets the system status.
            </summary>
            <value>The system status.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics">
            <summary>
            Represents camera statistics
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.SpawnTime">
            <summary>
            Gets the spawn time.
            </summary>
            <value>The spawn time.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.guid">
            <summary>
            Gets the GUID.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.Codec">
            <summary>
            Gets the codec.
            </summary>
            <value>The codec.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.FPS">
            <summary>
            Gets the FPS.
            </summary>
            <value>The FPS.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.ReceivedKBytes">
            <summary>
            Gets the received K bytes.
            </summary>
            <value>The received K bytes.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.TotalFrames">
            <summary>
            Gets the total frames.
            </summary>
            <value>The total frames.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.MotionDetection">
            <summary>
            Gets the motion detection.
            </summary>
            <value>The motion detection.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.NotResponceNumber">
            <summary>
            Gets the not responce number.
            </summary>
            <value>The not responce number.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.Active">
            <summary>
            Gets the active.
            </summary>
            <value>The active.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.Connecting">
            <summary>
            Gets the connecting.
            </summary>
            <value>The connecting.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CameraStatistics.Running">
            <summary>
            Gets the running.
            </summary>
            <value>The running.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEventArgs">
            <summary>
            Provides data for the <see cref="E:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEvent"/> events. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEventArgs.#ctor(System.DateTime,VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice,VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEventArgs"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="device">The device.</param>
            <param name="status">The status.</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEventArgs.Time">
            <summary>
            Gets the time.
            </summary>
            <value>The time.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEventArgs.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.DeviceEventArgs.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice">
            <summary>
            Represent a device from the CentralAPI. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice.#ctor(VideoOS.Platform.SDK.Proxy.Central.Central.DeviceType,System.String,System.Guid,System.String,VideoOS.Platform.SDK.Proxy.Central.Central.DeviceStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice"/> class.
            </summary>
            <param name="deviceType">Type of the device.</param>
            <param name="name">The name.</param>
            <param name="guid">The GUID.</param>
            <param name="id">The id.</param>
            <param name="status"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice.guid">
            <summary>
             Gets the GUID as a string.
            </summary>
            <value>The GUID.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice.DeviceType">
            <summary>
            Gets the type of the device.
            </summary>
            <value>The type of the device.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice.DeviceStatus">
            <summary>
            The last received device status
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.CentralDeviceCollection">
            <summary>
            Represents a collection of <see cref="T:VideoOS.Platform.SDK.Proxy.Central.Central.CentralDevice"/> objects.  
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.CentralDeviceCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Central.CentralSession">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.CentralSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Platform.SDK.Proxy.Central.CentralSession"/> class.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.CentralSession.Connect(System.Uri)">
            <summary>
            Connects the specified server address.
            </summary>
            <param name="serverAddress">The server address.</param>
            <returns>true if connected else false</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.CentralSession.Disconnect">
            <summary>
            Disconnects this instance.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Central.CentralSession.IsUnicode">
            <summary>
            Gets a value indicating whether this instance is unicode.
            </summary>
            <value>
            	<c>true</c> if this instance is unicode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.CentralSession.Receive">
            <summary>
            Receives this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Central.CentralSession.Send(System.String)">
            <summary>
            Sends the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.#ctor">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetVersionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveAbsoluteCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveRelativeCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveHomeCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveStartCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveStopCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZCenterCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZRectangleCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZGetAbsolutePositionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZExtendedManualSessionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZGetSessionInfoCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZReserveSessionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZReleaseSessionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZActivatePatrollingSchemaCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZDeactivatePatrollingSchemaCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetGetListCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetMoveToCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetSetCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputActivateCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputDeactivateCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputTriggerCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputGetStateCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetTypesCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAroundCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAroundWithSpanCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetRetentionTimeLimitCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.TimeLineInformationGetCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchStartCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchCancelCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchGetStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchGetResultCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.ControlLiveStreamCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtOrBeforeCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtOrAfterCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetLiveCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.InputGetStateCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StartRecordingCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SendDriverCommandCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SendDriverCommandWithResponseCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastStartCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastContinueCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastStopCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.IsManualRecordingCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StartManualRecordingCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StopManualRecordingCompleted">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetVersion">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginGetVersion(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndGetVersion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetVersionAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetVersionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveAbsolute(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZMoveAbsolute(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZMoveAbsolute(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveAbsoluteAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveAbsoluteAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveRelative(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZMoveRelative(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZMoveRelative(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveRelativeAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveRelativeAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveHome(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZMoveHome(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZMoveHome(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveHomeAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveHomeAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveStart(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZMoveStart(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZMoveStart(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveStartAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveStartAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveStop(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZMoveStop(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZMoveStop(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveStopAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZMoveStopAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZCenter(System.String,System.Guid,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZCenter(System.String,System.Guid,System.Double,System.Double,System.Double,System.Double,System.Double,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZCenter(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZCenterAsync(System.String,System.Guid,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZCenterAsync(System.String,System.Guid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZRectangle(System.String,System.Guid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZRectangle(System.String,System.Guid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZRectangle(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZRectangleAsync(System.String,System.Guid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZRectangleAsync(System.String,System.Guid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZGetAbsolutePosition(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZGetAbsolutePosition(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZGetAbsolutePosition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZGetAbsolutePositionAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZGetAbsolutePositionAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZExtendedManualSession(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZExtendedManualSession(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZExtendedManualSession(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZExtendedManualSessionAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZExtendedManualSessionAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZGetSessionInfo(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZGetSessionInfo(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZGetSessionInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZGetSessionInfoAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZGetSessionInfoAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZReserveSession(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZReserveSession(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZReserveSession(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZReserveSessionAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZReserveSessionAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZReleaseSession(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZReleaseSession(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZReleaseSession(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZReleaseSessionAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZReleaseSessionAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZActivatePatrollingSchema(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZActivatePatrollingSchema(System.String,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZActivatePatrollingSchema(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZActivatePatrollingSchemaAsync(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZActivatePatrollingSchemaAsync(System.String,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZDeactivatePatrollingSchema(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPTZDeactivatePatrollingSchema(System.String,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPTZDeactivatePatrollingSchema(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZDeactivatePatrollingSchemaAsync(System.String,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PTZDeactivatePatrollingSchemaAsync(System.String,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetGetList(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPresetGetList(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPresetGetList(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetGetListAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetGetListAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetMoveTo(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPresetMoveTo(System.String,System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPresetMoveTo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetMoveToAsync(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetMoveToAsync(System.String,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetSet(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginPresetSet(System.String,System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndPresetSet(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetSetAsync(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.PresetSetAsync(System.String,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputActivate(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginOutputActivate(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndOutputActivate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputActivateAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputActivateAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputDeactivate(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginOutputDeactivate(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndOutputDeactivate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputDeactivateAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputDeactivateAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputTrigger(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginOutputTrigger(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndOutputTrigger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputTriggerAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputTriggerAsync(System.String,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputGetState(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginOutputGetState(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndOutputGetState(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputGetStateAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.OutputGetStateAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetTypes(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSequencesGetTypes(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSequencesGetTypes(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetTypesAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetTypesAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGet(System.String,System.Guid,System.Guid,System.DateTime,System.DateTime,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSequencesGet(System.String,System.Guid,System.Guid,System.DateTime,System.DateTime,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSequencesGet(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAsync(System.String,System.Guid,System.Guid,System.DateTime,System.DateTime,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAsync(System.String,System.Guid,System.Guid,System.DateTime,System.DateTime,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAround(System.String,System.Guid,System.Guid,System.DateTime,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSequencesGetAround(System.String,System.Guid,System.Guid,System.DateTime,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSequencesGetAround(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAroundAsync(System.String,System.Guid,System.Guid,System.DateTime,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAroundAsync(System.String,System.Guid,System.Guid,System.DateTime,System.Int32,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAroundWithSpan(System.String,System.Guid,System.Guid,System.DateTime,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSequencesGetAroundWithSpan(System.String,System.Guid,System.Guid,System.DateTime,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSequencesGetAroundWithSpan(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAroundWithSpanAsync(System.String,System.Guid,System.Guid,System.DateTime,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SequencesGetAroundWithSpanAsync(System.String,System.Guid,System.Guid,System.DateTime,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetRetentionTimeLimit(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginGetRetentionTimeLimit(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndGetRetentionTimeLimit(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetRetentionTimeLimitAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetRetentionTimeLimitAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.TimeLineInformationGet(System.String,System.Guid,System.Guid[],System.DateTime,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginTimeLineInformationGet(System.String,System.Guid,System.Guid[],System.DateTime,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndTimeLineInformationGet(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.TimeLineInformationGetAsync(System.String,System.Guid,System.Guid[],System.DateTime,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.TimeLineInformationGetAsync(System.String,System.Guid,System.Guid[],System.DateTime,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchStart(System.String,System.Guid,System.DateTime,System.DateTime,System.Int32,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,VideoOS.Platform.SDK.Proxy.RecorderServices.ImageMask,System.Boolean,VideoOS.Platform.SDK.Proxy.RecorderServices.Size)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSmartSearchStart(System.String,System.Guid,System.DateTime,System.DateTime,System.Int32,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,VideoOS.Platform.SDK.Proxy.RecorderServices.ImageMask,System.Boolean,VideoOS.Platform.SDK.Proxy.RecorderServices.Size,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSmartSearchStart(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchStartAsync(System.String,System.Guid,System.DateTime,System.DateTime,System.Int32,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,VideoOS.Platform.SDK.Proxy.RecorderServices.ImageMask,System.Boolean,VideoOS.Platform.SDK.Proxy.RecorderServices.Size)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchStartAsync(System.String,System.Guid,System.DateTime,System.DateTime,System.Int32,VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration,VideoOS.Platform.SDK.Proxy.RecorderServices.ImageMask,System.Boolean,VideoOS.Platform.SDK.Proxy.RecorderServices.Size,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchCancel(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSmartSearchCancel(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSmartSearchCancel(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchCancelAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchCancelAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchGetStatus(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSmartSearchGetStatus(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSmartSearchGetStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchGetStatusAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchGetStatusAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchGetResult(System.String,System.Guid,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSmartSearchGetResult(System.String,System.Guid,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSmartSearchGetResult(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchGetResultAsync(System.String,System.Guid,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SmartSearchGetResultAsync(System.String,System.Guid,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.ControlLiveStream(System.String,System.Guid,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamDevice[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginControlLiveStream(System.String,System.Guid,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamDevice[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndControlLiveStream(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.ControlLiveStreamAsync(System.String,System.Guid,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamDevice[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.ControlLiveStreamAsync(System.String,System.Guid,System.Guid,VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamDevice[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAt(System.String,System.Guid,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginJPEGGetAt(System.String,System.Guid,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndJPEGGetAt(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtAsync(System.String,System.Guid,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtAsync(System.String,System.Guid,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtOrBefore(System.String,System.Guid,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginJPEGGetAtOrBefore(System.String,System.Guid,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndJPEGGetAtOrBefore(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtOrBeforeAsync(System.String,System.Guid,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtOrBeforeAsync(System.String,System.Guid,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtOrAfter(System.String,System.Guid,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginJPEGGetAtOrAfter(System.String,System.Guid,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndJPEGGetAtOrAfter(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtOrAfterAsync(System.String,System.Guid,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetAtOrAfterAsync(System.String,System.Guid,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetLive(System.String,System.Guid,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginJPEGGetLive(System.String,System.Guid,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndJPEGGetLive(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetLiveAsync(System.String,System.Guid,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.JPEGGetLiveAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.InputGetState(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginInputGetState(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndInputGetState(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.InputGetStateAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.InputGetStateAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StartRecording(System.String,System.Guid,System.Int64)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginStartRecording(System.String,System.Guid,System.Int64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndStartRecording(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StartRecordingAsync(System.String,System.Guid,System.Int64)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StartRecordingAsync(System.String,System.Guid,System.Int64,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SendDriverCommand(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSendDriverCommand(System.String,System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSendDriverCommand(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SendDriverCommandAsync(System.String,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SendDriverCommandAsync(System.String,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SendDriverCommandWithResponse(System.String,System.Guid,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginSendDriverCommandWithResponse(System.String,System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndSendDriverCommandWithResponse(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SendDriverCommandWithResponseAsync(System.String,System.Guid,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.SendDriverCommandWithResponseAsync(System.String,System.Guid,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastStart(System.String,System.Guid[],VideoOS.Platform.SDK.Proxy.RecorderServices.ClientCapabilities)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginMulticastStart(System.String,System.Guid[],VideoOS.Platform.SDK.Proxy.RecorderServices.ClientCapabilities,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndMulticastStart(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastStartAsync(System.String,System.Guid[],VideoOS.Platform.SDK.Proxy.RecorderServices.ClientCapabilities)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastStartAsync(System.String,System.Guid[],VideoOS.Platform.SDK.Proxy.RecorderServices.ClientCapabilities,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastContinue(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginMulticastContinue(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndMulticastContinue(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastContinueAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastContinueAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastStop(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginMulticastStop(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndMulticastStop(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastStopAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.MulticastStopAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.IsManualRecording(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginIsManualRecording(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndIsManualRecording(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.IsManualRecordingAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.IsManualRecordingAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StartManualRecording(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginStartManualRecording(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndStartManualRecording(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StartManualRecordingAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StartManualRecordingAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StopManualRecording(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.BeginStopManualRecording(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.EndStopManualRecording(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StopManualRecordingAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.StopManualRecordingAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.RecorderServices.RecorderCommandService.GetWebRequest(System.Uri)">
            <summary>
            Internal use
            </summary>
            <param name="uri"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs.movement">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs.speed">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs.automatic">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZArgs.Normalized">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZPairDouble">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZPairDouble.name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZPairDouble.value">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.ManualRecordingResult">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ManualRecordingResult.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ManualRecordingResult.ResultCode">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ManualRecordingResult.Message">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.ManualRecordingInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ManualRecordingInfo.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ManualRecordingInfo.IsManualRecording">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.IPAddress">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.ServerPort">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.ClientPort">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.KeepAliveInterval">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.Encrypted">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.MulticastSessionId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.SSRC">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.PrivacyMask">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.PrivacyMaskVersion">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastInfo.Success">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeDuration.MicroSeconds">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.ClientCapabilities">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ClientCapabilities.PrivacyMask">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ClientCapabilities.PrivacyMaskVersion">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGData.Time">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGData.Data">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamSetting">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamSetting.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamSetting.Value">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamDevice">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamDevice.DeviceID">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.LiveStreamDevice.LiveStreamSettings">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.MotionAreaInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MotionAreaInfo.X">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MotionAreaInfo.Y">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MotionAreaInfo.Width">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MotionAreaInfo.Height">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.MotionAreaInfos">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MotionAreaInfos.Resolution">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MotionAreaInfos.Areas">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.Size">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.Size.Width">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.Size.Height">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchResult">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchResult.ImageTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchResult.MotionMask">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchResult.MotionAreas">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.ImageMask">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ImageMask.Size">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.ImageMask.Mask">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatus.CurrentSearchTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatus.Status">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatusType">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatusType.UnspecifiedError">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatusType.SearchInProgress">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatusType.SearchResultReady">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatusType.SearchEndTimeReached">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStatusType.SearchCancelled">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationData.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationData.Type">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationData.BeginTime">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationData.Interval">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationData.Count">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationData.Data">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequenceEntry">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequenceEntry.TimeBegin">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequenceEntry.TimeTrigged">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequenceEntry.TimeEnd">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequenceType">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequenceType.Id">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequenceType.Name">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.UserInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.UserInfo.Sid">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.UserInfo.DisplayName">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.PatrollingProfileId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.ManualPatrollingProfileId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.User">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.Priority">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.Reserved">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.IsPatrolling">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.IsAnonymous">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.IsPaused">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.TimeoutSec">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.TimeoutLeftSec">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PtzSessionInfo.IsLicensed">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZPairBoolean">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZPairBoolean.name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZPairBoolean.value">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.IOState">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.RecorderServices.IOState.Unknown">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.RecorderServices.IOState.Activated">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.RecorderServices.IOState.Deactivated">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.GetVersionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.GetVersionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.GetVersionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZMoveAbsoluteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZMoveRelativeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZMoveHomeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZMoveStartCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZMoveStopCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZCenterCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZRectangleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZGetAbsolutePositionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZGetAbsolutePositionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZGetAbsolutePositionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZExtendedManualSessionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZGetSessionInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZGetSessionInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZGetSessionInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZReserveSessionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZReleaseSessionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZActivatePatrollingSchemaCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PTZDeactivatePatrollingSchemaCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PresetGetListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PresetGetListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.PresetGetListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PresetMoveToCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.PresetSetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.OutputActivateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.OutputDeactivateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.OutputTriggerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.OutputGetStateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.OutputGetStateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.OutputGetStateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetTypesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetTypesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetTypesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetAroundCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetAroundCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetAroundCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetAroundWithSpanCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetAroundWithSpanCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SequencesGetAroundWithSpanCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.GetRetentionTimeLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.GetRetentionTimeLimitCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.GetRetentionTimeLimitCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationGetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationGetCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.TimeLineInformationGetCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStartCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStartCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchStartCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchCancelCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchGetStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchGetStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchGetStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchGetResultCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchGetResultCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SmartSearchGetResultCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.ControlLiveStreamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtOrBeforeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtOrBeforeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtOrBeforeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtOrAfterCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtOrAfterCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetAtOrAfterCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetLiveCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetLiveCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.JPEGGetLiveCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.InputGetStateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.InputGetStateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.InputGetStateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.StartRecordingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.StartRecordingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.StartRecordingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SendDriverCommandCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SendDriverCommandWithResponseCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.SendDriverCommandWithResponseCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.SendDriverCommandWithResponseCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastStartCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastStartCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastStartCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastContinueCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.MulticastStopCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.IsManualRecordingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.IsManualRecordingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.IsManualRecordingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.StartManualRecordingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.StartManualRecordingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.StartManualRecordingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.StopManualRecordingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.RecorderServices.StopManualRecordingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.RecorderServices.StopManualRecordingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.#ctor(System.Uri)">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetVersionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.StartStatusSessionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.StopStatusSessionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeEventStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeDeviceStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeHardwareStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeConfigurationStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetCurrentDeviceStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetCurrentHardwareStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetRecorderStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetRecordingStorageStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetArchiveStorageStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetVideoDeviceStatisticsCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetAudioDeviceStatisticsCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetMetadataDeviceStatisticsCompleted">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetVersion">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetVersion(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetVersion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetVersionAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetVersionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.StartStatusSession(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginStartStatusSession(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndStartStatusSession(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.StartStatusSessionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.StartStatusSessionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.StopStatusSession(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginStopStatusSession(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndStopStatusSession(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.StopStatusSessionAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.StopStatusSessionAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeEventStatus(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginSubscribeEventStatus(System.String,System.Guid,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndSubscribeEventStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeEventStatusAsync(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeEventStatusAsync(System.String,System.Guid,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeDeviceStatus(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginSubscribeDeviceStatus(System.String,System.Guid,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndSubscribeDeviceStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeDeviceStatusAsync(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeDeviceStatusAsync(System.String,System.Guid,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeHardwareStatus(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginSubscribeHardwareStatus(System.String,System.Guid,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndSubscribeHardwareStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeHardwareStatusAsync(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeHardwareStatusAsync(System.String,System.Guid,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeConfigurationStatus(System.String,System.Guid,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginSubscribeConfigurationStatus(System.String,System.Guid,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndSubscribeConfigurationStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeConfigurationStatusAsync(System.String,System.Guid,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.SubscribeConfigurationStatusAsync(System.String,System.Guid,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetStatus(System.String,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetStatus(System.String,System.Guid,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetStatusAsync(System.String,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetStatusAsync(System.String,System.Guid,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetCurrentDeviceStatus(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetCurrentDeviceStatus(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetCurrentDeviceStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetCurrentDeviceStatusAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetCurrentDeviceStatusAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetCurrentHardwareStatus(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetCurrentHardwareStatus(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetCurrentHardwareStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetCurrentHardwareStatusAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetCurrentHardwareStatusAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetRecorderStatus(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetRecorderStatus(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetRecorderStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetRecorderStatusAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetRecorderStatusAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetRecordingStorageStatus(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetRecordingStorageStatus(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetRecordingStorageStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetRecordingStorageStatusAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetRecordingStorageStatusAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetArchiveStorageStatus(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetArchiveStorageStatus(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetArchiveStorageStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetArchiveStorageStatusAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetArchiveStorageStatusAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetVideoDeviceStatistics(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetVideoDeviceStatistics(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetVideoDeviceStatistics(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetVideoDeviceStatisticsAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetVideoDeviceStatisticsAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetAudioDeviceStatistics(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetAudioDeviceStatistics(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetAudioDeviceStatistics(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetAudioDeviceStatisticsAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetAudioDeviceStatisticsAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetMetadataDeviceStatistics(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.BeginGetMetadataDeviceStatistics(System.String,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.EndGetMetadataDeviceStatistics(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetMetadataDeviceStatisticsAsync(System.String,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetMetadataDeviceStatisticsAsync(System.String,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status2.RecorderStatusService2.GetWebRequest(System.Uri)">
            <summary>
            Internal use
            </summary>
            <param name="uri"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.Status">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.CameraDeviceStatusArray">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.InputDeviceStatusArray">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.OutputDeviceStatusArray">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.MicrophoneDeviceStatusArray">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.SpeakerDeviceStatusArray">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.MetadataDeviceStatusArray">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.EventStatusArray">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.HardwareStatusArray">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Status.ConfigurationChangedStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.CameraDeviceStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.CameraDeviceStatus.Motion">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamDeviceStatusBase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamDeviceStatusBase.Recording">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamDeviceStatusBase.DbMoveInProgress">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamDeviceStatusBase.ErrorOverflow">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamDeviceStatusBase.ErrorWritingGop">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamDeviceStatusBase.DbRepairInProgress">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatusBase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatusBase.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatusBase.IsChange">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatusBase.Enabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatusBase.Started">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatusBase.Error">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatusBase.ErrorNotLicensed">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatusBase.ErrorNoConnection">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.StatusBase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.StatusBase.Time">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.Size">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Size.Width">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.Size.Height">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase.StreamId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase.RecordingStream">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase.LiveStream">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase.LiveStreamDefault">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase.LiveStreamRunAlways">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase.BPS">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MediaStreamStatisticsBase.FPS">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.MetadataStreamStatistics">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.AudioStreamStatistics">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.VideoStreamStatistics">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.VideoStreamStatistics.ImageResolution">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.VideoStreamStatistics.VideoFormat">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.VideoStreamStatistics.ImageSizeInBytes">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.VideoStreamStatistics.FPSRequested">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatisticsBase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatisticsBase.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.DeviceStatisticsBase.UsedSpaceInBytes">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.MetadataDeviceStatistics">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.MetadataDeviceStatistics.MetadataStreamStatisticsArray">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.AudioDeviceStatistics">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.AudioDeviceStatistics.AudioStreamStatisticsArray">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.VideoDeviceStatistics">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.VideoDeviceStatistics.VideoStreamStatisticsArray">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.StorageStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.StorageStatus.StorageId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.StorageStatus.Name">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.StorageStatus.Path">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.StorageStatus.Available">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.StorageStatus.UsedSpaceInBytes">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.StorageStatus.FreeSpaceInBytes">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.AttachAndConnectionState">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.AttachAndConnectionState.AttachState">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.AttachAndConnectionState.ConnectionState">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.KeyValue">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.KeyValue.Key">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.KeyValue.Value">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.EventStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.EventStatus.EventId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.EventStatus.SourceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.EventStatus.Metadata">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.HardwareStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.HardwareStatus.HardwareId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.HardwareStatus.IsChange">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.HardwareStatus.Enabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.HardwareStatus.Started">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.HardwareStatus.Error">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.HardwareStatus.ErrorNotLicensed">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.HardwareStatus.ErrorNoConnection">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.ConfigurationChangedStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.IODeviceStatusBase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.IODeviceStatusBase.State">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.IOState">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Status2.IOState.Activated">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Status2.IOState.Deactivated">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Status2.IOState.NotAvailable">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.InputDeviceStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.OutputDeviceStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.MicrophoneDeviceStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.SpeakerDeviceStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.MetadataDeviceStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetVersionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetVersionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetVersionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.StartStatusSessionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.StartStatusSessionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.StartStatusSessionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.StopStatusSessionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.SubscribeEventStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.SubscribeDeviceStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.SubscribeHardwareStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.SubscribeConfigurationStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetCurrentDeviceStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetCurrentDeviceStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetCurrentDeviceStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetCurrentHardwareStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetCurrentHardwareStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetCurrentHardwareStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetRecorderStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetRecorderStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetRecorderStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetRecordingStorageStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetRecordingStorageStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetRecordingStorageStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetArchiveStorageStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetArchiveStorageStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetArchiveStorageStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetVideoDeviceStatisticsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetVideoDeviceStatisticsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetVideoDeviceStatisticsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetAudioDeviceStatisticsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetAudioDeviceStatisticsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetAudioDeviceStatisticsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetMetadataDeviceStatisticsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status2.GetMetadataDeviceStatisticsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status2.GetMetadataDeviceStatisticsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetVersionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.StartStatusSessionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.StopStatusSessionCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeEventStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeDeviceStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeConfigurationStatusCompleted">
            <remarks/>
        </member>
        <member name="E:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetStatusCompleted">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetVersion">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.BeginGetVersion(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.EndGetVersion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetVersionAsync">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetVersionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.StartStatusSession(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.BeginStartStatusSession(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.EndStartStatusSession(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.StartStatusSessionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.StartStatusSessionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.StopStatusSession(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.BeginStopStatusSession(System.String,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.EndStopStatusSession(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.StopStatusSessionAsync(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.StopStatusSessionAsync(System.String,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeEventStatus(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.BeginSubscribeEventStatus(System.String,System.Guid,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.EndSubscribeEventStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeEventStatusAsync(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeEventStatusAsync(System.String,System.Guid,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeDeviceStatus(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.BeginSubscribeDeviceStatus(System.String,System.Guid,System.Guid[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.EndSubscribeDeviceStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeDeviceStatusAsync(System.String,System.Guid,System.Guid[])">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeDeviceStatusAsync(System.String,System.Guid,System.Guid[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeConfigurationStatus(System.String,System.Guid,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.BeginSubscribeConfigurationStatus(System.String,System.Guid,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.EndSubscribeConfigurationStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeConfigurationStatusAsync(System.String,System.Guid,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.SubscribeConfigurationStatusAsync(System.String,System.Guid,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetStatus(System.String,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.BeginGetStatus(System.String,System.Guid,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.EndGetStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetStatusAsync(System.String,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetStatusAsync(System.String,System.Guid,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.Status.RecorderStatusService.GetWebRequest(System.Uri)">
            <summary>
            Internal use
            </summary>
            <param name="uri"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.StatusBase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.StatusBase.Time">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.StatusBase.SequenceNo">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.DeviceStatusBase">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.DeviceStatusBase.DeviceId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.DeviceStatusBase.IsChange">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.DeviceStatusBase.Started">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.DeviceStatusBase.Enabled">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.DeviceStatusBase.Error">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.DeviceStatusBase.Licensed">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.InputDeviceStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.InputDeviceStatus.State">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.IOState">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Status.IOState.Activated">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Status.IOState.Deactivated">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Status.IOState.NotAvailable">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.MicrophoneDeviceStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.CameraDeviceStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.CameraDeviceStatus.Recording">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.CameraDeviceStatus.Motion">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.OutputDeviceStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.OutputDeviceStatus.State">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.SpeakerDeviceStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.ConfigurationChangedStatus">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.EventStatus">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.EventStatus.EventId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.EventStatus.SourceId">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.GetVersionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.GetVersionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.GetVersionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.StartStatusSessionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.StartStatusSessionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.StartStatusSessionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.StopStatusSessionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.SubscribeEventStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.SubscribeDeviceStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.SubscribeConfigurationStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.GetStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Status.GetStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Status.GetStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.ServerVersion">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.ServerVersion.Major">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.ServerVersion.Minor">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.ServerVersion.Revision">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.#ctor">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.#ctor(System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.#ctor(System.Int32,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.Clone">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.CompareTo(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.CompareTo(VideoOS.Platform.SDK.Proxy.ServerVersion)">
            <remarks/> 
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.Equals(System.Object)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.Equals(VideoOS.Platform.SDK.Proxy.ServerVersion)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.GetHashCode">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.op_Equality(VideoOS.Platform.SDK.Proxy.ServerVersion,VideoOS.Platform.SDK.Proxy.ServerVersion)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.op_Inequality(VideoOS.Platform.SDK.Proxy.ServerVersion,VideoOS.Platform.SDK.Proxy.ServerVersion)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.op_LessThan(VideoOS.Platform.SDK.Proxy.ServerVersion,VideoOS.Platform.SDK.Proxy.ServerVersion)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.op_LessThanOrEqual(VideoOS.Platform.SDK.Proxy.ServerVersion,VideoOS.Platform.SDK.Proxy.ServerVersion)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.op_GreaterThan(VideoOS.Platform.SDK.Proxy.ServerVersion,VideoOS.Platform.SDK.Proxy.ServerVersion)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.op_GreaterThanOrEqual(VideoOS.Platform.SDK.Proxy.ServerVersion,VideoOS.Platform.SDK.Proxy.ServerVersion)">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.op_Explicit(VideoOS.Platform.SDK.Proxy.ServerVersion)~System.Version">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.ToString">
            <remarks/>
        </member>
        <member name="M:VideoOS.Platform.SDK.Proxy.ServerVersion.Parse(System.String)">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSource">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSource.ExtensionData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSource.DaysToKeepTransactions">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSource.EventGroupId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSource.Id">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSource.Name">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSourceState">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSourceState.Undefined">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSourceState.Disabled">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSourceState.Suspended">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Transact.WSTransactSourceState.Running">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Transact.WSTransactLine">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactLine.ExtensionData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactLine.LineId">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactLine.LineNumber">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactLine.Text">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactLine.TimeStamp">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactLine.TransactionId">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFault">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFault.ExtensionData">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFault.Data">
            <remarks/>
        </member>
        <member name="P:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFault.State">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFaultState">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFaultState.Undefined">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFaultState.Token">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFaultState.CLC">
            <remarks/>
        </member>
        <member name="F:VideoOS.Platform.SDK.Proxy.Transact.WSTransactFaultState.BadParameter">
            <remarks/>
        </member>
        <member name="T:VideoOS.Platform.SDK.Environment">
            <summary>
            General environment for the standalone SDK
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Environment.Properties">
            <summary>
            General properties controlling behavior of SDK components. See <see cref="T:VideoOS.Platform.SDK.EnvironmentProperties"/> for available properties.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.Initialize">
            <summary>
            This method is called by the standalone application during application start to let the EnvironmentManager initialize itself.
            When the application knows what server to login to, the AddServer should be called.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.Initialize(Autofac.IContainer)">
            <summary>
            This allows to mock dependencies in unit test on this level
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.UnInitialize">
            <summary>
            Call this to uninitialize the environment
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.AddServer(System.Uri,System.Net.NetworkCredential,System.Boolean)">
            <summary>
            Call this method for each separate server you need to access.
            When accessing slaves configured on the server you login to, you only add the master server or home island.
            </summary>
            <param name="uri">The URI of the server to add</param>
            <param name="networkCredential">The credentials to use for login to the server</param>
            <param name="masterOnly"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.AddServer(VideoOS.Platform.Login.LoginSettings,System.Boolean)">
            <summary>
            Call this method for each separate server you need to access.
            When accessing slaves configured on the server you login to, you only add the master server or home island.
            </summary>
            <param name="loginSettings">A list of XProtect servers to connect to in due time</param>
            <param name="masterOnly"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.AddServer(System.Uri,System.Net.CredentialCache,System.Boolean)">
            <summary>
            Call this method for each separate server you need to access.
            When accessing slaves configured on the server you login to, you only add the master server or home island.
            This method need to be used when the credentials are of type 'Basic'.
            </summary>
            <param name="uri">The URI of the server to add</param>
            <param name="credentialCache">The credentials to use for login to the server</param>
            <param name="masterOnly">Set to false, to have all sub-sites or slaves added automatically</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.AddServer(VideoOS.Platform.Item,System.Net.CredentialCache,System.Boolean)">
            <summary>
            Add new Server item to the list of servers available for the application.<br/>
            The siteItem is returned in one of the EnvironmentManager's site handling methods.<br/>
            </summary>
            <param name="siteItem"></param>
            <param name="credentialCache"></param>
            <param name="masterOnly"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.LoadSiteItem(System.Uri,System.Net.CredentialCache)">
            <summary>
            Contact the server at the given URI and get the servers site information.<br/>
            The information in the result is NOT added to the MIP SDKs configuration. Please use the AddServer( siteItem ) for each of the sites you would like to add.<br/>
            This method can be used for selecting a subset of the sites to the configuration, or for specifying different authentication for some servers.<br/>
            For XProtect Enterprise, any defined slaves will appear as sub-sites or children of the master Enterprise server, and can therefore be added individually or with special credentials.
            </summary>
            <param name="uri"></param>
            <param name="credentialCache"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.LoadSiteItem(System.Uri,System.Net.CredentialCache,System.String)">
            <summary>
            Contact the server at the given URI and get the servers site information.<br/>
            The information in the result is NOT added to the MIP SDKs configuration. Please use the AddServer( siteItem ) for each of the sites you would like to add.<br/>
            This method can be used for selecting a subset of the sites to the configuration, or for specifying different authentication for some servers.<br/>
            For XProtect Enterprise, any defined slaves will appear as sub-sites or children of the master Enterprise server, and can therefore be added individually or with special credentials.
            </summary>
            <param name="uri"></param>
            <param name="credentialCache"></param>
            <param name="serverType">Provide this parameter when the server is known</param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.IsServerConnected(System.Uri)">
            <summary>
            It will execute on the thread being called on.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.Login(System.Uri,System.Boolean)">
            <summary>
            Logs in to a server. The server must have been added previously with AddServer().
            This function will delay the load of the configuration items until they are needed by other function calls.
            </summary>
            <param name="serverUri">The server URI</param>
            <param name="masterOnly">Set this to true to skip loading Enterprise slaves' configurations through the master server.</param>
            <exception cref="T:VideoOS.Platform.SDK.Platform.InvalidCredentialsMIPException">The credentials supplied are not valid with the server.</exception>
            <exception cref="T:VideoOS.Platform.SDK.Platform.ServerNotFoundMIPException">The server did not answer. Most likely the address or port number is incorrect or the server has been shut down.</exception>
            <exception cref="T:VideoOS.Platform.SDK.Platform.LoginFailedInternalMIPException">An internal error happened. Debug your application. This shall not happen at runtime.</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.LoadConfiguration(System.Uri)">
            <summary>
            Optional. If not called, the configuration will be loaded automatically the first time the application requests a configuration Item.
            After Login() has returned success, you may call this to explicitly request the configuration Items to be loaded.
            You may call this in a separate thread. If another thread requests an Item before this returns, that other thread will automatically wait.
            </summary>
            <param name="serverUri">The server URI</param>
            <returns>True if the configuration Items were successfully loaded</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.ReloadConfiguration(VideoOS.Platform.FQID)">
            <summary>
            Refresh a server configuration, or a Recorder configuration - as identified by the FQID.
            </summary>
            <param name="serverFQID"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.Logout(System.Uri)">
            <summary>
            Stops a server's renewal of tokens. Assumes that you have called Login() first on the same server.
            If you wish to Login() to the same server again, use RemoveServer() and AddServer() first.
            </summary>
            <param name="serverUri">The server's URI</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.IsLoggedIn(System.Uri)">
            <summary>
            Informs whether you are logged in to this server or not.
            </summary>
            <param name="serverUri">The server's URI</param>
            <returns>True when logged in.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.RemoveAllServers">
            <summary>
            This method will remove all servers for the list.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.RemoveServer(System.Guid)">
            <summary>
            Remove one server from the list of servers 
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.RemoveServer(System.Uri)">
            <summary>
            Remove one server from the list of servers.<br /> This method can be used if you have 
            added a Server using AddServer(uri), but never got contact with this server.<br />
            It is recommended to use the RemoveServer ( guid ) when possible.
            </summary>
            <param name="uri"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.Logout">
            <summary>
            Logs out from all current sessions
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Environment.GetDisabledDevices(System.Guid)">
            <summary>
            Provides list of disabled devices on the provided server.
            </summary>
            <param name="serverId"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.EnvironmentProperties">
            <summary>
            Class providing access to properties controlling general behavior of the SDK components
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.EnvironmentProperties.VideoOS#Platform#SDK#IEnvironmentProperties#QueryConfigurationChanges">
            <summary>
            Controls whether to enable tracing during login. For future use.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.EnvironmentProperties.TraceLogin">
            <summary>
            Controls whether to enable tracing during login. For future use.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.EnvironmentProperties.EnableConfigurationRefresh">
            <summary>
            A boolean to enable / disable automatic refresh of the configuration after login.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.EnvironmentProperties.LoadSubSitesAfterwards">
            <summary>
            Defines if ANY Enterprise slaves or Corporate sub-sites should be loaded after the initial logon.
            
            For Enterprise and Proffesional, The masterOnly should be true for this flag to be used.
            
            Default is true
            
            Note: new from may 2016
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.EnvironmentProperties.ConfigurationRefreshIntervalInMs">
            <summary>
            The amount of time between each configuration change check in milliseconds.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.EnvironmentService">
            <summary>
            This is the implementation of the Environment outer interface. 
            The API documentation is in the Environment class
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.EnvironmentService.RemoveServer(System.Uri)">
            <summary>
            Remove one server from the list of servers.<br /> This method can be used if you have 
            added a Server using AddServer(uri), but never got contact with this server.<br />
            It is recommended to use the RemoveServer ( guid ) when possible.
            </summary>
            <param name="uri"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastDevice">
            <summary>
            
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastDevice.MulticastMode">
            <summary>
            Enum specifying the multicast mode
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._deviceId">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._sessionId">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._deviceMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._refCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._nextKeepAlive">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._keepAliveInterval">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._keepAliveTimerInterval">
            <summary>
            The interval that the Keep Alive Timer elapses
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._ipAddress">
            <summary>
            The multicast IP address
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._port">
            <summary>
            The multicast port number
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._encrypted">
            <summary>
            Is the live stream data encrypted
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._ssrc">
            <summary>
            SSRC identifier
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._privacyMask">
            <summary>
            Privacy mask
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastDevice._privacyMaskVersion">
            <summary>
            Privacy mask version
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastDevice.Register(System.String@,System.Int32@,System.Int32@,System.String@,System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastDevice.Unregister">
            <summary>
            
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastDevice.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastDevice.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastDevice.KeepAlive(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastManager">
            <summary>
            Holds information for one Management Server (all users)
            
            Contains a list of recorders using multicast
            
            For internal use only
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastManager._serverId">
            <summary>
            Reference to the ServerId
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastManager._multicastRecorderCollection">
            <summary>
            Contains each recorder once.  
            Notice for mobile server, even when multiple clients view same camera, only one stream is registered.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastManager._multicastKeepAliveTimer">
            <summary>
            Timer that trigger Multicast Keep Alive handling 
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastManager._multicastRestartTimer">
            <summary>
            Timer that ensures that all devices are started
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastManager.MulticastConfigEventHandler">
            <summary>
            Represents the method that will signal Multicast Config
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.Multicast.MulticastManager.MulticastConfigEvent">
            <summary>
            Signals Multicast Config
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastManager.FireMulticastConfigEvent(VideoOS.Platform.SDK.Config.IRecorder,System.Guid,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Guid)">
             <summary>
            Activates the MulticastConfigEvent
             </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastManager.RegisterDevice(VideoOS.Platform.SDK.Config.IRecorder,System.Guid,System.String@,System.Int32@,System.Int32@,System.String@,System.Int32@)">
            <summary>
            Method for registering a device with the server for enabling multicast
            </summary>
            <param name="recorder"></param>
            <param name="deviceId"></param>
            <param name="ipAddress"></param>
            <param name="port"></param>
            <param name="ssrc"></param>
            <param name="privacyMask"></param>
            <param name="privacyMaskVersion"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastManager.UnregisterDevice(VideoOS.Platform.SDK.Config.IRecorder,System.Guid)">
            <summary>
            
            </summary>
            <param name="recorder"></param>
            <param name="deviceId"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastManager.ProcessNewMulticastDevices(VideoOS.Platform.SDK.Config.IRecorder)">
            <summary>
            Call this to get all newly registered devices processed
            </summary>
            <param name="recorder"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastManager.ResultCallbackEventHandler">
            <summary>
            Internal use only
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastManager.ProcessDeletedMulticastDevices(VideoOS.Platform.SDK.Config.IRecorder)">
            <summary>
                    Call this to clean up all newly unregistered devices
            </summary>
            <param name="recorder"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastManager.HandleCommandServiceAsyncResult(VideoOS.Platform.Data.AsyncResultEventArgs)">
            <summary>
            This method is together with the HandleCommandServiceAsyncResultDelegate delegate used to ensure that async results is handled on the main thread. This is nessesary bacause the application logic and gui is not thread safe.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastManager.MulticastContinue(VideoOS.Platform.SDK.Config.IRecorder,System.Guid[],System.Guid[])">
            <summary>
            This method is used to ensure that MulticastContinue commands are executed on the main thread. This is nessesary because the application logic is not thread safe. 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastManager.MulticastConfig(VideoOS.Platform.SDK.Config.IRecorder,System.Guid,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Guid)">
            <summary>
            This method is used to ensure that MulticastConfig commands are executed on the main thread. This is nessesary because the application logic is not thread safe. 
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastCommandEventArgs">
            <summary>
            Implements the class that contains the event args for the MulticastCommandEventArgs
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastCommandEventArgs._deviceIds">
            <summary>
            Input value parameter of the event args
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastCommandEventArgs._sessionIds">
            <summary>
            Input value parameter of the event args
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastCommandEventArgs.Recorder">
            <summary>
            The recorder
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastCommandEventArgs.#ctor(VideoOS.Platform.SDK.Config.IRecorder,System.Guid[],System.Guid[])">
            <summary>
            Constructs a MulticastCommandEventArgs instance
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastCommandEventArgs.DeviceIds">
            <summary>
            Gets or sets the DeviceIds parameter of the event args
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastCommandEventArgs.SessionIds">
            <summary>
            Gets or sets the SessionIds parameter of the event args
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs">
            <summary>
            Implements the class that contains the event args for the MulticastConfigEventArgs
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs._deviceId">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs._ipAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs._port">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs._ssrc">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs._privacyMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs._privacyMaskVersion">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs._existingSessionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.Recorder">
            <summary>
            
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.#ctor(VideoOS.Platform.SDK.Config.IRecorder,System.Guid,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Guid)">
            <summary>
            Constructs a MulticastConfigEventArgs instance
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.DeviceId">
            <summary>
            Gets or sets the DeviceId parameter of the event args
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.IPAddress">
            <summary>
            Gets or sets the IPAddress parameter of the event args
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.Port">
            <summary>
            Gets or sets the Port parameter of the event args
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.SSRC">
            <summary>
            Gets or sets the SSRC parameter of the event args
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.PrivacyMask">
            <summary>
            Gets or sets the Privacy mask parameter of the event args
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.PrivacyMaskVersion">
            <summary>
            Gets or sets the Privacy mask version parameter of the event args
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.MulticastConfigEventArgs.ExistingSessionId">
            <summary>
            Gets or sets the Privacy mask parameter of the event args
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.AsyncObjectState">
            <summary>
            Class that is send to the command api as object state on async requests
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.AsyncObjectState.#ctor(VideoOS.Platform.SDK.Multicast.MulticastManager.ResultCallbackEventHandler,System.Object)">
            <summary>
            
            </summary>
            <param name="resultCallbackEventHandler"></param>
            <param name="callerTag"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.AsyncObjectState.#ctor(VideoOS.Platform.SDK.Multicast.MulticastManager.ResultCallbackEventHandler,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="resultCallbackEventHandler"></param>
            <param name="callerTag"></param>
            <param name="handleCallbackException"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.AsyncObjectState.#ctor(VideoOS.Platform.SDK.Multicast.MulticastManager.ResultCallbackEventHandler,System.Object,System.Boolean,System.UInt64,System.Guid)">
            <summary>
            
            </summary>
            <param name="resultCallbackEventHandler"></param>
            <param name="callerTag"></param>
            <param name="handleCallbackException"></param>
            <param name="index"></param>
            <param name="id"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.AsyncObjectState.ResultCallbackEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.AsyncObjectState.CallerTag">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.AsyncObjectState.HandleCallbackException">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.AsyncObjectState.Index">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Multicast.AsyncObjectState.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastController">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastController.MaxMulticastErrorRate">
            <summary>
            The maximum allowed error rate
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Multicast.MulticastController.GetOrCreateMulticastManager(VideoOS.Platform.ServerId)">
            <summary>
            The ServerId is per Recording Server
            </summary>
            <param name="serverId"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Multicast.MulticastRecorder">
            <summary>
            Class that holds info for one recorder (in multiple instances)
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastRecorder._multicastDeviceCollection">
            <summary>
            A dictionary of active multicast devices
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastRecorder._allRecorderInstances">
            <summary>
            A dictionary of the SAME recorder, but for multiple users - e.g. mobile server
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Multicast.MulticastRecorder._allRecorderDevices">
            <summary>
            Dictionary of what devices are active for each instance of the recorder (e.g. per user)
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.MultiEnvironment">
            <summary>
            Environment to be used when running with sessions towards multiple servers.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.MultiEnvironment.Properties">
            <summary>
            General properties controlling behavior of SDK components. See <see cref="T:VideoOS.Platform.SDK.EnvironmentProperties"/> for available properties.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.InitializeUsingUserContext">
            <summary>
            This method is called by the standalone application during application start to let the environment initialize itself.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.UnInitialize">
            <summary>
            Call this to uninitialize the environment
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.CreateSingleServerUserContext(System.String,System.String,System.Boolean,System.Uri,System.String)">
            <summary>
            Create a UserContext with just one server, identified by the specified Uri.<br/>
            Please call the LoginUserContext ( userContext ) for connecting to the server and login, and use
            the RemoveUserContext ( userContext ) to logout and remove the context entirely.<br/>
            Please consider using the more secure version using SecureString for the password instead.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="usingAD"></param>
            <param name="uri"></param>
            <param name="serverType">Speficy the VMS servertype if known</param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.CreateSingleServerUserContext(System.String,System.Security.SecureString,System.Boolean,System.Uri,System.String)">
            <summary>
            Create a UserContext with just one server, identified by the specified Uri.<br/>
            Please call the LoginUserContext ( userContext ) for connecting to the server and login, and use
            the RemoveUserContext ( userContext ) to logout and remove the context entirely.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="usingAD"></param>
            <param name="uri"></param>
            <param name="serverType">Speficy the VMS servertype if known</param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.LoginUserContext(VideoOS.Platform.UserContext,System.Boolean,System.Boolean)">
            <summary>
            Login to all servers defined for user
            </summary>
            <param name="userContext"></param>
            <param name="autoReconnect">Optionel parameter, defining if login should continue to retry</param>
            <param name="autoLoadConfiguration">Optionel parameter, defining if the configuration should automatically be loaded after successful login</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.IsLoggedIn(VideoOS.Platform.UserContext)">
            <summary>
            Informs whether the given UserContext is logged in to the server or not.
            </summary>
            <param name="userContext"></param>
            <returns>True when logged in.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.GetLastException(VideoOS.Platform.UserContext)">
            <summary>
            Check for any exceptions that might have happened, but not reported.
            </summary>
            <param name="userContext"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.LoadConfiguration(VideoOS.Platform.UserContext)">
            <summary>
            Optional. If not called, the configuration will be loaded automatically the first time the application requests a configuration Item.
            After Login() has returned success, you may call this to explicitly request the configuration Items to be loaded.
            You may call this in a separate thread. If another thread requests an Item before this returns, that other thread will automatically wait.
            </summary>
            <returns>True if the configuration Items were successfully loaded</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.ReloadConfiguration(VideoOS.Platform.UserContext,VideoOS.Platform.FQID)">
            <summary>
            Refresh a server configuration, or a Recorder configuration - as identified by the FQID.
            </summary>
            <param name="userContext"></param>
            <param name="serverFQID"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.LoadSiteItem(System.Uri,System.Net.CredentialCache)">
            <summary>
            Contact the server at the given URI and get the servers site information.<br/>
            The information in the result is NOT added to the MIP SDKs configuration. Please use the AddServer( siteItem ) for each of the sites you would like to add.<br/>
            This method can be used for selecting a subset of the sites to the configuration, or for specifying different authentication for some servers.<br/>
            For XProtect Enterprise, any defined slaves will appear as sub-sites or children of the master Enterprise server, and can therefore be added individually or with special credentials.
            </summary>
            <param name="uri"></param>
            <param name="credentialCache"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.LoadSiteItem(System.Uri,System.Net.CredentialCache,System.String)">
            <summary>
            Contact the server at the given URI and get the servers site information.<br/>
            The information in the result is NOT added to the MIP SDKs configuration. Please use the AddServer( siteItem ) for each of the sites you would like to add.<br/>
            This method can be used for selecting a subset of the sites to the configuration, or for specifying different authentication for some servers.<br/>
            For XProtect Enterprise, any defined slaves will appear as sub-sites or children of the master Enterprise server, and can therefore be added individually or with special credentials.
            </summary>
            <param name="uri"></param>
            <param name="credentialCache"></param>
            <param name="serverType">Provide this parameter when the server is known</param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiEnvironment.Logout(VideoOS.Platform.UserContext)">
            <summary>
            Stops a server's renewal of tokens. Assumes that you have called Login() first on the same server.
            If you wish to Login() to the same server again, use RemoveServer() and AddServer() first.
            </summary>
            <param name="userContext"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.MultiUserEnvironment">
            <summary>
            Environment to be used when running with different user sessions (different users logged on to same server).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.MultiUserEnvironment.Properties">
            <summary>
            General properties controlling behavior of SDK components. See <see cref="T:VideoOS.Platform.SDK.EnvironmentProperties"/> for available properties.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.InitializeUsingUserContext(System.Uri,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            This method is called by the standalone application during application start to let the environment initialize itself.
            
            Please consider using the more secure version using SecureString for the password instead.
            </summary>
            <param name="uri"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="usingAd"></param>
            <param name="masterOnly"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.InitializeUsingUserContext(System.Uri,System.String,System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            This method is called by the standalone application during application start to let the EnvironmentManager initialize itself.
            
            A login will be attempted to the server defined by the uri, and the InitializeLoggedIn property can be used afterwards
            to check if the login went through.
            
            The UnInitialize method can be used to un-initialize everything, in case this method needs to be called again (e.g. with another credential).
            
            Please consider using the more secure version using SecureString for the password instead.
            </summary>
            <param name="uri"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="usingAd"></param>
            <param name="companyFolderName"></param>
            <param name="masterOnly"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.InitializeUsingUserContext(System.Uri,System.String,System.Security.SecureString,System.Boolean,System.String,System.Boolean)">
            <summary>
            This method is called by the standalone application during application start to let the EnvironmentManager initialize itself.
            
            A login will be attempted to the server defined by the uri, and the InitializeLoggedIn property can be used afterwards
            to check if the login went through.
            
            The UnInitialize method can be used to un-initialize everything, in case this method needs to be called again (e.g. with another credential).
            
            </summary>
            <param name="uri"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="usingAd"></param>
            <param name="companyFolderName"></param>
            <param name="masterOnly"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.MultiUserEnvironment.InitializeLoggedIn">
            <summary>
            Tells if the Initialization's login succedded 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.UnInitialize">
            <summary>
            Will close background threads and uninitialize this environment.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.AddServer(System.Uri)">
            <summary>
            Add uri to list of common servers.<br/>
            All users added later will try to login to this server.
            </summary>
            <param name="uri"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.AddServer(System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Add one server to the configuration.  Find out which one of the addresses provided works best/fastest.
            
            The intention for this method is to find out what address works best, in case a site has both internal and external addresses defined.
            
            If none of the addresses respond, the first one will be used.
            </summary>
            <param name="addressAlternatives"></param>
            <returns>True when one of the addresses responded</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.RemoveAllServers">
            <summary>
            Remove all servers defined previously.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.CreateUserContext(System.String,System.String,System.Boolean)">
            <summary>
            Create a new UserContext with the servers already added with the AddServer on this class.<br/>
            Use the LogonUserContext( uri ) to perform a login on all defined servers for this context, and
            the RemoveUserContext ( userContext ) to logout and remove the context entirely.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="usingAd"></param>
            <returns>A new UserContext class containing configuration relevant for this context</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.CreateUserContext">
            <summary>
            Create a new UserContext with the servers already added with the AddServer on this class.<br/>
            Use the LogonUserContext( uri ) to perform a login on all defined servers for this context, and
            the RemoveUserContext ( userContext ) to logout and remove the context entirely.<br/>
            The Credential used is the Current Credentials
            </summary>
            <returns>A new UserContext class containing configuration relevant for this context</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.CreateSingleServerUserContext(System.String,System.String,System.Boolean,System.Uri)">
            <summary>
            Create a UserContext with just one server, identified by the specified Uri.<br/>
            Please call the LoginUserContext ( userContext ) for connecting to the server and login, and use
            the RemoveUserContext ( userContext ) to logout and remove the context entirely.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="usingAd"></param>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.LoginUserContext(VideoOS.Platform.UserContext)">
            <summary>
            Login for this user and check if client type is allowed to access the servers
            </summary>
            <param name="userContext"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.LoginUserContext(VideoOS.Platform.UserContext,System.String)">
            <summary>
            Login to all servers defined for user
            </summary>
            <param name="userContext"></param>
            <param name="clientType"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.IsLoggedIn(VideoOS.Platform.UserContext,System.Uri)">
            <summary>
            Informs whether the given UserContext is logged in to the server or not.
            </summary>
            <param name="userContext"></param>
            <param name="serverUri">The server's URI</param>
            <returns>True when logged in.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.ReloadConfiguration(VideoOS.Platform.UserContext,VideoOS.Platform.FQID)">
            <summary>
            Refresh a server configuration, or a Recorder configuration - as identified by the FQID.
            </summary>
            <param name="userContext"></param>
            <param name="serverFQID"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.Logout(VideoOS.Platform.UserContext,System.Uri)">
            <summary>
            Stops a server's renewal of tokens. Assumes that you have called Login() first on the same server.
            If you wish to Login() to the same server again, use RemoveServer() and AddServer() first.
            </summary>
            <param name="userContext"></param>
            <param name="serverUri">The server's URI</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.Logout(VideoOS.Platform.UserContext)">
            <summary>
            Logout from all servers for this user.
            </summary>
            <param name="userContext"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.IsServerConnected(VideoOS.Platform.UserContext,System.Uri)">
            <summary>
            It will execute on the thread being called on.
            </summary>
            <param name="uri"></param>
            <param name="userContext"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.LoadSiteItem(System.Uri,System.Net.CredentialCache)">
            <summary>
            Contact the server at the given URI and get the servers site information.<br/>
            The information in the result is NOT added to the MIP SDKs configuration. Please use the AddServer( siteItem ) for each of the sites you would like to add.<br/>
            This method can be used for selecting a subset of the sites to the configuration, or for specifying different authentication for some servers.<br/>
            For XProtect Enterprise, any defined slaves will appear as sub-sites or children of the master Enterprise server, and can therefore be added individually or with special credentials.
            </summary>
            <param name="uri"></param>
            <param name="credentialCache"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.LoadSiteItem(System.Uri,System.Net.CredentialCache,System.String)">
            <summary>
            Contact the server at the given URI and get the servers site information.<br/>
            The information in the result is NOT added to the MIP SDKs configuration. Please use the AddServer( siteItem ) for each of the sites you would like to add.<br/>
            This method can be used for selecting a subset of the sites to the configuration, or for specifying different authentication for some servers.<br/>
            For XProtect Enterprise, any defined slaves will appear as sub-sites or children of the master Enterprise server, and can therefore be added individually or with special credentials.
            </summary>
            <param name="uri"></param>
            <param name="credentialCache"></param>
            <param name="serverType">Provide this parameter when the server is known</param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.RemoveUserContext(VideoOS.Platform.UserContext)">
            <summary>
            Log the user out from all servers and remove UserContext. The userContext can not be used after this call.
            </summary>
            <param name="userContext"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.ConvertLocalAddress(System.Uri)">
            <summary>
            Ensure that local addresses are converted to machine name
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.MultiUserEnvironment.IsLocalIpAddress(System.Uri)">
            <summary>
            Detect if any of the 'localhost' or IP address are used
            </summary>
            <param name="uri"></param>
            <returns>true if a local address is used</returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Platform.HardwareFolderItem">
            <summary>
            Use for top level folder for hardware.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Platform.HardwareItem">
            <summary>
            Hardware item. Devices on the hardware are set as related items.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.HardwareItem.GetParent">
            <summary>
            The parent of a specific item is always the recorder.
            If a device is also part of a number of groups, the recorder is still considered the Parent.
            </summary>
            
            <returns></returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.HardwareItem.Icon">
            <summary>
            Hardware icon - depending on the hardware type
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.HardwareItem.GetRelated">
            <summary>
            Related items is the devices on the hardware.
            </summary>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Platform.AllFolderItem">
            <summary>
            This class is used for the Items relevant on the server we login to.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Platform.PresetItem">
            <summary>
            Item for creating presets on e-code
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.PresetItem.#ctor(VideoOS.Platform.Item,System.Guid,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="cameraItem"></param>
            <param name="id"></param>
            <param name="name"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.PresetItem.#ctor(VideoOS.Platform.ServerId,System.Guid,System.Guid,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="serverId"></param>
            <param name="parentId"></param>
            <param name="id"></param>
            <param name="name"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.PresetItem.GetParent">
            <summary>
            For getting the parent (camera) item
            </summary>
            <returns>Camera item</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.PresetItem.PropertiesModified">
            <summary>
            Name or preset position could have been changed
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.MessageManager.BaseEventHandler(VideoOS.Platform.Messaging.Message,VideoOS.Platform.FQID,VideoOS.Platform.FQID)">
            <summary>
            Send a new Alarm into the alarm handling of EventServer
            </summary>
            <param name="message"></param>
            <param name="dest"></param>
            <param name="source"></param>
            <returns>null</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.MessageManager.BaseAlarmHandler(VideoOS.Platform.Messaging.Message,VideoOS.Platform.FQID,VideoOS.Platform.FQID)">
            <summary>
            Send a new Event into the alarm handling of EventServer
            </summary>
            <param name="message"></param>
            <param name="dest"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.MessageManager.BuildEventMetaData(VideoOS.Platform.FQID[],VideoOS.Platform.FQID[])">
            <summary>
            Build a String with the XML used for triggering Start and Stop Recording
            </summary>
            <param name="cameraFQID"></param>
            <param name="groupFQID"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKBookmarkService.FQIDToDeviceId(VideoOS.Platform.FQID[])">
            <summary>
            Create an array from the ObjectIds in the FQIDs
            </summary>
            <param name="fqids"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Platform.SDKConfiguration">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.#ctor(VideoOS.Platform.UserContext)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="userContext"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.AddConfiguration(System.Collections.Generic.List{VideoOS.Platform.Login.LoginSettings},System.Boolean)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="servers"></param>
            <param name="loadEnterpriseSlavesSeperately"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.AddConfiguration(System.Collections.Generic.List{VideoOS.Platform.Login.LoginSettings},System.Boolean,System.Boolean)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class (By Mgt Client and XPE Administrator)
            </summary>
            <param name="servers"></param>
            <param name="loadEnterpriseSlavesSeperately"></param>
            <param name="loadSubSitesAfterwards"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.AddConfiguration(VideoOS.Platform.Login.LoginSettings,System.Boolean)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="loginSettings"></param>
            <param name="loadEnterpriseSlavesSeperately"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.AddConfiguration(VideoOS.Platform.Login.LoginSettings,System.Boolean,System.Boolean)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="loginSettings"></param>
            <param name="loadEnterpriseSlavesSeperately"></param>
            <param name="loadSubSitesAfterwards"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.TryLogin(System.Uri)">
            <summary>
            Reserved for internal use.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.TryConnect(System.Uri)">
            <summary>
            This method is called from the SDK.Environment static class to assist the standalone application in filling the configuration
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.LastException(System.Uri)">
            <summary>
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.VideoOS#Platform#SDK#Platform#ISDKConfiguration#TryLoadConfiguration(System.Uri)">
            <summary>
            This method is called from the EnvironmentService class to assist the standalone application in filling the configuration
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.AutoStartLoginForAllServers">
            <summary>
            Used by XPE admin!
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.VideoOS#Platform#SDK#Platform#ISDKConfiguration#Login(System.Uri,System.Boolean,System.Boolean)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class.
            This method is called from the SDK.Environment static class 
            </summary>
            <param name="uri"></param>
            <param name="loadEnterpriseSlavesSeperately"></param>
            <param name="loadSubSitesAfterwards"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.IsLoggedIn(System.Uri)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class.
            This method is called from the SDK.Environment static class (Also used by XPE / XPCO Administrators)
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.IsLoggedInAny">
            <summary>
            Will tell if we are logged in to at least one server
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.Logout(System.Uri)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class.
            This method is called from the SDK.Environment static class (Also used by XPE / XPCO Administrators)
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.RemoveAllServers">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.RemoveServer(System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.RemoveServer(System.Uri)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.VideoOS#Platform#SDK#Platform#ISDKConfiguration#CheckServerConnection(System.Uri)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.Close">
            <summary>
            Release any stored information and diconnect sessions to other servers.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKConfiguration.ServerFQID">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKConfiguration.ServerName">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKConfiguration.LoginSettingsList">
            <summary>
            Return the list of servers provided upon initialization
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItems">
            <summary>
            Returns the root level objects. in this implemenattion it is the servers logged in to.
            The SystemInformation object is a singleton which we assume our container has populated.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItems(VideoOS.Platform.ItemHierarchy)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="itemHierarchy"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemsAsync(VideoOS.Platform.AsyncItemsHandler,System.Windows.Forms.Control,System.Object)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="handler"></param>
            <param name="control"></param>
            <param name="callerReference"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItem(VideoOS.Platform.FQID)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="fqid"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemAsync(VideoOS.Platform.FQID,VideoOS.Platform.AsyncItemHandler,System.Windows.Forms.Control,System.Object)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="fqid"></param>
            <param name="handler"></param>
            <param name="control"></param>
            <param name="callerReference"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItem(VideoOS.Platform.ServerId,System.Guid,System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="serverId"></param>
            <param name="objectId"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItem(System.Guid,System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="objectId"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemsByKind(System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemsByKind(System.Guid,VideoOS.Platform.ItemHierarchy)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="kind"></param>
            <param name="itemHierarchy"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetPluginConfiguration(System.Guid,System.Boolean@)">
            <summary>
            Get the "custom configuration XML document with a specific GUID as ID
            </summary>
            <param name="platformDefinitionId"></param>
            <param name="wasEmpty"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemConfigurations(VideoOS.Platform.ServerId,System.Guid,VideoOS.Platform.Item,System.Guid)">
            <summary>
            Get configuration from another site NOTE: Not being cached!
            </summary>
            <param name="serverId"></param>
            <param name="pluginDefinitionId"></param>
            <param name="parentItem"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemConfiguration(VideoOS.Platform.ServerId,System.Guid,System.Guid,System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="serverId"></param>
            <param name="pluginDefinitionId"></param>
            <param name="kind"></param>
            <param name="objectId"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemConfigurations(System.Guid,VideoOS.Platform.Item,System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="platformDefinitionId"></param>
            <param name="parentItem"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemConfiguration(System.Guid,System.Guid,System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="platformDefinitionId"></param>
            <param name="itemKind"></param>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetItemConfigurationDataVersion(System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="itemKind"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetOptionsConfiguration(System.Guid,System.Boolean)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="optionsDialogId"></param>
            <param name="userPrivate"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.SaveOptionsConfiguration(System.Guid,System.Boolean,System.Xml.XmlNode)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="optionsDialogId"></param>
            <param name="userPrivate"></param>
            <param name="xmlNode"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.DeleteItemConfiguration(VideoOS.Platform.ServerId,System.Guid,VideoOS.Platform.Item)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="serverId"></param>
            <param name="platformDefinitionId"></param>
            <param name="item"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.DeleteItemConfiguration(System.Guid,VideoOS.Platform.Item)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="platformDefinitionId"></param>
            <param name="item"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.SaveItemConfiguration(VideoOS.Platform.ServerId,System.Guid,VideoOS.Platform.Item)">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="pluginDefinitionId"></param>
            <param name="item"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.SaveItemConfiguration(System.Guid,VideoOS.Platform.Item)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="pluginDefinitionId"></param>
            <param name="item"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.RefreshConfiguration(System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="platformDefinitionId"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetViewGroups">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetViewGroup(System.Guid)">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKConfiguration.SystemInfoList">
            <summary>
            See documentation on <see cref="T:VideoOS.Platform.Configuration"/> class
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.FindSystemInfo(VideoOS.Platform.ServerId,System.Boolean)">
            <summary>
            Find the SystemInfo object which corresponds to a given ServerId and load its configuration.
            The ServerId can be both a Management Server or a Recording Server
            </summary>
            <param name="serverId"></param>
            <param name="populate"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetFailoverCheckIntervals(System.TimeSpan)">
            <summary>
            Returns FailoverCheckIntervals for all systems in a dictionary with {systemid, interval}
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKConfiguration.GetLastHardwareUpdate(System.Guid)">
            <summary>
            Gets the timestamp of the last known hardware update
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.TopLevelControl">
            <summary>
            If PostMessage should be done on the UI thread, this Control has to be initialized.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.TraceFunctionCalls">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.AllPluginDefinitions">
            <summary>
            
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.Log(System.Boolean,System.String,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="error"></param>
            <param name="where"></param>
            <param name="text"></param>
            <param name="args"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.Log(System.String,System.Boolean,System.String,System.String,System.Object[])">
            <summary>
            Log a line of text in the debug logger.
            </summary>
            <param name="nameOfClass"></param>
            <param name="error"></param>
            <param name="where"></param>
            <param name="text"></param>
            <param name="args"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.ExceptionHandler(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="where"></param>
            <param name="exception"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.ExceptionHandler(System.String,System.String,System.Exception)">
            <summary>
            Logs the exception and shows the ExceptionDialog
            </summary>
            <param name="nameOfClass">Name of a class that this exception relates to</param>
            <param name="where">Where the exception happened</param>
            <param name="exception">The Exception itself</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.ExceptionDialog(System.String,System.Exception)">
            <summary>
            Display a dialog as a result of an Exception.
            </summary>
            <param name="where">Where the exception happened</param>
            <param name="exception">The Exception itself</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.ExceptionDialog(System.String,System.String,System.Exception)">
            <summary>
            Display a dialog as a result of an Exception.
            </summary>
            <param name="nameOfClass">Name of a class that this exception relates to</param>
            <param name="where">Where the exception happened</param>
            <param name="exception">The Exception itself</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.RegisterReceiver(VideoOS.Platform.MessageReceiver,VideoOS.Platform.Messaging.MessageFilter)">
            <summary>
            Register a method to receive messages.
            </summary>
            <param name="messageReceiver">The method to be called</param>
            <param name="messageFilter">The filter to be used</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.UnRegisterReceiver(System.Object)">
            <summary>
            UnRegister a MessageReceiver
            </summary>
            <param name="registeredReceiver">The object returned when from the RegisterReceiver call</param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.SendMessage(VideoOS.Platform.Messaging.Message,VideoOS.Platform.FQID,VideoOS.Platform.FQID)">
            <summary>
            Send a Message
            </summary>
            <param name="message">The message to send</param>
            <param name="destination">The destination FQID, if relevant</param>
            <param name="sender">The sender, if known</param>
            
            
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.PostMessage(VideoOS.Platform.Messaging.Message,VideoOS.Platform.FQID,VideoOS.Platform.FQID)">
            <summary>
            Send a Message
            </summary>
            <param name="message">The message to send</param>
            <param name="destination">The destination FQID, if relevant</param>
            <param name="sender">The sender, if known</param>
        </member>
        <member name="P:VideoOS.Platform.SDK.Platform.SDKEnvironmentManager.MessageIdList">
            <summary>
            List of all known MessageIds.
            This includes all the message id's defined by the PlatformPlugin and environment
            as well as for all loaded plugins.
            This list is build during load of the plugins.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Platform.ServerNotFoundMIPException">
            <summary>
            The server passed in the Message property could not be found
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.ServerNotFoundMIPException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="server"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Platform.InvalidCredentialsMIPException">
            <summary>
            Credentials were not valid for the server passed in the Message property.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.InvalidCredentialsMIPException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="server"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Platform.LoginFailedInternalMIPException">
            <summary>
            An internal error prevented a successful Login
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Platform.LoginFailedInternalMIPException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="server"></param>
        </member>
        <member name="T:VideoOS.Platform.SDK.Properties.AssemblyInfo">
            <summary>
            Assembly info
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.FileVersion">
            <summary>
            File version
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.AssemblyVersion">
            <summary>
            Assembly version
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.VersionYear">
            <summary>
            Publish year
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.CompanyName">
            <summary>
            Company name
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.Copyright">
            <summary>
            Copyright statement
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.Trademark">
            <summary>
            Trademark statement
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.ProductName">
            <summary>
            Product name
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.Comments">
            <summary>
            Comments
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.Configuration">
            <summary>
            Release or debug
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Properties.AssemblyInfo.FullDescription">
            <summary>
            Description
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.DriverDynamicCapability">
            <summary>
            Definition class containing dynamic driver capability id's
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.DriverDynamicCapability.Pan">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.DriverDynamicCapability.Tilt">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.DriverDynamicCapability.Zoom">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.DriverDynamicCapability.Focus">
            <summary>
            
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.DriverDynamicCapability.Iris">
            <summary>
            
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.Resources.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AlertGroups">
            <summary>
              Looks up a localized string similar to Alert groups.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllAlerts">
            <summary>
              Looks up a localized string similar to All alerts ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllCameras">
            <summary>
              Looks up a localized string similar to All cameras ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllEvents">
            <summary>
              Looks up a localized string similar to All events ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllHardware">
            <summary>
              Looks up a localized string similar to All hardware ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllInputs">
            <summary>
              Looks up a localized string similar to All inputs ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllMatrix">
            <summary>
              Looks up a localized string similar to All Matrix ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllMetadataDevices">
            <summary>
              Looks up a localized string similar to All metadata devices ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllMicrophones">
            <summary>
              Looks up a localized string similar to All microphones ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllOutputs">
            <summary>
              Looks up a localized string similar to All outputs ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllSpeakers">
            <summary>
              Looks up a localized string similar to All speakers ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.AllTransactionSources">
            <summary>
              Looks up a localized string similar to All transaction sources ({0}).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.CameraGroups">
            <summary>
              Looks up a localized string similar to Camera groups.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.EdgeDevice">
            <summary>
              Looks up a localized string similar to {0} (EDGE).
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.EventGroups">
            <summary>
              Looks up a localized string similar to Event groups.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.GenericEvents">
            <summary>
              Looks up a localized string similar to Generic events.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.InputGroups">
            <summary>
              Looks up a localized string similar to Input groups.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.MetadataDeviceGroups">
            <summary>
              Looks up a localized string similar to Metadata device groups.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.MicrophoneGroups">
            <summary>
              Looks up a localized string similar to Microphone groups.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.OutputGroups">
            <summary>
              Looks up a localized string similar to Output groups.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Resources.Strings.SpeakerGroups">
            <summary>
              Looks up a localized string similar to Speaker groups.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Server.ConnectionCheck.IsServerOnline(System.String,System.Int32,System.String,System.Boolean@,System.Net.CredentialCache,System.Boolean@)">
            <summary>
            Identify if a server is online, e.g. reachable over network. It does not guarantee that Login can be performed.
            </summary>
            <param name="address"></param>
            <param name="timeout"></param>
            <param name="serverType"></param>
            <param name="https"></param>
            <param name="credentialCache"></param>
            <param name="unauthorized"></param>
            <returns></returns>
        </member>
        <member name="F:VideoOS.Platform.SDK.Server.ParallelHandler.GetVersionTimeout">
            <summary>
            Timeout in seconds
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.BaseEventMessageId">
            <summary>
            A list of internal event messages. These are all the known events that are either received from Corproate/Enterprise systems,
            or generated internally in the event server.
            
            These are also used as MessageId on BaseEvent class in e.g. NewEventIndication
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.BaseEventMessageId.GetAllEvents">
            <summary>
            Gets the IDs of all known events.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of all events</returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.EventMapper">
            <summary>
            This class is responsibe for mapping between the event IDs used in the Status API and
            the Base Event IDs used in the event server and enterprise.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.EventMapper.TryConvertStatusEventGuidToBaseEventMessageId(System.Guid,System.String@)">
            <summary>
            Tries to get the event message name given a Status API event GUID.
            </summary>
            <param name="statusApiEventId">The GUID of the event from the Status API</param>
            <param name="eventName">The name of the event</param>
            <returns>True, if there is an event message name that corresponds to the <paramref name="statusApiEventId"/>; false otherwise</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.EventMapper.StatusEventGuidToBaseEventMessageId(System.Guid,System.String)">
            <summary>
            Converts a Statsu APO event GUID to its corresponding event name.
            </summary>
            <param name="statusApiEventId">The GUID of the event from the Status API</param>
            <param name="defaultName">The default name of the event, if </param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.EventMapper.TryConvertBaseEventMessageIdToStatusEventGuid(System.String,System.Guid@)">
            <summary>
            Tries to get the Status API event GUID given an event message name.
            </summary>
            <param name="eventName">The name of the base event message id</param>
            <param name="statusApiEventId">The GUID of the event from the Status API</param>
            <returns>True, if there is a Status API event that corresponds to the <paramref name="eventName"/>; false otherwise</returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.CameraStateChangedEventArgs">
            <summary>
            This class is responsible representing data about the state of a camera device.
            
            Instances of this class are immutable.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.CameraStateChangedEventArgs.#ctor(System.DateTime,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="time"></param>
            <param name="deviceId"></param>
            <param name="enabled"></param>
            <param name="started"></param>
            <param name="isChange"></param>
            <param name="error"></param>
            <param name="errorNoConnection"></param>
            <param name="errorNotLicensed"></param>
            <param name="recording"></param>
            <param name="dbMoveInProgress"></param>
            <param name="errorOverflow"></param>
            <param name="errorWritingGop"></param>
            <param name="dbRepairInProgress"></param>
            <param name="motion"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.CameraStateChangedEventArgs.Motion">
            <summary>
            Gets whether the camera has detected motion.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs">
            <summary>
            This class is responsible for describing the information common to all events pertaining to devices.
            
            Instances of this class are immutable.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs.#ctor(System.DateTime,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="time"></param>
            <param name="deviceId"></param>
            <param name="enabled"></param>
            <param name="started"></param>
            <param name="isChange"></param>
            <param name="error"></param>
            <param name="errorNoConnection"></param>
            <param name="errorNotLicensed"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs.DeviceId">
            <summary>
            Gets the ID of the device which state changed.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs.Enabled">
            <summary>
            Gets whether the device is enabled.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs.Started">
            <summary>
            Gets whether the device is started.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs.IsChange">
            <summary>
            Gets whether there was change to the state of the device. This value can be false on the first
            query, as the status API always returns a cached copy of the latest state on the first
            query of state.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs.Error">
            <summary>
            Gets whether there is an error with the device.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs.ErrorNoConnection">
            <summary>
            Gets whether there is an error connecting to the device.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.DeviceStateChangedEventArgs.ErrorNotLicensed">
            <summary>
            Gets whether there is an error due to a license problem.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventArgsMapper">
            <summary>
            This class is responsible for mapping from the SOAP events returned from the Status API
            to the classes used in the clients. The purpose of extra mapping is to encapsulate
            the SOAP classes so client code does not need to know anything about it.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventFiredEventArgs">
            <summary>
            This class is responsible for representing the data for events fired by the system.
            
            Instances of this class are immutable.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventFiredEventArgs.#ctor(System.DateTime,System.Guid,System.Guid,VideoOS.Platform.SDK.Proxy.Status2.KeyValue[])">
            <summary>
            Constructor
            </summary>
            <param name="time"></param>
            <param name="sourceId"></param>
            <param name="eventId"></param>
            <param name="keyValues"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventFiredEventArgs.SourceId">
            <summary>
            Gets the ID of the source of the event.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventFiredEventArgs.EventId">
            <summary>
            Gets the unique identifier for the type of event.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventFiredEventArgs.DeviceIds">
            <summary>
            Gets collection of related devices
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventFiredEventArgs.DeviceGroupIds">
            <summary>
            Gets collection of related device groups
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventFiredEventArgs.Metadata">
            <summary>
            Metadata on the event for keys other than Devices
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.EventFiredEventArgs.GetUniqueKey">
            <summary>
            Generates unique key for this event instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs">
            <summary>
            This class is responsible for maintaining information about state changes for a hardware device.
            
            Instances of this class are immutable.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs.#ctor(System.DateTime,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="time"></param>
            <param name="hardwareId"></param>
            <param name="enabled"></param>
            <param name="started"></param>
            <param name="isChange"></param>
            <param name="error"></param>
            <param name="errorNoConnection"></param>
            <param name="errorNotLicensed"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs.HardwareId">
            <summary>
            Gets the ID of the hardware which state changed.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs.Enabled">
            <summary>
            Gets whether the device is enabled.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs.Started">
            <summary>
            Gets whether the device is started.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs.IsChange">
            <summary>
            Gets whether there was change to the state of the device. This value can be false on the first
            query, as the status API always returns a cached copy of the latest state on the first
            query of state.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs.Error">
            <summary>
            Gets whether there is an error with the device.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs.ErrorNoConnection">
            <summary>
            Gets whether there is an error connecting to the device.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.HardwareStateChangedEventArgs.ErrorNotLicensed">
            <summary>
            Gets whether there is an error due to a license problem.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.IODeviceStateChangedEventArgs">
            <summary>
            This class is responsible for representing data about the state of an IO device.
            
            Instances of this class are immutable.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.IODeviceStateChangedEventArgs.#ctor(System.DateTime,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="time"></param>
            <param name="deviceId"></param>
            <param name="enabled"></param>
            <param name="started"></param>
            <param name="isChange"></param>
            <param name="error"></param>
            <param name="errorNoConnection"></param>
            <param name="errorNotLicensed"></param>
            <param name="ioState"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.IODeviceStateChangedEventArgs.IoState">
            <summary>
            Gets the IO state of the device. Possible values are "Activated", "Deactivated" and "NotAvailable".
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.MediaStreamDeviceStateChangedEventArgs">
            <summary>
            This class is responsible for maintaining information about state changes for a media stream device.
            
            Instances of this class are immutable.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.MediaStreamDeviceStateChangedEventArgs.#ctor(System.DateTime,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="time"></param>
            <param name="deviceId"></param>
            <param name="enabled"></param>
            <param name="started"></param>
            <param name="isChange"></param>
            <param name="error"></param>
            <param name="errorNoConnection"></param>
            <param name="errorNotLicensed"></param>
            <param name="recording"></param>
            <param name="dbMoveInProgress"></param>
            <param name="errorOverflow"></param>
            <param name="errorWritingGop"></param>
            <param name="dbRepairInProgress"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.MediaStreamDeviceStateChangedEventArgs.Recording">
            <summary>
            Gets whether the media stream device is recording.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.MediaStreamDeviceStateChangedEventArgs.DbMoveInProgress">
            <summary>
            Gets whether the DB for the media stream device is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.MediaStreamDeviceStateChangedEventArgs.ErrorOverflow">
            <summary>
            Gets whether the media stream device has an error with overflow.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.MediaStreamDeviceStateChangedEventArgs.ErrorWritingGop">
            <summary>
            Gets whether the media stream device has an error when wirint the GoP (Group of Pictures)
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.MediaStreamDeviceStateChangedEventArgs.DbRepairInProgress">
            <summary>
            Gets whether the DB for the media stream device is being repaired.
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.StatusApiEventArgs">
            <summary>
            This class is the base class of all event arguments used by the Status API.
            
            Instances of this class are immutable.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.StatusApiEventArgs.#ctor(System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="time"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.StatusApiEventArgs.Time">
            <summary>
            Gets the time when the event occurred.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.StatusApiEventArgs.GetUniqueKey">
            <summary>
            Gets a string that uniquely identifies this event. This can be used to detect duplicated events.
            </summary>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.StatusSessionChangesArgs">
            <summary>
            This class is responsible for containing information on the connection status for a single 
            status session to a recording server.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.StatusSessionChangesArgs.#ctor(VideoOS.Platform.Item,VideoOS.Platform.SDK.Config.ConnectStates)">
            <summary>
            Constructor
            </summary>
            <param name="recorderServer"></param>
            <param name="connectionState"></param>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.StatusSessionChangesArgs.RecorderServer">
            <summary>
            The recording server the status change is related to
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventArgs.StatusSessionChangesArgs.ConnectionState">
            <summary>
            The new connection state
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusEventMessages">
            <summary>
            This class is responsible for holding information about the events in the system.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventMessages.Id">
            <summary>
            Id used for Status Session and Status API
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventMessages.StatusEventName">
            <summary>
            Build-in name
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusEventMessages.EventMessageName">
            <summary>
            Name used on BaseEvent class for e.g. NewEventIndication
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.SystemStatusClient">
            <summary>
            This class is responsible for retrieving Status Information and Events across an
            entire system. This means it will establish sessions to all servers with a Status API.
            The purpose is to simplify interaction to an entire system, which means that this class
            as part of it responsibility also de-duplicates events.
            
            This class supports recorder failover, and move-hardware fatures.
            
            The Move-hardware feature is supported when AddSubscriptionsToDevicesOfKindOnCreatedSessions
            method is used to subscribe to changes on all items of a given kind.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.#ctor(VideoOS.Platform.FQID)">
            <summary>
            Create a new client capable of connecting to all recording servers in an XPCO environment.
            </summary>
            <param name="managementServerId">The <see cref="T:VideoOS.Platform.FQID"/> </param>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.ConnectionStateChanged">
            <summary>
            Subscribe to this event to listen for changes to the connection state for the Status Sessions
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.ConfigurationChanged">
            <summary>
            Subscribe to this event to be notified if the configuration has changed.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.EventFired">
            <summary>
            Subscribe to this event to listen for events. 
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.CameraStateChanged">
            <summary>
            Subscribe to this event to listen for changes to camera states. An event will only be raised for
            devices explicitly subscribed to.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.InputDeviceStateChanged">
            <summary>
            Subscribe to this event to listen for changes to input device states. An event will only be raised for
            devices explicitly subscribed to.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.OutputDeviceStateChanged">
            <summary>
            Subscribe to this event to listen for changes to output device states. An event will only be raised for
            devices explicitly subscribed to.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.MicrophoneStateChanged">
            <summary>
            Subscribe to this event to listen for changes to microphone states. An event will only be raised for
            devices explicitly subscribed to.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.SpeakerStateChanged">
            <summary>
            Subscribe to this event to listen for changes to speaker states. An event will only be raised for
            devices explicitly subscribed to.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.MetadataStateChanged">
            <summary>
            Subscribe to this event to listen for changes to metadata states. An event will only be raised for
            devices explicitly subscribed to.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.HardwareStateChanged">
            <summary>
            Subscribe to this event to listen for changes to hardware states. An event will only be raised for
            devices explicitly subscribed to.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.CreateAndStartSessions">
            <summary>
            Starts sessions to all the recording servers attached to the management server given in the constructor.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.StopAndRemoveSessions">
            <summary>
            Stops all underlying sessions and cleans up resources. Does not block to wait for all sessions to finish.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.StopAndRemoveSessions(System.Boolean)">
            <summary>
            Stops all underlying sessions and cleans up resources.
            </summary>
            <param name="waitForsessionCompletetion">Set to true if this call should block until all sessions are completed.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.SetSubscribedEventsOnCreatedSessions(System.Collections.Generic.ISet{System.Guid})">
            <summary>
            Set the events to subscribe to. This method must be called after the <see cref="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.CreateAndStartSessions"/> method,
            otherwise it will not have an effect.
            </summary>
            <param name="eventGuids">An <see cref="T:System.Collections.Generic.ISet`1"/> of <see cref="T:System.Guid"/>s identifying the events to listen to.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.AddSubscriptionsToDevicesOfKindOnCreatedSessions(System.Guid)">
            <summary>
            Add subscriptions to all devices of a specific kind on the Recording Servers that this session is connected to.
            </summary>
            <param name="deviceKind">A <see cref="T:System.Guid"/> from the <see cref="T:VideoOS.Platform.Kind"/> class describing a kind of device</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.SubscribeToConfigurationChanges(System.Boolean)">
            <summary>
            Enable or disable getting events when the configuration has changed.
            </summary>
            <param name="subscribe"><c>true</c> to enable receiving events; <c>false</c> to disable.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.GetAllStatusEventMessages">
            <summary>
            Build and return a complete list of possible events for this VMS system
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.SystemStatusClient.CheckSubscribedElseWhere(VideoOS.Platform.FQID)">
            <summary>
            Check if device is subscribed by any session
            </summary>
            <param name="fqid"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusSession">
            <summary>
            This class is responsible for making an object-oriented abstraction on top of the underlying SOAP
            API. It represents a single session to a single recorder service host. If the connection is lost,
            the class will attempt to reestablish the connection forever until it succeeds. The reconnect interval
            progressively increases from immediately retrying to 30 seconds. Also, if the session is lost
            on the remote server, the class will create a new one without any client interaction. Furthermore,
            this class also handles fail-over automatically.
            
            The only way a client can shut down the polling thread is disposing of the <see cref="T:VideoOS.Platform.SDK.StatusClient.StatusSession"/>
            instance. If this is not done, the thread will not be stopped until the instance is finalized.
            
            It is important to note that Event handlers will be executed on a different thread, so they must
            be thread-safe in regards to the client code. The event handlers will not be executed in parallel,
            so they do not need to be reentrant. However, as the event handlers will run on the same thread 
            as where the remote server is polled, they will block any new events from arriving while they run.
            Therefore, event handlers should run fast.
            
            Note that the "Move Hardware" operation done via the Management Client is not supported directly
            in this class, but available when using the SystemStatusClient and initializing using all of a kind.
            
            To support move-hardware for other setups, please listen to the LocalConfigurationChangedIndication
            and loop through the received FQID's to identify what items has changed ServerIds.
            
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.#ctor(VideoOS.Platform.Item)">
            <summary>
            Creates a new instance of a <see cref="T:VideoOS.Platform.SDK.StatusClient.StatusSession"/>.
            </summary>
            <param name="recorderServer">An <see cref="T:VideoOS.Platform.Item"/> that is a Corporate Recording Server</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="recorderServer"/> is null</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="recorderServer"/> does not describe a server supporting Status API v. 2</exception>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusSession.DeviceKinds">
            <summary>
            Returns the Kinds that has been added via the AddSubscriptionsToDevicesOfKind method 
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.ServerSupportsStatusApi(VideoOS.Platform.ServerId)">
            <summary>
            Checks whether a <see cref="T:VideoOS.Platform.ServerId"/> represents a server that supports the status API.
            </summary>
            <param name="serverId">The ID of the server to check.</param>
            <returns><c>true</c> if the server type supports Status API, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.GetAllStatusEventMessages">
            <summary>
            Build and return a complete list of possible events for this VMS system
            </summary>
            <returns></returns>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.ConnectionStateChanged">
            <summary>
            Subscribe to this event to listen for changes to the connection state for the Status Session
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.ConfigurationChanged">
            <summary>
            Subscribe to this event to be notified if the configuration has changed. Be aware that this event is triggered across all
            Recording servers, so each session subscribing to the event will receive it.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.EventFired">
            <summary>
            Subscribe to this event to listen for events. Be aware that user defined events are triggered
            across all Recording servers, so each session subscribing to the event will receive it.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.CameraStateChanged">
            <summary>
            Subscribe to this event to listen for changes to camera states. An event will only be raised for
            devices explicitly subscribed to using one of the device subscription call.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.InputDeviceStateChanged">
            <summary>
            Subscribe to this event to listen for changes to input device states. An event will only be raised for
            devices explicitly subscribed to using one of the device subscription call.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.OutputDeviceStateChanged">
            <summary>
            Subscribe to this event to listen for changes to output device states. An event will only be raised for
            devices explicitly subscribed to using one of the device subscription call.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.MicrophoneStateChanged">
            <summary>
            Subscribe to this event to listen for changes to microphone states. An event will only be raised for
            devices explicitly subscribed to using one of the device subscription call.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.SpeakerStateChanged">
            <summary>
            Subscribe to this event to listen for changes to speaker states. An event will only be raised for
            devices explicitly subscribed to using one of the device subscription call.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.MetadataStateChanged">
            <summary>
            Subscribe to this event to listen for changes to metadata states. An event will only be raised for
            devices explicitly subscribed to using one of the device subscription call.
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.StatusClient.StatusSession.HardwareStateChanged">
            <summary>
            Subscribe to this event to listen for changes to hardware states. An event will only be raised for
            devices explicitly subscribed to using one of the device subscription call.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusSession.ConnectionState">
            <summary>
            Gets or sets the state of the connection.
            </summary>
            <value>The state of the connection.</value>
        </member>
        <member name="P:VideoOS.Platform.SDK.StatusClient.StatusSession.RecorderServer">
            <summary>
            Gets an <see cref="T:VideoOS.Platform.Item"/> that describes the logical server the Status Session is connected to.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.StartSession">
            <summary>
            Creates a new session and starts a thread to handle the communication. This method should only be called only once.
            If it is called multiple times, all calls but the first will be no-ops.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AddSubscriptionsToDevicesOfKind(System.Guid)">
            <summary>
            Add subscriptions to all devices of a specific kind on the Recording Server that this session is connected to.
            </summary>
            <param name="deviceKind">A <see cref="T:System.Guid"/> from the <see cref="T:VideoOS.Platform.Kind"/> class describing a kind of device</param>
            <returns>An <see cref="T:System.Collections.Generic.ISet`1"/> containing the IDs of the devices added. </returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.SetSubscribedDevicesForStateChanges(System.Collections.Generic.ISet{System.Guid})">
            <summary>
            Set the device ID's of the devices that the client is interested in listening to.
            This method will overwrite the existing subscriptions.
            </summary>
            <param name="deviceIds">The <see cref="T:System.Guid"/>s of the devices that will subscribed on</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="deviceIds"/> is null</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="deviceIds"/> is empty</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.SetSubscribedHardwareForStateChanges(System.Collections.Generic.ISet{System.Guid})">
            <summary>
            Set the hardware ID's of the hardware that the client is interested in listening to.
            This method will overwrite the existing subscriptions.
            </summary>
            <param name="hardwareIds">The <see cref="T:System.Guid"/>s of the hardware that will subscribed on</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="hardwareIds"/> is null</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="hardwareIds"/> is empty</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.IsDeviceBeingSubscribed(System.Guid)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.SetSubscribedEvents(System.Collections.Generic.ISet{System.Guid})">
            <summary>
            Set the event ID's of the events that the client is interested in listening to.
            This method will overwrite the existing subscriptions.
            </summary>
            <param name="eventIds">The <see cref="T:System.Guid"/>s of the events that will subscribed on</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="eventIds"/> is null</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="eventIds"/> is empty</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.SetConfigurationChangesSubscription(System.Boolean)">
            <summary>
            Enable or disable getting events when the configuration has changed.
            </summary>
            <param name="subscribe"><c>true</c> to enable receiving events; <c>false</c> to disable.</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.ContainsDeviceId(System.Guid)">
            <summary>
            Tells whether the session has subscribed to the provided id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.WaitForSessionCompletion">
            <summary>
            Blocks until the session has ended. Remember to call <see cref="M:VideoOS.Platform.SDK.StatusClient.StatusSession.Dispose"/> first to signal that the session should stop!
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller">
            <summary>
            This class is responsible for handling the asynchronous polling of the Status API on the remote
            recording server. It separates the public interface and state handling of subscriptions, provided
            by the outer class, from the nitty-gritty details of asynchronously polling and handling connection/
            session errors.
            
            This class is a nested class and not an independent class as it needs access to the event handlers of
            the external class to rigger the events.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller.StartPolling">
            <summary>
            Start the polling thread and the main communication loop.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller.Shutdown">
            <summary>
            Tell the async poller to shut down and stop polling.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller.SetSubscribedDevices(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Set which devices the async poller is subscribed to.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller.SetSubscribedHardware(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Set which hardware the async poller is subscribed to.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller.ContainsSubscribedDeviceId(System.Guid)">
            <summary>
            Returns if a given id has been subscribed to
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller.SetSubscribedEvents(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Set which events the async poller is subscribed to.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller.WaitForSessionCompletion">
            <summary>
            Blocks until the session thread has terminated
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.StatusSession.AsyncPoller.SetConfigurationChangesSubscription(System.Boolean)">
            <summary>
            Set whether configuration change should be notified through the Status API.
            </summary>
            <param name="subscribe">Whether events should be triggered when the configuration changes.</param>
        </member>
        <member name="T:VideoOS.Platform.SDK.StatusClient.KnownStatusEvents">
            <summary>
            This class holds predefined IDs for events in the Status APU used by Arcus and XPCO.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.KnownStatusEvents.GetEventName(System.Guid)">
            <summary>
            Gets the name of one of the known status event given its ID. If the <paramref name="eventId"/>
            does not correspond to a known event, the <paramref name="eventId"/> will simply be returned
            as a string.
            </summary>
            <param name="eventId">The ID of the event to find the name for</param>
            <returns>A string with the known name or the the GUID of the <paramref name="eventId"/></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.StatusClient.KnownStatusEvents.GetAllEvents">
            <summary>
            Gets the IDs of all known Status API events.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of all events</returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Util.ConfigUtil">
            <summary>
            Utility functions for generating the XML required to instantiate certain classes without loading the main configuration first.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ConfigUtil.GenerateCameraConfigurationXml(VideoOS.Platform.FQID)">
            <summary>
            Generate an XML that can be used later to initialize a ImageViewerControl without loading the main configuration first.
            </summary>
            <param name="itemFQID"></param>
            <returns>Xml to be used on the ImageViewerControl instead of a FQID</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ConfigUtil.GenerateMicrophoneConfigurationXml(VideoOS.Platform.FQID)">
            <summary>
            Generate an XML that can be used later to initialize an AudioPlayerControl without loading the main configuration first.
            </summary>
            <param name="itemFQID"></param>
            <returns>Xml to be used on the AudioPlayerControl instead of a FQID</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ConfigUtil.GenerateSpeakerConfigurationXml(VideoOS.Platform.FQID)">
            <summary>
            Generate an XML that can be used later to initialize an AudioPlayerControl without loading the main configuration first.
            </summary>
            <param name="itemFQID"></param>
            <returns>Xml to be used on the AudioPlayerControl instead of a FQID</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ConfigUtil.StripXmlHeader(System.String)">
            <summary>
            Finds the xml declaration in the beginning of the string and deletes it if exists
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="F:VideoOS.Platform.SDK.Util.MediaCommonUtility.DefaultImplementation">
            <summary>
            Decoder implementation to be selected for automatic hardware acceleration
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.MediaCommonUtility.GetDecoderImplementation">
            <summary>
            This method constructs the flag used by the decoders in the media toolkits, 
            to define if hardware decoding should be used.
            For now the 'off' MIP flag is understood as 'ipp' - but could be changed later to 'software' (Media SDK).
            
            The media toolkit option 'hardware' defines that it must use GPU.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.MediaCommonUtility.IsImplementationAutomatic(System.String)">
            <summary>
            This method translates the given decoding implementation to whether it should use hardware acceleration or not.
            </summary>
            <param name="decoderImplementation">The string value for the decoder implementation in the toolkits</param>
            <returns>A boolean indicating wherther that implementation is automatic or not.</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.MediaCommonUtility.GetDecoderImplementationValue(System.Boolean)">
            <summary>
            Returns an int corresponding to the desired implementation
            </summary>
            <param name="hardwareAccelerated">Whether the system is set to use hardware acceleration</param>
            <returns>An int corresponding to the enum used in the toolkits</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.MediaCommonUtility.GetDecoderImplementationValue(System.String)">
            <summary>
            Returns an int corresponding to the desired implementation
            </summary>
            <param name="decoderImplementation">The string describing the desired decoder implementation</param>
            <returns>An int corresponding to the enum used in the toolkits</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.MediaCommonUtility.GetDecoderThreadsDefault">
            <summary>
            Used internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.MediaCommonUtility.GetDecoderThreads(System.Int32)">
            <summary>
            Used internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.SDK.Util.ServerMonitor">
            <summary>
            A class to assist with information of a server is available or not.
            
            This class does not add the server into the different environments, but simply inform
            if it is available.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Util.ServerMonitor.MinPollInterval">
            <summary>
            Minimum allowed poll interval in seconds
            </summary>
        </member>
        <member name="F:VideoOS.Platform.SDK.Util.ServerMonitor.DefPollInterval">
            <summary>
            Default poll interval in seconds
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ServerMonitor.#ctor(System.Uri)">
            <summary>
            Using this constructor will cause the ServerMonitor to use the already logged in user
            </summary>
            <param name="uri">URI of the server to monitor</param>
            <exception cref="T:VideoOS.Platform.SDK.Platform.InvalidCredentialsMIPException">No valid login session was found</exception>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ServerMonitor.#ctor(System.Uri,System.String,System.String,System.Boolean)">
            <summary>
            Constructor for creating a monitor using its own login session.
            If incorrect credentials are provided the monitor will report the server as not connected and further information can be found in
            the <code>LastException</code> property.<br/>
            Please consider using the more secure version using SecureString for the password instead.
            </summary>
            <param name="uri">URI of the server to monitor</param>
            <param name="username">User name - must be valid on the server</param>
            <param name="password">Password</param>
            <param name="adUser">Set to false if provided user is a Basic user, otherwise set to true</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ServerMonitor.#ctor(System.Uri,System.String,System.Security.SecureString,System.Boolean)">
            <summary>
            Constructor for creating a monitor using its own login session.
            If incorrect credentials are provided the monitor will report the server as not connected and further information can be found in
            the <code>LastException</code> property.
            </summary>
            <param name="uri">URI of the server to monitor</param>
            <param name="username">User name - must be valid on the server</param>
            <param name="password">Password</param>
            <param name="adUser">Set to false if provided user is a Basic user, otherwise set to true</param>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ServerMonitor.Init">
            <summary>
            Initialize and start checking if connection is available
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ServerMonitor.Close">
            <summary>
            Close background thread
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ServerMonitor.Dispose">
            <summary>
            Has same function as Close()
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Util.ServerMonitor.IsConnected">
            <summary>
            Identifies if the server is available for login.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Util.ServerMonitor.PollInterval">
            <summary>
            The pause interval between checks.
            The default value is <see cref="F:VideoOS.Platform.SDK.Util.ServerMonitor.DefPollInterval"/>.
            The minimum allowed is <see cref="F:VideoOS.Platform.SDK.Util.ServerMonitor.MinPollInterval"/>.
            Note that when server is down, additional time between checks occur depending on various timeouts on the network.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Util.ServerMonitor.Uri">
            <summary>
            The URI as provided during initialization, possibly modified to be correct.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Util.ServerMonitor.LastException">
            <summary>
            Any exception occurred during the check is stored in this property.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Util.ServerMonitor.Running">
            <summary>
            Tells if this check function in this class is running.
            </summary>
        </member>
        <member name="P:VideoOS.Platform.SDK.Util.ServerMonitor.ServerId">
            <summary>
            Provides the ID of the server being monitored
            </summary>
        </member>
        <member name="E:VideoOS.Platform.SDK.Util.ServerMonitor.ConnectionStateChangedEvent">
            <summary>
            You can register on this event, if you need to know when the session to the Event Server is changing.<br/>
            When receiving the event call, check the IsConnected property for the actual state.
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.ServerMonitor.Run">
            <summary>
            </summary>
        </member>
        <member name="M:VideoOS.Platform.SDK.Util.UriUtil.UriEqual(System.Uri,System.Uri)">
            <summary>
            Compare two Uri's - using the dnssafehost, but can ignore if one has the domain name
            
            also compares the ports, ignoring 0 value as default.
            </summary>
            <param name="uri1"></param>
            <param name="uri2"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.FromDouble(System.Double)">
            <summary>
            Convert a UNIX/POSIX time given as a double to MS .NET DateTime representation
            </summary>
            <param name="millisec">Number of milliseconds since UNIX Epoch (Jan 1st 1970)</param>
            <returns>A DateTime representing the same time</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.FromInt(System.Int32)">
            <summary>
            Convert a UNIX/POSIX time given as an integer to MS .NET DateTime representation
            </summary>
            <param name="millisec">Number of milliseconds since UNIX Epoch (Jan 1st 1970)</param>
            <returns>A DateTime representing the same time</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.FromString(System.String)">
            <summary>
            Convert a UNIX/POSIX time given as a string representing a number to MS .NET DateTime representation
            </summary>
            <param name="millisec">Number of milliseconds since UNIX Epoch (Jan 1st 1970)</param>
            <returns>A DateTime representing the same time</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ToDouble(System.DateTime)">
            <summary>
            Convert an MS .NET DateTime to a double representing the elapsed number of milliseconds since UNIX Epoch
            </summary>
            <param name="time">A date and a time. </param>
            <returns>Number of milliseconds since UNIX Epoch corresponding to the input time, in UTC</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ToInt(System.DateTime)">
            <summary>
            Convert an MS .NET DateTime to an integer representing the elapsed number of milliseconds since UNIX Epoch
            NOTE: Is not recommended to use this method, as it will almost always overflow 
            </summary>
            <param name="time">A date and a time</param>
            <returns>Number of milliseconds since UNIX Epoch corresponding to the input time</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ToLong(System.DateTime)">
            <summary>
            Convert an MS .NET DateTime to an integer representing the elapsed number of milliseconds since UNIX Epoch
            </summary>
            <param name="time">A date and a time</param>
            <returns>Number of milliseconds since UNIX Epoch corresponding to the input time</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ToMillisecString(System.DateTime)">
            <summary>
            Convert a datetime to a number of seconds since epoc.  To be used for the Recorder commands.
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ToMilisecString(System.DateTime)">
            <summary>
            Use ToMillisecString
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ToStringWithTandZ(System.DateTime)">
            <summary>
            Convert datetime to a string of format: yyyy-MM-ddTHH:mm:ss.fffZ
            </summary>
            <param name="datetime"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ConvertAndFormat(System.String,System.TimeZoneInfo,System.DateTime)">
            <summary>
            Formats a timestamp with reference to a specified time zone.
            </summary>
            <param name="formatPattern">Describes how the timestamp should be formatted. See http://msdn.microsoft.com/en-us/library/az4se3k1.aspx </param>
            <param name="timeZone">The timestamp will be formatted with reference to the value of this argument</param>
            <param name="input">The timestamp to format</param>
            <returns>A string containing the formatted result</returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ConvertAndFormat(System.String,System.TimeZoneInfo,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            </summary>
            <param name="formatPattern"></param>
            <param name="timeZone"></param>
            <param name="input"></param>
            <param name="injectMilliseconds"></param>
            <param name="injectOffset"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.SDK.TimeConverter.ConvertToTimeZone(System.TimeZoneInfo,System.DateTime)">
            <summary>
            </summary>
            <param name="timeZone"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.Mobile.ICommGateway">
            <summary>
            Interface to abstract TCP and HTTP - even though only the HTTP part has been completed!
            </summary>
        </member>
        <member name="T:VideoOS.Platform.Mobile.ConnectionType">
            <summary>
            Connection type.
            Note: only ctHttp is implemented.
            </summary>
        </member>
        <member name="F:VideoOS.Platform.Mobile.Encryption.DHKeyGenerator.Skip1024ModulusBytes">
            <summary>
            The 1024 bit Diffie-Hellman modulus values used by SKIP
            </summary>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Encryption.DHKeyGenerator.Initialize">
            <summary>
            Initialize with the default parameters (the SKIP parameters)
            </summary>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Encryption.DHKeyGenerator.Initialize(System.Byte[],System.Int32)">
            <summary>
             Initialize with custom parameters 
             </summary>
             <param name="p">byte array containing the value of the prime</param>
             <param name="g">integer containing the value of the generator</param>
        </member>
        <member name="F:VideoOS.Platform.Mobile.Encryption.DHKeyGenerator.KeyLenExponent">
            <summary>
             Generate public/private key pair
            </summary>
            <returns>DHKeyPair containing the generated keys</returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Encryption.DHKeyGenerator.GetSecretKeyBytes(System.Int32,System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>
            Generate a (shared) secret key with the desired size, given a set of public and private keys.
            </summary>
            <param name="keysize"> the desired key size in bytes</param>
            <param name="publicKey"> - the public key, received to the recipient</param>
            <param name="privateKey"> - the private key</param>
            <returns>buffer with <i>keysize</i> bytes</returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Encryption.PBE.GetEncryptedValue(System.String)">
            <summary>
            Gets the encrypted value.
            </summary>
            <param name="inputValue">The input value, plain text.</param>
            <returns>The coded value (base64-encoded)</returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Encryption.PBE.GetDecryptedValue(System.String)">
            <summary>
            Gets the decrypted value.
            </summary>
            <param name="inputValue">The input value (base64-encoded).</param>
            <returns>The plain-text value</returns>
        </member>
        <member name="T:VideoOS.Platform.Mobile.Utilities.EnumsHelper">
            <summary>
            Class containing static methods for working with Enums
            </summary>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.EnumsHelper.GetDescription(System.Enum)">
            <summary>
            Gets the description of the provided Enum
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.EnumsHelper.EnumConverter``1(System.String)">
            <summary>
            Attempts converting the provided string to an Enum of given type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="szInput"></param>
            <returns></returns>
        </member>
        <member name="T:VideoOS.Platform.Mobile.Utilities.EnumsHelper.IAttributeValue`1">
            <summary>
            Interface for working with Enum attributes
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.EnumsHelper.IAttributeValue`1.GetValue">
            <summary>
            Gets the value of this attribute
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.EnumsHelper.GetAttributeValue``2(System.Enum)">
            <summary>
            Method for getting the value of an attribute
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.TimeConverter.FromDouble(System.Double)">
            <summary>
            Convert a UNIX/POSIX time given as a double to MS .NET DateTime representation
            </summary>
            <param name="millisec">Number of milliseconds since UNIX Epoch (Jan 1st 1970)</param>
            <returns>A DateTime representing the same time</returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.TimeConverter.FromLong(System.Int64)">
            <summary>
            Convert a UNIX/POSIX time given as an integer to MS .NET DateTime representation
            </summary>
            <param name="millisec">Number of milliseconds since UNIX Epoch (Jan 1st 1970)</param>
            <returns>A DateTime representing the same time</returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.TimeConverter.FromString(System.String)">
            <summary>
            Convert a UNIX/POSIX time given as a string representing a number to MS .NET DateTime representation
            </summary>
            <param name="millisec">Number of milliseconds since UNIX Epoch (Jan 1st 1970)</param>
            <returns>A DateTime representing the same time</returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.TimeConverter.ToDouble(System.DateTime)">
            <summary>
            Convert an MS .NET DateTime to a double representing the elapsed number of milliseconds since UNIX Epoch
            </summary>
            <param name="time">A date and a time</param>
            <returns>Number of milliseconds since UNIX Epoch corresponding to the input time</returns>
        </member>
        <member name="M:VideoOS.Platform.Mobile.Utilities.TimeConverter.ToLong(System.DateTime)">
            <summary>
            Convert an MS .NET DateTime to an integer representing the elapsed number of milliseconds since UNIX Epoch
            </summary>
            <param name="time">A date and a time</param>
            <returns>Number of milliseconds since UNIX Epoch corresponding to the input time</returns>
        </member>
        <member name="P:VideoOS.Common.Proxy.Server.WCF.ProductInfo.ProductCode">
            <remarks/>
        </member>
        <member name="P:VideoOS.Common.Proxy.Server.WCF.ProductInfo.SLC">
            <remarks/>
        </member>
        <member name="P:VideoOS.Common.Proxy.Server.WCF.DeviceInfo.GisPoint">
            <remarks/>
        </member>
        <member name="P:VideoOS.Common.Proxy.Server.WCF.DeviceInfo.ShortName">
            <remarks/>
        </member>
        <member name="P:VideoOS.Common.Proxy.Server.WCF.DeviceInfo.Icon">
            <remarks/>
        </member>
        <member name="P:VideoOS.Common.Proxy.Server.WCF.DeviceInfo.CoverageDirection">
            <remarks/>
        </member>
        <member name="P:VideoOS.Common.Proxy.Server.WCF.DeviceInfo.CoverageDepth">
            <remarks/>
        </member>
        <member name="P:VideoOS.Common.Proxy.Server.WCF.DeviceInfo.CoverageFieldOfView">
            <remarks/>
        </member>
        <member name="T:ITransactWebService">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetTestMsg">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetSources(System.String)">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetSourceState(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetLiveLines(System.String,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetLinesBeforeTime(System.String,System.Guid,System.DateTime,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetLinesAfterTime(System.String,System.Guid,System.DateTime,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetLinesBeforeID(System.String,System.Guid,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetLinesAfterID(System.String,System.Guid,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ITransactWebService.GetData(System.String,System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="T:ITransactWebServiceChannel">
            <remarks/>
        </member>
        <member name="T:TransactWebServiceClient">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.#ctor">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.#ctor(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetTestMsg">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetSources(System.String)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetSourceState(System.String,System.Guid)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetLiveLines(System.String,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetLinesBeforeTime(System.String,System.Guid,System.DateTime,System.Int32)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetLinesAfterTime(System.String,System.Guid,System.DateTime,System.Int32)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetLinesBeforeID(System.String,System.Guid,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetLinesAfterID(System.String,System.Guid,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:TransactWebServiceClient.GetData(System.String,System.String,System.Int32)">
            <remarks/>
        </member>
    </members>
</doc>
