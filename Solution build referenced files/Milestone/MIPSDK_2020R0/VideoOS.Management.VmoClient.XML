<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VideoOS.Management.VmoClient</name>
    </assembly>
    <members>
        <member name="T:VideoOS.Management.VmoClient.Properties.VmoResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60000">
            <summary>
              Looks up a localized string similar to There has been an unexpected database error. Please contact your server administrator..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60001">
            <summary>
              Looks up a localized string similar to A role with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60002">
            <summary>
              Looks up a localized string similar to Cannot update the role. The role with the ID {0} does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60003">
            <summary>
              Looks up a localized string similar to Could not rename the role. A role named {0} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60004">
            <summary>
              Looks up a localized string similar to Could not remove the role. There is no role with the ID {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60005">
            <summary>
              Looks up a localized string similar to Could not remove the role. You cannot remove built-in security roles..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60006">
            <summary>
              Looks up a localized string similar to Could not add the role member. The role with the ID {0} does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60007">
            <summary>
              Looks up a localized string similar to The role {0} already has the member {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60008">
            <summary>
              Looks up a localized string similar to Error in the internal stored procedure. The stored procedure cannot be run outside of a transaction..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60009">
            <summary>
              Looks up a localized string similar to There is no role with the name {0}. The system could not remove it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60010">
            <summary>
              Looks up a localized string similar to You cannot remove the BUILTIN\Administrators member from the Administrator role..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60011">
            <summary>
              Looks up a localized string similar to There is no role member with the security identifier (SID) {0}. The system could not remove the role member..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60012">
            <summary>
              Looks up a localized string similar to Could not retrieve the information for the security object {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60013">
            <summary>
              Looks up a localized string similar to Could not retrieve information for the security action {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60014">
            <summary>
              Looks up a localized string similar to A user-defined event with the name {0} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60015">
            <summary>
              Looks up a localized string similar to Could not rename the user-defined event. The event named &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60016">
            <summary>
              Looks up a localized string similar to Could not register the object. The object with the ID {0} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60017">
            <summary>
              Looks up a localized string similar to Could not register the object. The object class with the ID {0} does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60018">
            <summary>
              Looks up a localized string similar to Could not register the object. The parent object with the ID {0} does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60019">
            <summary>
              Looks up a localized string similar to Security object &apos;{1}&apos; is from a different class than the security object &apos;{0}&apos; and can therefore not be the parent object..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60020">
            <summary>
              Looks up a localized string similar to A failover server with the name {0} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60021">
            <summary>
              Looks up a localized string similar to Could not create the access entry. The object with the ID {0} does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60022">
            <summary>
              Looks up a localized string similar to Could not create the access entry. One of the specified actions does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60023">
            <summary>
              Looks up a localized string similar to Query class actions failed. The class {0} does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60024">
            <summary>
              Looks up a localized string similar to Could not delete the access control entry for: object {0}, permission {1}, user {2}. It does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60025">
            <summary>
              Looks up a localized string similar to A recording storage with the name {0} already exists on the recording server &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60026">
            <summary>
              Looks up a localized string similar to Cannot rename the recording storage. A recording storage named &apos;{0}&apos; already exists on the recording server &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60027">
            <summary>
              Looks up a localized string similar to The recording storage does not exist. The system cannot update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60028">
            <summary>
              Looks up a localized string similar to The recording storage does not exist. The system cannot remove it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60029">
            <summary>
              Looks up a localized string similar to Cannot remove the recording storage. You cannot remove the default recording storage..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60030">
            <summary>
              Looks up a localized string similar to Could not retrieve the failover servers. The failover group with the ID {0} does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60031">
            <summary>
              Looks up a localized string similar to A failover group with the name {0} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60032">
            <summary>
              Looks up a localized string similar to Could not update the failover group. The failover group with the ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60033">
            <summary>
              Looks up a localized string similar to A failover group with the name {0} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60034">
            <summary>
              Looks up a localized string similar to Could not remove the failover group. There is no failover group with the ID &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60035">
            <summary>
              Looks up a localized string similar to Could not remove the failover group. You cannot remove built-in failover groups..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60036">
            <summary>
              Looks up a localized string similar to Could not remove the failover group. The failover group is not empty. Before removal, all failover servers must be moved to another failover group..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60037">
            <summary>
              Looks up a localized string similar to A failover server with the name {0} already exists in the failover group {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60038">
            <summary>
              Looks up a localized string similar to Could not create the failover server. There is no failover group with the ID {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60039">
            <summary>
              Looks up a localized string similar to Could not update the failover server. The failover server with the ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60040">
            <summary>
              Looks up a localized string similar to Could not rename the failover server. A failover server named &apos;{0}&apos; already exists in the failover group {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60041">
            <summary>
              Looks up a localized string similar to Could not move the failover server. The failover group with the ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60042">
            <summary>
              Looks up a localized string similar to Could not move the failover server. The failover group {0} already contains a failover server with the name {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60043">
            <summary>
              Looks up a localized string similar to Could not move the failover server. The target group is the current group for the failover server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60044">
            <summary>
              Looks up a localized string similar to Could not remove the user-defined event. There is no user-defined event with the ID &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60045">
            <summary>
              Looks up a localized string similar to The hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60046">
            <summary>
              Looks up a localized string similar to Could not create or append to the specified file. Either &apos;Scripting.FileSystemObject&apos; is not available on the SQL Server or the permission to do &apos;Ole Automation Procedures&apos; is disabled..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60047">
            <summary>
              Looks up a localized string similar to The recording server does not exist. The system could not update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60048">
            <summary>
              Looks up a localized string similar to Could not remove the failover server. There is no failover server with the ID &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60049">
            <summary>
              Looks up a localized string similar to An archive with the name {0} already exists on the recording server {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60050">
            <summary>
              Looks up a localized string similar to Could not rename the archive. An archive with the name {0} already exists on the recording server {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60051">
            <summary>
              Looks up a localized string similar to Could not update the archive. The archive does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60052">
            <summary>
              Looks up a localized string similar to Could not remove the archive. The archive does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60053">
            <summary>
              Looks up a localized string similar to Another user has already updated the hardware. Refresh and try again..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60054">
            <summary>
              Looks up a localized string similar to Could not move the recording server. The server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60055">
            <summary>
              Looks up a localized string similar to Could not create the server group. A server group with the name {0} already exists under the group {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60056">
            <summary>
              Looks up a localized string similar to Could not create the server group. The parent server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60057">
            <summary>
              Looks up a localized string similar to Could not create the server group. The maximum group depth of 12 levels has been exceeded..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60058">
            <summary>
              Looks up a localized string similar to Could not update the hardware. The hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60059">
            <summary>
              Looks up a localized string similar to Could not remove the server group. The server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60060">
            <summary>
              Looks up a localized string similar to Could not update the server group. The server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60061">
            <summary>
              Looks up a localized string similar to Could not update the server group. A server group with the name {0} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60062">
            <summary>
              Looks up a localized string similar to Could not create the hardware template. The hardware template already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60063">
            <summary>
              Looks up a localized string similar to Could not update the hardware template. The hardware template does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60064">
            <summary>
              Looks up a localized string similar to Could not update the device. The device does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60065">
            <summary>
              Looks up a localized string similar to Could not create the hardware template. The hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60066">
            <summary>
              Looks up a localized string similar to Could not update the hardware template. The hardware template already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60067">
            <summary>
              Looks up a localized string similar to You cannot remove the &apos;Private&apos; view group..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60068">
            <summary>
              Looks up a localized string similar to Could not remove the hardware template. The hardware template does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60069">
            <summary>
              Looks up a localized string similar to Could not create the device plug-in. The device plug-in with the ID {0} and device ID {1} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60070">
            <summary>
              Looks up a localized string similar to Could not create the device plug-in template. The device plug-in template with the ID {0} and device ID {1} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60071">
            <summary>
              Looks up a localized string similar to The device does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60072">
            <summary>
              Looks up a localized string similar to Could not move the server group. The parent server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60073">
            <summary>
              Looks up a localized string similar to Could not move the server group. The server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60074">
            <summary>
              Looks up a localized string similar to The server group or one of its subgroups has members. The system could not remove it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60075">
            <summary>
              Looks up a localized string similar to Could not remove the server group. The uppermost server group cannot be removed..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60076">
            <summary>
              Looks up a localized string similar to Could not move the server group. The uppermost server group cannot be moved..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60077">
            <summary>
              Looks up a localized string similar to Could not move the server group. The server group cannot be moved to one its descendants..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60078">
            <summary>
              Looks up a localized string similar to Could not move the server group. The server group cannot have itself as parent..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60079">
            <summary>
              Looks up a localized string similar to Could not move the recording server. The recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60080">
            <summary>
              Looks up a localized string similar to Could not query the hardware by recording server. The recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60081">
            <summary>
              Looks up a localized string similar to Could not query the hardware drivers. The recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60082">
            <summary>
              Looks up a localized string similar to Could not delete the hardware. The hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60083">
            <summary>
              Looks up a localized string similar to Could not create the hardware. The recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60084">
            <summary>
              Looks up a localized string similar to Could not query the device by hardware. The hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60085">
            <summary>
              Looks up a localized string similar to Could not query the device by hardware and type. The hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60086">
            <summary>
              Looks up a localized string similar to Could not query the server group. The parent server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60087">
            <summary>
              Looks up a localized string similar to Could not move the server group. A server group with the name {0} already exists under the group {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60088">
            <summary>
              Looks up a localized string similar to Could not move the server group. The maximum group depth of 12 levels has been exceeded..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60089">
            <summary>
              Looks up a localized string similar to Could not query the recording server. The server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60090">
            <summary>
              Looks up a localized string similar to Could not query the device by device group. The device group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60091">
            <summary>
              Looks up a localized string similar to The bookmark does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60092">
            <summary>
              Looks up a localized string similar to The encryption methods &apos;None&apos; and &apos;Unknown&apos; are not valid values. The system could not configure the encryption..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60093">
            <summary>
              Looks up a localized string similar to Could not configure the encryption for the recording storage. The recording storage does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60094">
            <summary>
              Looks up a localized string similar to Encryption already enabled for the recording storage. A new password has not been set..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60095">
            <summary>
              Looks up a localized string similar to Could not configure the encryption for the recording storage. Another encryption configuration change is pending..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60096">
            <summary>
              Looks up a localized string similar to The hardware does not exist. The system could not retrieve its settings..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60097">
            <summary>
              Looks up a localized string similar to Could not configure the encryption for the recording storage. Incorrect password specified..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60098">
            <summary>
              Looks up a localized string similar to Encryption is disabled. You must enable encryption before you can to make changes. The system could not configure the encryption..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60099">
            <summary>
              Looks up a localized string similar to The user-defined event does not exist. The system could not update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60100">
            <summary>
              Looks up a localized string similar to Could not define the default recording storage. The recording storage does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60101">
            <summary>
              Looks up a localized string similar to Could not define the default archive. The archive does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60102">
            <summary>
              Looks up a localized string similar to Could not remove the archive. The archive with the name {0} is in use by one or more devices..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60103">
            <summary>
              Looks up a localized string similar to Could not remove the recording storage. The recording storage with the name {0} is in use by one or more devices..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60104">
            <summary>
              Looks up a localized string similar to Could not enable archiving. No archive has been defined for the device with the name {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60105">
            <summary>
              Looks up a localized string similar to Could not create or append to the specified file. The SQL user does not have the required permissions to access the specified file..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60106">
            <summary>
              Looks up a localized string similar to Could not create the device group. The parent device group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60107">
            <summary>
              Looks up a localized string similar to Could not create the device group. It is not possible to add new device groups to built-in device groups..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60108">
            <summary>
              Looks up a localized string similar to Could not create the device group. A device group with the name {0} already exists under the group {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60109">
            <summary>
              Looks up a localized string similar to Could not update the device group. The device group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60110">
            <summary>
              Looks up a localized string similar to Could not update the device group. It is not possible to change built-in device groups..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60111">
            <summary>
              Looks up a localized string similar to Could not update the device group. A device group with the name {0} already exists under the group {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60112">
            <summary>
              Looks up a localized string similar to Could not move the device group. The source device group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60113">
            <summary>
              Looks up a localized string similar to Could not move the device group. The target device group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60114">
            <summary>
              Looks up a localized string similar to Could not move the device group. It is not possible to move built-in device groups..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60115">
            <summary>
              Looks up a localized string similar to Could not move the device group. It is not possible to move device groups to built-in device groups..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60116">
            <summary>
              Looks up a localized string similar to Could not move the device group. A device group with the name {0} already exists under the group {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60117">
            <summary>
              Looks up a localized string similar to Could not move the device group. The source device group must be of the same type as the target device group..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60118">
            <summary>
              Looks up a localized string similar to Could not remove the device group. The device group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60119">
            <summary>
              Looks up a localized string similar to Could not add the device group member. The device group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60120">
            <summary>
              Looks up a localized string similar to Could not add the device group member. It is not possible to add members to built-in device groups..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60121">
            <summary>
              Looks up a localized string similar to Could not add the device group member. The device does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60122">
            <summary>
              Looks up a localized string similar to Could not add the device group member. The device must be of the same type as the device group..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60123">
            <summary>
              Looks up a localized string similar to Could not add the device group member. A device with the name {0} is already a member of the group {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60124">
            <summary>
              Looks up a localized string similar to Could not delete the device group member. The device group member does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60125">
            <summary>
              Looks up a localized string similar to Could not move the device group. You cannot move a device group to one of its subgroups..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60126">
            <summary>
              Looks up a localized string similar to Could not move the device group. A device group cannot have itself as parent..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60127">
            <summary>
              Looks up a localized string similar to Could not update the hardware settings. The hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60128">
            <summary>
              Looks up a localized string similar to Could not create the task. The task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60129">
            <summary>
              Looks up a localized string similar to Could not delete the task. The task does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60130">
            <summary>
              Looks up a localized string similar to Could not update the task. The task does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60131">
            <summary>
              Looks up a localized string similar to Could not enable the frame rate reduction. The archive does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60132">
            <summary>
              Looks up a localized string similar to Could not move the storage. A conflicting task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60133">
            <summary>
              Looks up a localized string similar to Could not move archive. A conflicting task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60134">
            <summary>
              Looks up a localized string similar to Could not delete storage. A conflicting task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60135">
            <summary>
              Looks up a localized string similar to Could not delete archive. A conflicting task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60136">
            <summary>
              Looks up a localized string similar to Cannot delete the recordings. A conflicting task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60137">
            <summary>
              Looks up a localized string similar to Cannot move the recordings. A conflicting task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60138">
            <summary>
              Looks up a localized string similar to Could not apply the encryption method changes. A conflicting task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60139">
            <summary>
              Looks up a localized string similar to Could not apply the encryption password changes. A conflicting task already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60140">
            <summary>
              Looks up a localized string similar to The path is not a valid recording storage path on the recording server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60141">
            <summary>
              Looks up a localized string similar to The path is not a valid archive path on the recording server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60142">
            <summary>
              Looks up a localized string similar to Could not connect to the Management Server service..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60143">
            <summary>
              Looks up a localized string similar to The recording server is unavailable..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60144">
            <summary>
              Looks up a localized string similar to Communication with the recording server timed out..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60145">
             <summary>
               Looks up a localized string similar to Cannot create the archive.
            
            The retention time for the archive must be higher than the retention time of the recording storage..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60146">
             <summary>
               Looks up a localized string similar to Failed to create archive.
            
            The retention time for the archive must not be identical to the retention time for another archive..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60147">
             <summary>
               Looks up a localized string similar to Cannot set the retention time for the recording storage.
            
            The retention time must be lower than the retention time of the first archive..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60148">
             <summary>
               Looks up a localized string similar to Could not set the retention time for the archive.
            
            The retention time must be higher than the retention time of the previous archive..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60149">
             <summary>
               Looks up a localized string similar to Could not set the retention time for the archive.
            
            The retention time must be lower than the retention time of the next archive..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60150">
             <summary>
               Looks up a localized string similar to Cannot set the retention time for the archive.
            
            The retention time must be higher than the retention time of the recording storage..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60151">
             <summary>
               Looks up a localized string similar to Could not delete the archive.
            
            Only the last archive in a storage configuration can be deleted..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60152">
             <summary>
               Looks up a localized string similar to Cannot create the recording storage.
            
            The path is invalid..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60153">
             <summary>
               Looks up a localized string similar to Could not create the archive.
            
            The path is invalid..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60154">
            <summary>
              Looks up a localized string similar to Active Directory search did not return an identity..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60155">
            <summary>
              Looks up a localized string similar to Could not look up the SID for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60156">
            <summary>
              Looks up a localized string similar to The SID named &apos;{0}&apos; is not a valid security identifier..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60157">
             <summary>
               Looks up a localized string similar to Could not load the hardware driver.
            
            The hardware driver does not exist..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60158">
             <summary>
               Looks up a localized string similar to Could not clean up the task.
            
            The task is not completed..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60159">
            <summary>
              Looks up a localized string similar to Could not create the device group. A device group with the same name already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60160">
            <summary>
              Looks up a localized string similar to Internal error: The database procedure {0} returned the wrong number of rows..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60161">
            <summary>
              Looks up a localized string similar to The server could not connect to the database. Verify that the server that is hosting the database is operational, and that network problems are not blocking communication with the server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60162">
            <summary>
              Looks up a localized string similar to The server could not return the result set because the number of rows exceeds the allowed maximum number of rows. Confirm that the parameters in the query are correct. If the parameters are correct or the problem persists, please contact your server administrator and request that the row limit be increased. Current Limit: {0}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60163">
            <summary>
              Looks up a localized string similar to The marked data (evidence lock or bookmark) does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60164">
            <summary>
              Looks up a localized string similar to The user is not authorized for login..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60165">
            <summary>
              Looks up a localized string similar to The user cannot authorize himself..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60166">
            <summary>
              Looks up a localized string similar to The user is not allowed to authorize..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60167">
            <summary>
              Looks up a localized string similar to The device does not support PTZ presets..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60168">
            <summary>
              Looks up a localized string similar to The device preset does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60169">
            <summary>
              Looks up a localized string similar to Another device preset with this name already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60170">
            <summary>
              Looks up a localized string similar to Could not create the report. A report with the name &apos;{0}&apos; already exist in the report group &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60171">
            <summary>
              Looks up a localized string similar to Could not update the report. The report does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60172">
            <summary>
              Looks up a localized string similar to Could not rename the report. A report with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60173">
            <summary>
              Looks up a localized string similar to Could not remove the report. The report does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60174">
            <summary>
              Looks up a localized string similar to The recording server service version is no longer supported. You can still access recordings on the recording server, but it must be upgraded to the current version before you can change its configuration..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60175">
            <summary>
              Looks up a localized string similar to The specified group does not exist. The system could not add devices to it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60176">
            <summary>
              Looks up a localized string similar to You cannot add devices to built-in device groups..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60177">
            <summary>
              Looks up a localized string similar to One or more of the specified devices does not exist. The system could not add devices to the group..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60178">
            <summary>
              Looks up a localized string similar to One or more of the specified devices is not compatible with the group type. The system could not add the devices to the group..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60179">
            <summary>
              Looks up a localized string similar to One or more of the specified devices already exists in the device group. The system could not add the devices..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60180">
            <summary>
              Looks up a localized string similar to The specified group does not exist. The system could not remove the devices..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60181">
            <summary>
              Looks up a localized string similar to You cannot remove devices from a built-in device group..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60182">
            <summary>
              Looks up a localized string similar to One or more of the specified devices does not exist in the group. The system could not remove the devices..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60183">
            <summary>
              Looks up a localized string similar to The argument must be a positive number..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60184">
            <summary>
              Looks up a localized string similar to The recording frame rate must be larger than 0..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60185">
            <summary>
              Looks up a localized string similar to Could not delete the device group. The group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60186">
            <summary>
              Looks up a localized string similar to Could not delete the device group. The group is built-in and cannot be deleted..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60187">
            <summary>
              Looks up a localized string similar to Could not delete the device group. The group is not empty..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60188">
            <summary>
              Looks up a localized string similar to The device does not exist. The system could not retrieve its settings..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60189">
            <summary>
              Looks up a localized string similar to The system could not find the hardware driver definition..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60190">
            <summary>
              Looks up a localized string similar to The system could not find the hardware. The system could not retrieve its settings..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60191">
            <summary>
              Looks up a localized string similar to The device does not exist. The system could not update the settings..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60192">
             <summary>
               Looks up a localized string similar to Another user has already updated the device. Refresh and try again.
            Could not update the settings..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60193">
            <summary>
              Looks up a localized string similar to The name &apos;{0}&apos; is not valid. The system could not update the setting..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60194">
            <summary>
              Looks up a localized string similar to The setting &apos;{0}&apos; is read-only. The system could not update the settings..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60195">
            <summary>
              Looks up a localized string similar to The setting &apos;{0}&apos; cannot be updated..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60196">
             <summary>
               Looks up a localized string similar to Could not update the settings.
            
            The value for the setting named &apos;{0}&apos; is out of range..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60197">
            <summary>
              Looks up a localized string similar to The device preset cannot be updated..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60198">
            <summary>
              Looks up a localized string similar to Another user has already updated the device. Cannot save the changes..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60199">
            <summary>
              Looks up a localized string similar to A preset with the specified ID already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60200">
            <summary>
              Looks up a localized string similar to A Smart Wall with the name {0} already exists on the server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60201">
            <summary>
              Looks up a localized string similar to The Smart Wall does not exist. The system could not update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60202">
            <summary>
              Looks up a localized string similar to A Smart Wall named {0} already exists. The system could not rename it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60203">
            <summary>
              Looks up a localized string similar to The Smart Wall does not exist. The system could not remove it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60204">
            <summary>
              Looks up a localized string similar to A Smart Wall preset with the name {0} already exists on the Smart Wall {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60205">
            <summary>
              Looks up a localized string similar to The Smart Wall preset does not exist. The system could not update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60206">
            <summary>
              Looks up a localized string similar to A Smart Wall preset with the name {0} already exists on the Smart Wall {1}. The system could not rename the Smart Wall preset..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60207">
            <summary>
              Looks up a localized string similar to The Smart Wall preset does not exist. The system could not remove it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60208">
            <summary>
              Looks up a localized string similar to The Smart Wall does not exist. The system could not create the monitor..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60209">
            <summary>
              Looks up a localized string similar to The Smart Wall does not exist. The system could not create the Smart Wall preset..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60210">
            <summary>
              Looks up a localized string similar to A monitor with the name {0} already exists on the Smart Wall {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60211">
            <summary>
              Looks up a localized string similar to Could not update the monitor. The monitor does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60212">
            <summary>
              Looks up a localized string similar to Could not rename the monitor. A monitor with the name {0} already exists on the Smart Wall {1}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60213">
            <summary>
              Looks up a localized string similar to Could not remove the monitor. The monitor does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60214">
            <summary>
              Looks up a localized string similar to A view with the name {0} already exists on the server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60215">
            <summary>
              Looks up a localized string similar to The view does not exist. The system could not update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60216">
            <summary>
              Looks up a localized string similar to A view with the name {0} already exists. The system could not rename it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60217">
            <summary>
              Looks up a localized string similar to The view does not exist. The system could not remove it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60218">
            <summary>
              Looks up a localized string similar to A view item with the ID &apos;{0}&apos; already exists on the server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60219">
            <summary>
              Looks up a localized string similar to A view item with the ID &apos;{0}&apos; already exists on the server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60220">
            <summary>
              Looks up a localized string similar to The monitor preset does not exist. The system could not update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60221">
            <summary>
              Looks up a localized string similar to The time profile does not exist. The system could not update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60222">
            <summary>
              Looks up a localized string similar to A time profile with the name {0} already exists. The system could not rename it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60223">
            <summary>
              Looks up a localized string similar to The time profile does not exist. The system could not remove it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60224">
            <summary>
              Looks up a localized string similar to A time profile with the name &apos;{0}&apos; already exists. The system could not create the time profile..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60225">
            <summary>
              Looks up a localized string similar to The device does not support streams..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60226">
            <summary>
              Looks up a localized string similar to Could not add a new stream. The maximum number of streams has been reached..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60227">
            <summary>
              Looks up a localized string similar to Could not remove the stream. The stream does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60228">
            <summary>
              Looks up a localized string similar to Could not remove the stream. You cannot remove the last stream..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60229">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60230">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. You can only configure the same stream once..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60231">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. Stream names must be unique..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60232">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. Stream names cannot be empty..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60233">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. You must configure all streams as either live or recording streams or both..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60234">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. The recording stream must run plug-ins and the default live stream must be a configured for live..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60235">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. The device does not support the combination of streams..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60236">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. The device does only support one stream..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60237">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. You must configure exactly one default live stream..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60238">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. You must configure exactly one stream as the recording stream..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60239">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. Your license does only support one live steam and one recording stream..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60240">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. The device does not support the specified stream type..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60241">
            <summary>
              Looks up a localized string similar to Could not update the stream configuration. The number of streams for update does not match the number of configured streams..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60242">
            <summary>
              Looks up a localized string similar to Could not authorize the recording server. The version of the Recording Server service is not supported by the management server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60243">
            <summary>
              Looks up a localized string similar to Could not authorize the recording server. The license is invalid..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60244">
            <summary>
              Looks up a localized string similar to Could not authorize the recording server. An unexpected error occurred..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60245">
            <summary>
              Looks up a localized string similar to Could not block the hardware. The hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60246">
            <summary>
              Looks up a localized string similar to Could not unblocking hardware that is locked by the system. The hardware block does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60247">
            <summary>
              Looks up a localized string similar to Cannot move the hardware to another recording server. The hardware was not found on the specified recording server or the recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60248">
            <summary>
              Looks up a localized string similar to Cannot move the hardware to another recording server. The target recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60249">
            <summary>
              Looks up a localized string similar to Cannot move the hardware to another recording server. The target recording storage does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60250">
            <summary>
              Looks up a localized string similar to Could not remove the custom property. The property does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60251">
            <summary>
              Looks up a localized string similar to Could not add the hardware. The recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60252">
            <summary>
              Looks up a localized string similar to Another user has already updated the license. Cannot save the changes..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60253">
             <summary>
               Looks up a localized string similar to Could not update the settings.
            
            The value or property named &apos;{0}&apos; is not licensed..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60254">
            <summary>
              Looks up a localized string similar to Could not complete the task. Internal error on server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60255">
             <summary>
               Looks up a localized string similar to Could not authorize the recording server.
            The recording server is unavailable..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60256">
             <summary>
               Looks up a localized string similar to Could not authorize the recording server.
            The recording server service version is no longer supported..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60257">
             <summary>
               Looks up a localized string similar to Could not authorize the recording server.
            Communication with the recording server timed out..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60258">
             <summary>
               Looks up a localized string similar to Could not authorize the recording server.
            The license is invalid..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60259">
             <summary>
               Looks up a localized string similar to Could not authorize the recording server.
            The configuration contains too many recording servers. Your license does not support this..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60260">
             <summary>
               Looks up a localized string similar to Could not authorize the recording server.
            An unexpected error occurred..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60261">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The target recording server is in failover mode or not connected..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60262">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The target recording server is not the latest version..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60263">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The target recording server is not included in the configuration..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60264">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The source recording server is in failover mode or not connected..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60265">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The source recording server is not the latest version..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60266">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The source recording server is not included in the configuration..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60267">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The hardware does not exist..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60268">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            Could not communicate with the configuration database..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60269">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            Stopping the hardware on the current recording server failed..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60270">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            Could not remove the PTZ preset. The preset is used by one or more patrolling profiles..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60271">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            Stopping the hardware on the current recording server timed out..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60272">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            Updating the configuration failed..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60273">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The source recording server is connected but does not allow that hardware is moved from it..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60274">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            Failed to find the default recording storage for the recording server..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60275">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            No response received from the recording server while setting up the hardware..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60276">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            The hardware is already defined on the recording server..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60277">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            Unable to connect to the recording server while setting up the hardware..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60278">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            Unable to add hardware because the recording server service version is no longer supported..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60279">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            No response received from the recording server while setting up the hardware..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60280">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            It was not possible to connect to or receive information from the hardware. Verify that the following is correct: address, port, user name, password and hardware driver..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60281">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            It was not possible to connect to or receive information from the hardware. Verify that the following is correct: address, port, user name, password and hardware driver..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60282">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            The remote system reported: The specified user account does not have &apos;Administrator Access&apos; on the remote system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60283">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            Cannot log in to the remote system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60284">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            Unknown error. Could not read the configuration from the remote system. The driver provided the following error message: &apos;{0}&apos;.
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60285">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            The system cannot recognize the type of the remote system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60286">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            The system cannot recognize the type of the remote system.
            
            The remote system has been identified as: {0} {1}.
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60287">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            The system cannot recognize the version of the remote system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60288">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            The system cannot recognize the version of the remote system.
            
            The remote system has been identified as: {0} {1}.
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60289">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            The system does not support the version of the remote system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60290">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            The system does not support the version of the remote system.
            
            The remote system has been identified as: {0} {1}.
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60291">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            The system cannot recognize the remote system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60292">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            The system cannot recognize the remote system.
            
            The remote system has been identified as: {0} {1}.
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60293">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            Unable to write changes to the configuration database.
                  .
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60294">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            Unable to read from the configuration database..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60295">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            The hardware definition is invalid..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60296">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            No recording server found on the remote system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60297">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The hardware is already located on the target recording server..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60298">
             <summary>
               Looks up a localized string similar to The system cannot receive video from the moved hardware, because it uses a driver that does not exist on the target recording server.
            
            Install the missing driver on the target recording server or configure the hardware to use another driver..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60299">
             <summary>
               Looks up a localized string similar to The moved hardware uses a driver that exists in an different version on the target recording server.
            The driver is automatically updated on the target recording server when the hardware is moved.
            
            You must manually check that the driver is updated correctly and that the connected devices start..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60300">
             <summary>
               Looks up a localized string similar to The system cannot check for potential driver issues after the move.
            
            You must manually check that the moved hardware sends video to the system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60301">
             <summary>
               Looks up a localized string similar to Could not add the hardware.
            
            The recording server must be offline..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60302">
             <summary>
               Looks up a localized string similar to Could not update the device.
            
            The defined pre-buffer period exceeds the limit for storing in the memory..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60303">
             <summary>
               Looks up a localized string similar to Cannot delete the recording storage.
            
            The recording storage contains evidence locked data..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60304">
             <summary>
               Looks up a localized string similar to Could not create the audio message.
            
            An audio message with the same name already exists..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60305">
             <summary>
               Looks up a localized string similar to Could not delete the audio message.
            
            The audio message does not exist..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60306">
             <summary>
               Looks up a localized string similar to Cannot delete the archive.
            
            The archive contains evidence locked data..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60307">
            <summary>
              Looks up a localized string similar to The failover server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60308">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The configuration was changed while performing the move. Try again..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60309">
            <summary>
              Looks up a localized string similar to Cannot delete the recordings. The device does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60310">
            <summary>
              Looks up a localized string similar to Cannot delete the recordings. The recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60311">
            <summary>
              Looks up a localized string similar to The function &apos;{0}&apos; is not supported by the server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60312">
            <summary>
              Looks up a localized string similar to Cannot move the hardware to another recording server. The hardware is already configured on the target recording server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60313">
             <summary>
               Looks up a localized string similar to Could not update the audio message.
            
            The audio message does not exist..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60314">
             <summary>
               Looks up a localized string similar to Could not update the audio message.
            
            An audio message with the same name already exists..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60315">
             <summary>
               Looks up a localized string similar to Could not update the audio message.
            
            The audio message does not exist..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60316">
            <summary>
              Looks up a localized string similar to The audio message does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60317">
            <summary>
              Looks up a localized string similar to The size of the audio message is too big..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60318">
            <summary>
              Looks up a localized string similar to The content of the audio message is invalid..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60319">
            <summary>
              Looks up a localized string similar to The format of the audio message is not supported..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60320">
            <summary>
              Looks up a localized string similar to Another device preset with internal id &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60321">
             <summary>
               Looks up a localized string similar to Could not create the audio message.
            
            Too many audio messages exist in the system..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60322">
            <summary>
              Looks up a localized string similar to Could not update the privacy mask. The privacy mask regions do not match the grid size..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60323">
            <summary>
              Looks up a localized string similar to Could not update the privacy mask. Only 0 (zero) or 1 is allowed as mask region value..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60324">
            <summary>
              Looks up a localized string similar to The privacy mask is not valid..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60325">
            <summary>
              Looks up a localized string similar to Could not retrieve information for the security namespace. The namespace does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60326">
            <summary>
              Looks up a localized string similar to The hardware {0} was moved, but the license information was not updated. The system updates the license information automatically later..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60327">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            The source recording storage is unavailable.
                  .
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60328">
             <summary>
               Looks up a localized string similar to Cannot move the hardware.
            All recording storages on the target recording server must be available.
                  .
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60351">
            <summary>
              Looks up a localized string similar to Could not create the basic user. A basic user with the user name &apos;{0}&apos; already exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60352">
            <summary>
              Looks up a localized string similar to Could not update the basic user. The basic user does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60353">
            <summary>
              Looks up a localized string similar to Could not rename the basic user. A basic user named {0} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60354">
            <summary>
              Looks up a localized string similar to Could not delete the basic user. The basic user does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60355">
            <summary>
              Looks up a localized string similar to The basic user does not exist.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60356">
            <summary>
              Looks up a localized string similar to Could not change the password. The password provided does not meet the length, complexity or history requirements..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60400">
            <summary>
              Looks up a localized string similar to The site does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60401">
            <summary>
              Looks up a localized string similar to The site already has a master attached..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60402">
            <summary>
              Looks up a localized string similar to Could not attach the site. A site with the same ID is already attached..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60404">
            <summary>
              Looks up a localized string similar to An error occurred. The home site does not exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60405">
            <summary>
              Looks up a localized string similar to An error occurred. Not possible to delete the home site..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60406">
            <summary>
              Looks up a localized string similar to Could not connect from site &apos;{0}&apos; to site &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60451">
            <summary>
              Looks up a localized string similar to Could not create the site information. The information &apos;{0}&apos; already exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60452">
            <summary>
              Looks up a localized string similar to Could not update the site information. The site information does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60453">
            <summary>
              Looks up a localized string similar to Password does not meet the complexity requirements..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60454">
            <summary>
              Looks up a localized string similar to Could not delete the site information. The site information does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60455">
            <summary>
              Looks up a localized string similar to The site information does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60461">
            <summary>
              Looks up a localized string similar to Cannot create the relationship between role and retention option..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60464">
            <summary>
              Looks up a localized string similar to The relationship between role and retention option does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60465">
            <summary>
              Looks up a localized string similar to The relationship between role and retention option does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60470">
            <summary>
              Looks up a localized string similar to The MIP object does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60471">
            <summary>
              Looks up a localized string similar to The MIP action does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60472">
            <summary>
              Looks up a localized string similar to The description text is not valid..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60473">
            <summary>
              Looks up a localized string similar to The MIP item does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60474">
            <summary>
              Looks up a localized string similar to The MIP Kind does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60475">
            <summary>
              Looks up a localized string similar to Existing items of the specified Kind were found. A Kind cannot be deleted if items of that Kind exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60476">
            <summary>
              Looks up a localized string similar to The MIP item already exists and the “latestModificationTime” parameter is not provided..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60477">
            <summary>
              Looks up a localized string similar to The MIP item could not be saved..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60480">
            <summary>
              Looks up a localized string similar to The plug-in event does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60481">
            <summary>
              Looks up a localized string similar to A plug-in event with the ID {0} or name {1} already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60482">
            <summary>
              Looks up a localized string similar to Could not rename the plug-in event. Another event with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60483">
            <summary>
              Looks up a localized string similar to The plug-in event does not exist. The system could not update it..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60484">
            <summary>
              Looks up a localized string similar to Could not remove the plug-in event. There is no plug-in event with the ID &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60501">
            <summary>
              Looks up a localized string similar to Could not stop the task. The task does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60502">
            <summary>
              Looks up a localized string similar to Could not update the task. The task does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60601">
            <summary>
              Looks up a localized string similar to Could not create the hosting server. Another hosting server with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60602">
            <summary>
              Looks up a localized string similar to Could not update the hosting server. Another hosting server with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60603">
            <summary>
              Looks up a localized string similar to Could not update hosting server. A hosting server with the ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60604">
            <summary>
              Looks up a localized string similar to Could not delete the hosting server. A hosting server with the ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60605">
            <summary>
              Looks up a localized string similar to The hosting server &apos;{0}&apos; cannot be deleted because it contains one or more cameras..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60611">
            <summary>
              Looks up a localized string similar to Could not create the hosted hardware. Another hosted hardware with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60612">
            <summary>
              Looks up a localized string similar to Could not update the hosted hardware. Another hosted hardware with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60613">
            <summary>
              Looks up a localized string similar to Could not update the hosted hardware. A hosted hardware with the ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60614">
            <summary>
              Looks up a localized string similar to Could not delete the hosted hardware. A hosted hardware with the ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60615">
            <summary>
              Looks up a localized string similar to Constraint error. Hosted hardware id {0} already exists in the Hardware table..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60616">
            <summary>
              Looks up a localized string similar to Could not create the hosted hardware. This hardware has already been added..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60630">
            <summary>
              Looks up a localized string similar to Unable to start scanning on the recording server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60631">
            <summary>
              Looks up a localized string similar to Unable to start scanning. Another scanning session is already running on the recording server. Try again later..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60632">
            <summary>
              Looks up a localized string similar to Could not auto-detect hardware on the recording server. Try again or check the recording server’s log files..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60633">
            <summary>
              Looks up a localized string similar to Could not scan for hardware. The recording server must be offline..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60634">
            <summary>
              Looks up a localized string similar to No response received from the recording server while scanning for the hardware..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60635">
            <summary>
              Looks up a localized string similar to Unable to connect to the recording server while scanning for the hardware..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60636">
            <summary>
              Looks up a localized string similar to Unable to scan for hardware because the recording server service version is no longer supported..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60637">
            <summary>
              Looks up a localized string similar to Unknown error occurred doing scanning. Verify that the following is correct: address, port, user name and password..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60638">
            <summary>
              Looks up a localized string similar to No driver for hardware found. Verify that the following is correct: address, port, user name and password..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60650">
            <summary>
              Looks up a localized string similar to Unable to delete the hardware. No reponses received within one minute..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60651">
            <summary>
              Looks up a localized string similar to Unable to delete the hardware. An unknown error occurred..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60660">
            <summary>
              Looks up a localized string similar to Could not update the rule. The rule does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60661">
            <summary>
              Looks up a localized string similar to Could not delete the rule. The rule does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60701">
            <summary>
              Looks up a localized string similar to Could not create the client profile. A client profile with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60702">
            <summary>
              Looks up a localized string similar to Could not update the client profile. The client profile does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60703">
            <summary>
              Looks up a localized string similar to Could not rename the client profile. A client profile with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60704">
            <summary>
              Looks up a localized string similar to Could not delete the client profile. The client profile does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO60705">
            <summary>
              Looks up a localized string similar to The client profile does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61000">
            <summary>
              Looks up a localized string similar to You must specify a valid role when adding a member to a role..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61001">
            <summary>
              Looks up a localized string similar to You must specify an identity to add to the role..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61002">
            <summary>
              Looks up a localized string similar to You must specify an identity to remove from the role..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61003">
            <summary>
              Looks up a localized string similar to You must specify a role to remove a member from the role..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61004">
            <summary>
              Looks up a localized string similar to Invalid database configuration. Extra rows. Please contact your server administrator..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61005">
            <summary>
              Looks up a localized string similar to Invalid database configuration. Missing row. Please contact your server administrator..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61006">
            <summary>
              Looks up a localized string similar to The following role name is not a valid name: {0}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61007">
            <summary>
              Looks up a localized string similar to The following user-defined event does not exist: {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61008">
            <summary>
              Looks up a localized string similar to You do not have sufficient permissions to complete the operation..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61009">
            <summary>
              Looks up a localized string similar to The following argument cannot be empty: {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61010">
            <summary>
              Looks up a localized string similar to Could not read information from the following Active Directory domain: {0}. The Active Directory domain is unknown or could not be found..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61011">
            <summary>
              Looks up a localized string similar to Could not retrieve a SID for an identity from Active Directory..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61012">
            <summary>
              Looks up a localized string similar to The server group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61013">
            <summary>
              Looks up a localized string similar to The recording server does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61015">
            <summary>
              Looks up a localized string similar to The device group does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61021">
            <summary>
              Looks up a localized string similar to The system could not communicate with the recording server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61022">
            <summary>
              Looks up a localized string similar to It is not possible to execute the command &apos;{0}&apos; because the recording server service has status &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61023">
            <summary>
              Looks up a localized string similar to The recording server service is not available..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61024">
            <summary>
              Looks up a localized string similar to Change state of the recording server service failed..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61025">
            <summary>
              Looks up a localized string similar to The Smart Wall does not exist. The system could not connect to the Smart Wall..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61026">
            <summary>
              Looks up a localized string similar to The monitor does not exist. The system could not receive the monitor..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61027">
            <summary>
              Looks up a localized string similar to The Smart Wall preset does not exist. The system could not connect to the monitor..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61028">
            <summary>
              Looks up a localized string similar to The custom property does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61029">
            <summary>
              Looks up a localized string similar to The user-defined event does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61030">
            <summary>
              Looks up a localized string similar to The view layout does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61031">
            <summary>
              Looks up a localized string similar to The view does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61032">
            <summary>
              Looks up a localized string similar to The object was not found..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61033">
            <summary>
              Looks up a localized string similar to A newer version of the custom setting exists on the server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61034">
            <summary>
              Looks up a localized string similar to Name already used..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61035">
            <summary>
              Looks up a localized string similar to You cannot update or delete a built-in layout..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61100">
            <summary>
              Looks up a localized string similar to You have already defined one home site and you cannot have more. Change cancelled..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61103">
            <summary>
              Looks up a localized string similar to The system could not receive the recording storage information..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61104">
            <summary>
              Looks up a localized string similar to The system could not receive the recording server information..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61105">
            <summary>
              Looks up a localized string similar to The system cannot receive the archive information..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61106">
            <summary>
              Looks up a localized string similar to A conflicting task already exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61107">
            <summary>
              Looks up a localized string similar to Could not configure the encryption for the recording storage. The storage is unavailable..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61108">
            <summary>
              Looks up a localized string similar to Could not configure the encryption for the recording storage. The archive &apos;{0}&apos; is unavailable..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61109">
            <summary>
              Looks up a localized string similar to The recording storage is unavailable..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO61110">
            <summary>
              Looks up a localized string similar to The archive is unavailable..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62001">
            <summary>
              Looks up a localized string similar to The argument is not valid..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62002">
            <summary>
              Looks up a localized string similar to The argument cannot be null..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62003">
            <summary>
              Looks up a localized string similar to Invalid object ID..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62004">
            <summary>
              Looks up a localized string similar to The retainMinutes argument must be between 0 and 999 years..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62005">
            <summary>
              Looks up a localized string similar to The maximum size must be between 0 and 1 exabyte..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62006">
            <summary>
              Looks up a localized string similar to The target frame rate must be between 0.00028 and 100 frames per second..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62007">
            <summary>
              Looks up a localized string similar to The specified device does not support retrieval of remote recordings..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62008">
            <summary>
              Looks up a localized string similar to The argument is missing..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62010">
            <summary>
              Looks up a localized string similar to The argument {1} contains an invalid security object identifier (&apos;{0}&apos;).
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62011">
            <summary>
              Looks up a localized string similar to The argument {1} contains an invalid action identifier (&apos;{0}&apos;)..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62012">
            <summary>
              Looks up a localized string similar to The argument {1} contains an invalid object class identifier (&apos;{0}&apos;)..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62013">
            <summary>
              Looks up a localized string similar to The argument {1} contains an invalid SID (&apos;{0}&apos;)..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62014">
            <summary>
              Looks up a localized string similar to The following account name is not valid: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62015">
            <summary>
              Looks up a localized string similar to The following distinguished name (DN) has an incorrect formatting or contains an empty string: &apos;{0}&apos;.  Make sure that the formatting is according to the LDAP API naming conventions..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62016">
            <summary>
              Looks up a localized string similar to The SID named &apos;{0}&apos; is not a valid security identifier..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62017">
            <summary>
              Looks up a localized string similar to Could not retrieve a SID for an identity from Active Directory..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62018">
            <summary>
              Looks up a localized string similar to Could not read information from the following Active Directory domain: {0}. The Active Directory domain is unknown or could not be found..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62019">
            <summary>
              Looks up a localized string similar to The argument {0} is zero length. Include at least one SID element..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62020">
            <summary>
              Looks up a localized string similar to The argument {0} is zero length. Include at least one action identifier element..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62021">
            <summary>
              Looks up a localized string similar to The argument {0} is zero length. Include at least one object identifier element..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62022">
            <summary>
              Looks up a localized string similar to The argument {0} is zero length. Include at least one name element..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62023">
            <summary>
              Looks up a localized string similar to The argument {0} is invalid. The object (&apos;{1}&apos;) cannot inherit from itself..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62024">
            <summary>
              Looks up a localized string similar to The argument {0} is zero length. Include at least one address element..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62025">
            <summary>
              Looks up a localized string similar to The argument {0} must be between 0 and 100..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62026">
            <summary>
              Looks up a localized string similar to The argument {0} contains an unknown encryption method..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62027">
            <summary>
              Looks up a localized string similar to The &quot;End Time&quot; argument is referring to a future date-time. Make sure date-time is synchronized on all Recording Server(s), Management Server(s) and Smart Client(s) installations.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO62500">
            <summary>
              Looks up a localized string similar to Permission denied..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63007">
            <summary>
              Looks up a localized string similar to The trace switch &apos;{0}&apos; is not a valid VideoOS Management Server trace switch..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63008">
            <summary>
              Looks up a localized string similar to #No L10N# The file {0} specified to store the trace output could not be found or created. Confirm that the file name is correct and that your user account has permission to access the file: {1}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63009">
            <summary>
              Looks up a localized string similar to #No L10N# You must specify an event log source for your application..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63010">
            <summary>
              Looks up a localized string similar to Unable to execute, no stored procedure prepared..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63011">
            <summary>
              Looks up a localized string similar to #No L10N# Processing of the request is being shut down due to the exception shown below..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63012">
            <summary>
              Looks up a localized string similar to Fatal error. Could not initialize the Management Server web services..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63013">
            <summary>
              Looks up a localized string similar to An unhandled exception occurred..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63014">
            <summary>
              Looks up a localized string similar to Application error.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63015">
            <summary>
              Looks up a localized string similar to #No L10N# Processing asynchronous event of the following type: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO63016">
            <summary>
              Looks up a localized string similar to {0} is not installed..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64000">
            <summary>
              Looks up a localized string similar to A general license error has occurred. See the log files for more information..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64001">
            <summary>
              Looks up a localized string similar to The feature is not licensed..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64002">
            <summary>
              Looks up a localized string similar to The number of archives per storage has reached its limit..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64003">
            <summary>
              Looks up a localized string similar to Could not apply the license. The license is expired..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64004">
            <summary>
              Looks up a localized string similar to Could not apply the license. The license file is invalid..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64005">
            <summary>
              Looks up a localized string similar to Could not apply the license. The Software License Code does not match the code in the system. To change the license, right-click the Management Server tray icon and select Change License..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64006">
            <summary>
              Looks up a localized string similar to The specified user name or password was not correct..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64007">
            <summary>
              Looks up a localized string similar to The SLC was not registered..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64008">
            <summary>
              Looks up a localized string similar to The specified user is not allowed to activate this system..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64009">
            <summary>
              Looks up a localized string similar to The license has been activated on multiple systems..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64010">
            <summary>
              Looks up a localized string similar to The configuration contains a storage that uses a reduced frame rate. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64011">
            <summary>
              Looks up a localized string similar to The configuration contains roles or security settings with time profiles. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64012">
            <summary>
              Looks up a localized string similar to The configuration uses Axis One-click. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64013">
            <summary>
              Looks up a localized string similar to The configuration contains sub sites. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64014">
            <summary>
              Looks up a localized string similar to The configuration contains interconnected hardware devices. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64015">
            <summary>
              Looks up a localized string similar to The configuration contains devices that use multiple streams. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64016">
            <summary>
              Looks up a localized string similar to The configuration contains devices that use multicast. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64017">
            <summary>
              Looks up a localized string similar to The configuration contains storage with too many archives. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64018">
            <summary>
              Looks up a localized string similar to The configuration contains failover recording servers or groups. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64019">
            <summary>
              Looks up a localized string similar to The configuration contains a storage which uses the encryption. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64020">
            <summary>
              Looks up a localized string similar to The configuration contains a storage which uses the signing feature. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64021">
            <summary>
              Looks up a localized string similar to The configuration contains remotely connected hardware or a secure tunnel server. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64022">
            <summary>
              Looks up a localized string similar to The configuration contains rules with bookmarks. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64023">
            <summary>
              Looks up a localized string similar to The configuration contains too many {0} profiles. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64024">
            <summary>
              Looks up a localized string similar to The configuration contains a Smart Wall preset. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64025">
            <summary>
              Looks up a localized string similar to The configuration contains rules with SNMP traps. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64026">
            <summary>
              Looks up a localized string similar to The configuration contains evidence locked data. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64027">
            <summary>
              Looks up a localized string similar to The configuration contains bookmarks. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64028">
            <summary>
              Looks up a localized string similar to The configuration contains marked data (evidence locks or bookmarks). Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64029">
            <summary>
              Looks up a localized string similar to The configuration contains roles that use differentiated administration security settings. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64030">
            <summary>
              Looks up a localized string similar to The configuration contains settings for remote recording. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64031">
            <summary>
              Looks up a localized string similar to The configuration contains rules with remote recording functionality. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64032">
            <summary>
              Looks up a localized string similar to The configuration contains more rules with PTZ priority than supported by your license..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64033">
            <summary>
              Looks up a localized string similar to The configuration contains security settings with more PTZ priority levels than supported by your license..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64034">
            <summary>
              Looks up a localized string similar to The configuration must contain only the default {0} profile. Your license only supports this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64035">
            <summary>
              Looks up a localized string similar to The configuration contains a master site. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64036">
            <summary>
              Looks up a localized string similar to The configuration contains more recording servers than your license allows..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64037">
            <summary>
              Looks up a localized string similar to The configuration contains roles with anonymous PTZ session functionality. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64038">
            <summary>
              Looks up a localized string similar to The configuration contains locked camera presets. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64039">
            <summary>
              Looks up a localized string similar to The configuration contains one or more cameras that are set up to use hardware accelerated motion detection. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64040">
            <summary>
              Looks up a localized string similar to The configuration contains one or more cameras that are set up to use privacy masking. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64041">
            <summary>
              Looks up a localized string similar to The configuration contains one or more devices that are set up to use AAC audio encoding. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64042">
            <summary>
              Looks up a localized string similar to The configuration contains one or more devices that are generated by the video processing framework. Your license does not support this..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64050">
            <summary>
              Looks up a localized string similar to Access denied..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64051">
            <summary>
              Looks up a localized string similar to You have requested more licenses for camera feeds than you have licenses for..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64052">
            <summary>
              Looks up a localized string similar to You have requested too many licenses for hardware..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64053">
            <summary>
              Looks up a localized string similar to You have requested too many licenses for {0} camera feeds..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64054">
            <summary>
              Looks up a localized string similar to You have installed more recording servers than your license allows..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64055">
            <summary>
              Looks up a localized string similar to The system could not register the SLC for an installed product..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64056">
            <summary>
              Looks up a localized string similar to You have already used one or more licenses on another system..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64057">
            <summary>
              Looks up a localized string similar to You have replaced too much hardware..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64058">
            <summary>
              Looks up a localized string similar to The system is unable to communicate with the license activation server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64100">
            <summary>
              Looks up a localized string similar to Could not create the patrolling profile. A patrolling profile with the name &apos;{0}&apos; already exists on the camera..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64101">
            <summary>
              Looks up a localized string similar to Could not create the patrolling profile. The camera does not support PTZ..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64102">
            <summary>
              Looks up a localized string similar to Could not update the patrolling profile. The patrolling profile does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64103">
            <summary>
              Looks up a localized string similar to Could not rename the patrolling profile. A patrolling profile with the name &apos;{0}&apos; already exists on the camera..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64104">
            <summary>
              Looks up a localized string similar to Could not delete the patrolling profile. The patrolling profile does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO64105">
            <summary>
              Looks up a localized string similar to The patrolling profile does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65000">
            <summary>
              Looks up a localized string similar to An internal error occurred when registering object. {0}, {1}, {2}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65001">
            <summary>
              Looks up a localized string similar to An internal error occurred when unregistering object. {0}, {1}, {2}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65002">
            <summary>
              Looks up a localized string similar to An internal server error occurred..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65003">
            <summary>
              Looks up a localized string similar to Performance state counter rule was not found..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65004">
            <summary>
              Looks up a localized string similar to System monitor state source was not found..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65005">
            <summary>
              Looks up a localized string similar to The system setting &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65006">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; is invalid for the system setting &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65007">
            <summary>
              Looks up a localized string similar to Could not include your add-on products in the license request file. Message: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65008">
            <summary>
              Looks up a localized string similar to The system setting &apos;{0}&apos; does not exist in the database..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65009">
            <summary>
              Looks up a localized string similar to The system cannot enable automatic license activation due to missing license activation user credentials..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65010">
            <summary>
              Looks up a localized string similar to Cannot update the time profile of the Administrator role..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65011">
            <summary>
              Looks up a localized string similar to Cannot update the permission. The time profile with the ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65012">
            <summary>
              Looks up a localized string similar to Cannot insert information about the detected hardware because a row with MAC address &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65013">
            <summary>
              Looks up a localized string similar to Cannot insert information about the detected hardware because a row with ID &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65014">
            <summary>
              Looks up a localized string similar to Cannot delete information about the detected hardware because the row with ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65015">
            <summary>
              Looks up a localized string similar to Cannot update information about the detected hardware because the row with ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65016">
            <summary>
              Looks up a localized string similar to The detected hardware does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65017">
            <summary>
              Looks up a localized string similar to The driver number does not exist in the device driver table: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65018">
            <summary>
              Looks up a localized string similar to Cannot insert credentials for the detected hardware because a row with ID &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65019">
            <summary>
              Looks up a localized string similar to Cannot update credentials for the detected hardware because the row with ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65020">
            <summary>
              Looks up a localized string similar to Cannot delete credentials for the detected hardware because the row with ID &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65021">
            <summary>
              Looks up a localized string similar to Cannot insert information about the detected hardware because automatic hardware detection is disabled..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO65022">
            <summary>
              Looks up a localized string similar to Failed to create recording server. A recording server with the same ID already exists..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66000">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The password is too long..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66001">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The password is too short or too weak..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66002">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. Invalid password..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66003">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The hardware device does not support password changes..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66004">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed because of a hardware error..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66005">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The hardware device is switched off..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66006">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The hardware device is disabled..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66007">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The hardware device is temporarily blocked..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66008">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The hardware device is read-only..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66009">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The hardware device accepted the new password but updating the credentials in the VMS failed..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66010">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The recording server that hosts the device is unavailable..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66011">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The recording server that hosts the device is not compatible with the management server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66012">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The operation timed out..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66013">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. An unknown error occurred in the recording server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66014">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed. The recording server does not recognize the response from the hardware driver..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66015">
            <summary>
              Looks up a localized string similar to The password of hardware device &apos;{0}&apos; could not be changed because of network issues..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66016">
            <summary>
              Looks up a localized string similar to There is no access to hardware device &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66017">
            <summary>
              Looks up a localized string similar to Anonymous user level is not allowed on device &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66018">
            <summary>
              Looks up a localized string similar to User name not recognized on device &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66019">
            <summary>
              Looks up a localized string similar to Password or user level may not be changed on device &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66020">
            <summary>
              Looks up a localized string similar to The user does not have access for the operation on device &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66050">
            <summary>
              Looks up a localized string similar to Could not update the search. The search does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66051">
            <summary>
              Looks up a localized string similar to Could not delete the search. The search does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO66052">
            <summary>
              Looks up a localized string similar to The search does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67001">
            <summary>
              Looks up a localized string similar to Update hardware is only supported for MIP drivers.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67002">
            <summary>
              Looks up a localized string similar to Session data timed out: {0}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67003">
            <summary>
              Looks up a localized string similar to Invalid SessionDataId for {0}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67004">
            <summary>
              Looks up a localized string similar to Failed to update hardware {0} with {1} [Error: {2}].
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67005">
            <summary>
              Looks up a localized string similar to Failed to update hardware {0} with {1}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67006">
            <summary>
              Looks up a localized string similar to Could not update the hardware. No response from recording server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67007">
            <summary>
              Looks up a localized string similar to Could not update the hardware. Caller does not have admin rights..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67008">
            <summary>
              Looks up a localized string similar to Could not update the hardware. Cannot log in to the remote system..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67009">
            <summary>
              Looks up a localized string similar to Could not update the hardware. No recording server found on the remote system..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67010">
            <summary>
              Looks up a localized string similar to Could not update the hardware. Unknown error. Could not read the configuration from the remote system. The driver provided the following error message: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67011">
            <summary>
              Looks up a localized string similar to Could not update the hardware. Unable to connect to the recording server while setting up the hardware..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67012">
            <summary>
              Looks up a localized string similar to Could not update the hardware, because the recording server service version is no longer supported..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67013">
            <summary>
              Looks up a localized string similar to Could not update the hardware. No response received from the recording server..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67014">
            <summary>
              Looks up a localized string similar to Could not update the hardware. It was not possible to connect to or receive information from the hardware. Verify that the following is correct: address, port, user name, password and hardware driver..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67015">
            <summary>
              Looks up a localized string similar to Could not update the hardware. It was not possible to connect to or receive information from the hardware. Verify that the following is correct: address, port, user name, password and hardware driver..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67016">
            <summary>
              Looks up a localized string similar to Could not update the hardware. It does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoResources.VMO67017">
            <summary>
              Looks up a localized string similar to Unable to update hardware that has changed its MAC address..
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Operation_Pause">
            <summary>
              Looks up a localized string similar to Pause.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Operation_Resume">
            <summary>
              Looks up a localized string similar to Resume.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Operation_Start">
            <summary>
              Looks up a localized string similar to Start.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Operation_Stop">
            <summary>
              Looks up a localized string similar to Stop.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Status_ContinuePending">
            <summary>
              Looks up a localized string similar to Continue Pending.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Status_Paused">
            <summary>
              Looks up a localized string similar to Paused.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Status_PausePending">
            <summary>
              Looks up a localized string similar to Pause Pending.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Status_Running">
            <summary>
              Looks up a localized string similar to Running.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Status_StartPending">
            <summary>
              Looks up a localized string similar to Start Pending.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Status_Stopped">
            <summary>
              Looks up a localized string similar to Stopped.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.VmoMessageParamsResources.RecordingServerServiceControllerExceptions_Status_StopPending">
            <summary>
              Looks up a localized string similar to Stop Pending.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.ArgumentExceptionMustBeServerVersion">
            <summary>
              Looks up a localized string similar to Object must be of type ServerVersion..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.ArgumentOutOfRangeVersion">
            <summary>
              Looks up a localized string similar to Version&apos;s parameters must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.ConnectionCannotBeChanged">
            <summary>
              Looks up a localized string similar to Connection properties cannot be changed after a connection has been established..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.ConnectionFailureException">
             <summary>
               Looks up a localized string similar to Check the server address.
            The system could not connect to the server &apos;{0}&apos;..
             </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.DisplayVersionString">
            <summary>
              Looks up a localized string similar to {0}.{1}{2}.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.InvalidArgumentValue">
            <summary>
              Looks up a localized string similar to Internal Error: Invalid argument &apos;{0}&apos;. Value &apos;{1}&apos; not valid..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.InvalidPropertyValue">
            <summary>
              Looks up a localized string similar to Cannot apply value &apos;{0}&apos; to property {1}: {2}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.InvalidPropertyValueReasonIntAboveMax">
            <summary>
              Looks up a localized string similar to Value cannot be larger than {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.InvalidPropertyValueReasonIntBelowMin">
            <summary>
              Looks up a localized string similar to Value cannot be smaller than {0}..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.InvalidPropertyValueReasonString">
            <summary>
              Looks up a localized string similar to Value cannot be null..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.OperationTimeout">
            <summary>
              Looks up a localized string similar to The operation timed out..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.PropertyReadOnlyException">
            <summary>
              Looks up a localized string similar to Cannot change property {0}. It is read-only..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.SystemMonitorThresholds">
            <summary>
              Looks up a localized string similar to System Monitor Thresholds.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.UserDoesNotExist">
            <summary>
              Looks up a localized string similar to User does not exist..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.UsernamePasswordException">
            <summary>
              Looks up a localized string similar to Failed to connect, check the user name and password..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Properties.Resources.ZeroVersionString">
            <summary>
              Looks up a localized string similar to N/A.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.Rule">
            <summary>
            The <b>Rule</b> object represents a rule.
            </summary>
            <remarks>
            A rule can be used to login on the Management Server.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Rule.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Constructs a Rule.
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_2"/>.
            </summary>
            <param name="managementServer">The Management Server where the rule should be created.</param>
            <param name="name">The rule descriptive name.</param>
            <param name="description">The description for the rule.</param>
            <param name="ruleXml">The content of the rule.</param>
            <param name="enabled">The enabled state.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> is a null reference <br/>
             - or - <br/>
            The <paramref name="description"/> is a null reference
             - or - <br/>
            The <paramref name="ruleXml"/> is a null reference.
            </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.Rule"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Rule.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create an rule based on a generic object
            </summary>
            <param name="internalId">Id of the rule.</param>
            <param name="objectProperties">rule properties.</param>
            <param name="relations">rule relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new rule is created, false when an existing rule is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Rule.Name">
            <summary>
            Gets the rule name (descriptive name).
            </summary>
            <value>The rule name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Rule.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Rule.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Rule.RuleXml">
            <summary>
            Gets or sets the rule xml.
            </summary>
            <value>The rule xml.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Rule.Enabled">
            <summary>
            Gets or sets the rule enabled state.
            </summary>
            <value>The rule enabled state.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Rule.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            The object is deleted on the server
             -or-
            A communication error or an unknown error occurred.
            </exception>
            <remarks>Refreshing a <see cref="T:VideoOS.Management.VmoClient.Rule"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Rule.Create">
            <summary>
            Creates the rule
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            An rule with same username already exist.
             -or-
            A communication error or an unknown error occurred.
            </exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.Rule"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Rule.Update">
            <summary>
            Updates the rule
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            An rule with same username already exist.
             -or-
            A communication error or an unknown error occurred.
            </exception>
            <remarks>Updating a <see cref="T:VideoOS.Management.VmoClient.Rule"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Rule.Delete">
            <summary>
            Deletes the rule
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            The message does not exist on the server.
             -or-
            A communication error or an unknown error occurred.
            </exception>
            <remarks>Deleting a <see cref="T:VideoOS.Management.VmoClient.Rule"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_2"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Rule.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on rule.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AudioMessage">
            <summary>
            The <b>AudioMessage</b> object represents a audio message.
            </summary>
            <remarks>
            A audio message can be used to login on the Management Server.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Constructs a AudioMessage.
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v11_2"/>.
            </summary>
            <param name="managementServer">The Management Server where the audio message should be created.</param>
            <param name="name">The audio message descriptive name.</param>
            <param name="description">The description for the audio message.</param>
            <param name="originalFileName">The original name (including extension) of the audio message.</param>
            <param name="content">The content of the audio message.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> is a null reference <br/>
             - or - <br/>
            The <paramref name="description"/> is a null reference
             - or - <br/>
            The <paramref name="originalFileName"/> is a null reference.
             - or - <br/>
            The <paramref name="content"/> is a null reference.
            </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.AudioMessage"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v11_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Constructs a AudioMessage - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="name">The audio message descriptive name.</param>
            <param name="description">The description for the audio message.</param>
            <param name="originalFileName">The original name (including extension) of the audio message.</param>
            <param name="content">The content of the audio message.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> is a null reference <br/>
             - or - <br/>
            The <paramref name="description"/> is a null reference
             - or - <br/>
            The <paramref name="originalFileName"/> is a null reference.
             - or - <br/>
            The <paramref name="content"/> is a null reference.
            </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create an audio message based on a generic object
            </summary>
            <param name="internalId">Id of the audio message.</param>
            <param name="objectProperties">audio message properties.</param>
            <param name="relations">audio message relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new audio message is created, false when an existing audio message is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AudioMessage.Name">
            <summary>
            Gets the audio message name (descriptive name).
            </summary>
            <value>The audio message name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AudioMessage.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AudioMessage.OriginalFileName">
            <summary>
            Gets the original file name (excluding path, including extension).
            </summary>
            <value>The original file name.</value>
            <remarks>The extension of this file name is used for determining how to decode the audio content.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AudioMessage.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            The object is deleted on the server
             -or-
            A communication error or an unknown error occurred.
            </exception>
            <remarks>Refreshing a <see cref="T:VideoOS.Management.VmoClient.AudioMessage"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v11_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.Create">
            <summary>
            Creates the audio message
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            An audio message with same username already exist.
             -or-
            The message type (part of <see cref="P:VideoOS.Management.VmoClient.AudioMessage.OriginalFileName"/>) is not supported.
             -or-
            The content is too large (Maximum size can be found in system settings).
             -or-
            Too many messages exists on the server.
             -or-
            A communication error or an unknown error occurred.
            </exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.AudioMessage"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v11_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.Update">
            <summary>
            Updates the audio message
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            An audio message with same username already exist.
             -or-
            A communication error or an unknown error occurred.
            </exception>
            <remarks>Updating a <see cref="T:VideoOS.Management.VmoClient.AudioMessage"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v11_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.Delete">
            <summary>
            Deletes the audio message
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            The message does not exist on the server.
             -or-
            A communication error or an unknown error occurred.
            </exception>
            <remarks>Deleting a <see cref="T:VideoOS.Management.VmoClient.AudioMessage"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v11_2"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.GetContent">
            <summary>
            Get the content of the message.
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            The message does not exist on the server.
             -or-
            A communication error or an unknown error occurred.
            </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AudioMessage.SetContent(System.String,System.Byte[])">
            <summary>
            Set the content of the message.
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            The message does not exist on the server.
             -or-
            The content type (part of <paramref name="originalFileName"/>) is not supported.
             -or-
            The content is too large (Maximum size can be found in system settings).
             -or-
            A communication error or an unknown error occurred.
            </exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AudioMessage.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on audio message.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicOwnerInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicOwnerInfo.Property">
            <summary>
            Gets or sets the Property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicOwnerInfo.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>The Order.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicOwnerInfo.Create">
            <summary>
            Create the bookmark
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">The error occure when a Video wall with the same name already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicOwnerInfo.Update">
            <summary>
            Apply bookmark changes to the database
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            This expection is thrown when updating a bookmark that doesn't exist.
             - or -
            This exception is thrown when a bookmark with the same reference already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicOwnerInfo.Delete">
            <summary>
            Delete the bookmark
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This error occurred when deleting a bookmark that doesn't exist.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.BasicUser">
            <summary>
            The <b>BasicUser</b> object represents a basic user.
            </summary>
            <remarks>
            A basic user can be used to login on the Management Server.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.String,System.String)">
            <summary>
            Constructs a BasicUser.
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the basic user should be created.</param>
            <param name="userName">The login username of the basic user.</param>
            <param name="password">The login password of the basic user.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="userName"/> is a null reference <br/>
             - or - <br/>
             The <paramref name="password"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <paramref name="userName"/> is a empty string <br/>
             - or - <br/>
             The <paramref name="password"/> is a empty string.
            </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
            <remarks>It is not possible to see the password after the basic user have beeen created.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid,System.String,System.String)">
            <summary>
            Constructs a BasicUser with a custom id.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the basic user should be created.</param>
            <param name="customId">Custom id of the basic user.</param>
            <param name="userName">The login username of the basic user.</param>
            <param name="password">The login password of the basic user.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="userName"/> is a null reference <br/>
             - or - <br/>
             The <paramref name="password"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <paramref name="userName"/> is a empty string <br/>
             - or - <br/>
             The <paramref name="password"/> is a empty string
             - or - <br/>
             The <paramref name="customId"/> is a empty guid.
            </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
            <remarks>It is not possible to see the password after the basic user have beeen created.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.String,System.String)">
            <summary>
            Constructs a BasicUser with a custom id - required for testability.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/>.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="userName">The login username of the basic user.</param>
            <param name="password">The login password of the basic user.</param>
            <param name="customId">Custom id of the basic user.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="userName"/> is a null reference <br/>
             - or - <br/>
             The <paramref name="password"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <paramref name="userName"/> is a empty string <br/>
             - or - <br/>
             The <paramref name="password"/> is a empty string
             - or - <br/>
             The <paramref name="customId"/> is a empty guid
            </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
            <remarks>It is not possible to see the password after the basic user have beeen created.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.String,System.String)">
            <summary>
            Constructs a BasicUser - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="userName">The login username of the basic user.</param>
            <param name="password">The login password of the basic user.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="userName"/> is a null reference <br/>
             - or - <br/>
             The <paramref name="password"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <paramref name="userName"/> is a empty string <br/>
             - or - <br/>
             The <paramref name="password"/> is a empty string.
            </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>It is not possible to see the password after the basic user have beeen created.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create basic users based on a generic object
            </summary>
            <param name="internalId">Id of the basic user.</param>
            <param name="objectProperties">Basic user properties.</param>
            <param name="relations">Basic user relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new basic user is created, false when an existing basic user is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicUser.UserName">
            <summary>
            Gets the user name.
            </summary>
            <value>The user name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicUser.DomainAccountName">
            <summary>
            Gets the basic name prepended by the predefined [BASIC] domain.
            </summary>
            <value>
            A string containing the '[BASIC]\user name'.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicUser.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicUser.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicUser.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicUser.Sid">
            <summary>
            Gets the Security Identifier (SID) of the basic user.
            </summary>
            <value>The Security Identifier (SID) of the basic user.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.BasicUserNotExistException">This expection is thrown if the basic user has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Refreshing a <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.Create">
            <summary>
            Creates the basic user
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.BasicUserCreationException">This expection is thrown if a basic user with same username already exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.Update">
            <summary>
            Updates the basic user
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.BasicUserUpdateException">This expection is thrown if the basic user has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Updating a <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.Delete">
            <summary>
            Deletes the basic user
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.BasicUserDeleteException">This expection is thrown if the specified basic user does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Deleting a <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.BasicUser.ChangePassword(System.String)">
            <summary>
            Change the password of the basic user
            </summary>
            <exception cref="T:System.ArgumentNullException">The <paramref name="newPassword"/> is a null reference</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="newPassword"/> is a empty string</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.BasicUserUpdateException">This expection is thrown if the basic user has been removed from the server.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Changing password on a <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BasicUser.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on basic user.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ManagementClientProfile">
            <summary>
            The <b>ManagementClientProfile</b> object represents a client profile used by the Management Client.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementClientProfile.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a ManagementClientProfile.
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the client profile should be created.</param>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.ManagementClientProfile"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementClientProfile.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a ManagementClientProfile - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementClientProfile.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create client profile based on a generic object
            </summary>
            <param name="internalId">Id of the client profile.</param>
            <param name="objectProperties">Client profile properties.</param>
            <param name="relations">Client profile relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new client profile is created, false when an existing client profile is loaded.</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.SmartClientProfile">
            <summary>
            The <b>SmartClientProfile</b> object represents a client profile used by the Smart Client.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SmartClientProfile.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a SmartClientProfile.
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the client profile should be created.</param>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.SmartClientProfile"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SmartClientProfile.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a SmartClientProfile - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SmartClientProfile.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create client profile based on a generic object
            </summary>
            <param name="internalId">Id of the client profile.</param>
            <param name="objectProperties">Client profile properties.</param>
            <param name="relations">Client profile relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new client profile is created, false when an existing client profile is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ClientProfile.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ClientProfile"/> class.
            </summary>
            <param name="internalId">Id of the client profile.</param>
            <param name="objectProperties">Client profile properties.</param>
            <param name="relations">Client profile relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new client profile is created, false when an existing client profile is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfile.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfile.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfile.LastModified">
            <summary>
            Gets the last modified date.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfile.SettingsXml">
            <summary>
            Gets the settings in XML format.
            </summary>
            <value>The settings.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfile.IsDefaultProfile">
            <summary>
            Gets if the profile is the default profile
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ClientProfile.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occured ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ClientProfileNotExistException">This expection is thrown if the client profile has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Refreshing a <see cref="T:VideoOS.Management.VmoClient.ClientProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ClientProfile.Create">
            <summary>
            Creates the client profile
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ClientProfileCreationException">This expection is thrown if a client profile with same username already exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UnlicensedSmartClientProfilesFeatureException">This exception is thrown if the license doesn't support Smart Client Profile or the limit is reached.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.ClientProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ClientProfile.Update">
            <summary>
            Updates the client profile
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occured ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ClientProfileUpdateException">This expection is thrown if the client profile has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UnlicensedSmartClientProfilesFeatureException">This exception is thrown if the license doesn't support Smart Client Profile.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Updating a <see cref="T:VideoOS.Management.VmoClient.ClientProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ClientProfile.Delete">
            <summary>
            Deletes the client profile
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occured ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ClientProfileDeleteException">This expection is thrown if the specified client profile does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UnlicensedSmartClientProfilesFeatureException">This exception is thrown if the license doesn't support Smart Client Profile.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Deleting a <see cref="T:VideoOS.Management.VmoClient.ClientProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ClientProfile.MovePriorityUp">
            <summary>
            Move the profile up in priority for determination of active profile
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Move up priority is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ClientProfile.MovePriorityDown">
            <summary>
            Move the profile down in priority for determination of active profile
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Move down priority is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfileSection.ManagementClientProfiles">
            <summary>
            All Management Client Profiles
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfileSection.SmartClientProfiles">
            <summary>
            All Smart Client Profiles
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfileSection.ActiveManagementClientProfile">
            <summary>
            Get the active Management Client Profile for logged in user
            </summary>
            <returns>The Management Client Profile</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ClientProfileSection.ActiveSmartClientProfile">
            <summary>
            Get the active Smart Client Profile for logged in user
            </summary>
            <returns>The Smart Client Profile</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ClientProfileSection.GetSmartClientProfileBySid(System.String)">
            <summary>
            Get the active Smart Client Profile for a specified user
            </summary>
            <returns>The Smart Client Profile</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPAction.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MIPAction"/> class.
            </summary>
            <param name="managementServer">The management server.</param>
            <param name="id">The identifier.</param>
            <exception cref="T:System.ArgumentNullException">management server is null</exception>
            <exception cref="T:System.ArgumentException">ID may not be guid empty;id</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.DefiningPluginId">
            <summary>
            Gets or sets the DefiningPluginId.
            </summary>
            <value>
            A <see cref="T:System.Guid"/> value that specifies the DefiningPluginId.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.DefiningPluginName">
            <summary>
            Gets or sets the DefiningPluginName.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the DefiningPluginName.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.SelectionText">
            <summary>
            Gets or sets the SelectionText.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the SelectionText.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.DescriptionText">
            <summary>
            Gets or sets the DescriptionText.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the DescriptionText.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.PickerDefaultText">
            <summary>
            Gets or sets the PickerDefaultText.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the PickerDefaultText.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.MIPKinds">
            <summary>
            Gets or sets the MIPKinds.
            </summary>
            <value>
            A <see cref="P:VideoOS.Management.VmoClient.MIPAction.MIPKinds"/> value that specifies the MIPKinds.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.PickerDefaultText2">
            <summary>
            Gets or sets the PickerDefaultText2.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the PickerDefaultText.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.MIPKinds2">
            <summary>
            Gets or sets the MIPKinds2.
            </summary>
            <value>
            A <see cref="P:VideoOS.Management.VmoClient.MIPAction.MIPKinds"/> value that specifies the MIPKinds.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPAction.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPAction.Refresh">
            <summary>
            Refreshes the MIP object and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MIPActionNotFoundException">The MIP object was not found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPAction.Delete">
            <summary>
            Delete the MIP object.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MIPActionNotFoundException">The MIP object was not found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPAction.Update">
            <summary>
            Updates the MIP object.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MIPActionNotFoundException">The MIP object was not found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPAction.Create">
            <summary>
            Creates the MIP object.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObject.#ctor(VideoOS.Management.VmoClient.MIPObjectGroup,System.Guid,System.Guid,System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MIPObject" /> class.
            </summary>
            <param name="mipObjectGroup">The group for this object</param>
            <param name="id">The identifier.</param>
            <param name="kind">The kind.</param>
            <param name="subKind">The sub kind.</param>
            <param name="pluginId">The plugin identifier.</param>
            <exception cref="T:System.ArgumentNullException">mipObjectGroup is null</exception>
            <exception cref="T:System.ArgumentException">ID may not be guid empty;id</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.Kind">
            <summary>
            Gets or sets the kind.
            </summary>
            <value>
            A <see cref="T:System.Guid"/> value that specifies the kind.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.SubKind">
            <summary>
            Gets or sets the sub kind.
            </summary>
            <value>
            A <see cref="T:System.Guid"/> value that specifies the sub kind.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.PluginId">
            <summary>
            Gets or sets the plugin id.
            </summary>
            <value>
            A <see cref="T:System.Guid"/> value that specifies the plugin id.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.CustomData">
            <summary>
            Gets or sets custom data.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that contains the data.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.ParentGroupId">
            <summary>
            Gets the parent server group ID
            </summary>
            <value>The parent server group ID</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObject.ParentMIPObjectGroup">
            <summary>
            Get the group the object is member of.
            If null, the failover server not in a group but under the ManagementServer.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObject.Refresh">
            <summary>
            Refreshes the MIP object and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MIPObjectNotFoundException">The MIP object was not found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObject.Delete">
            <summary>
            Delete the MIP object.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MIPObjectNotFoundException">The MIP object was not found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObject.Update">
            <summary>
            Updates the MIP object.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MIPObjectNotFoundException">The MIP object was not found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObject.Create">
            <summary>
            Creates the MIP object.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.ServerGroupNotFoundException">If MIP object group was not found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MotionDetection.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create patrolling profiles based on a generic object
            </summary>
            <param name="internalId">Id of the patrolling profile.</param>
            <param name="objectProperties">Patrolling profile properties.</param>
            <param name="relations">Patrolling profile relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new patrolling profile is created, false when an existing Patrolling profile is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.Enabled">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value specifying if motion detection is enabled.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.ManualSensitivityEnabled">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value specifying if motion detection sensitivity is set manually.
            Disable to let the system dynamically calculate the optimal sensitity level.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.ManualSensitivity">
            <summary>
            Gets or sets a <see cref="T:System.Int32"/> value specifying the minimum amount of change required before counting as motion.
            Value in range 0 - 300.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.Threshold">
            <summary>
            Gets or sets a <see cref="T:System.Int32"/> value specifying the level of motion required for an event.
            Value in range 0 - 10000.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.KeyframesOnly">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value specifying if motion detection should be calculated on keyframes only.
            Optimize the performance on when camera runs MPEG-4/H.264/H.265 codec.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.ProcessTime">
            <summary>
            Gets or sets a <see cref="T:VideoOS.Management.Common.ProcessTime.ProcessTimeType"/> value specifying an interval for how often to check for motion.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.DetectionMethod">
            <summary>
            Gets or sets a <see cref="T:VideoOS.Management.Common.DetectionMethod.DetectionMethodType"/> value specifying motion detection method.
            Optimize motion detection performance by analyzing only a selected percentage of the image.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.HardwareAccelerationMode">
            <summary>
            Gets or sets a <see cref="T:VideoOS.Management.Common.HardwareAccelerationMode.HardwareAccelerationModeType"/> value specifying the hardware acceleration mode.
            Optimize motion detection performance by using a hardware accelerated decoder.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.GenerateMotionMetadata">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value specifying if motion detection should generate motion metadata for smart search function.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.UseExcludeRegions">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value specifying if exclude regions should be enabled in the motion detection.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.ExcludeRegions">
            <summary>
            Gets the exclude regions.
            </summary>
            <value>The exclude regions.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.CameraId">
            <summary>
            Internal method to get the camera id.
            </summary>
            <value>The id of the camera.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.CameraDevice">
            <summary>
            Get the camera the motion detection settings apply
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MotionDetection.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Refreshing a <see cref="T:VideoOS.Management.VmoClient.MotionDetection"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MotionDetection.Update">
            <summary>
            Updates the motion detection
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.DeviceNotFoundException">The camera device have been deleted.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Updating a <see cref="T:VideoOS.Management.VmoClient.MotionDetection"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MotionDetection.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on motion detection.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.#ctor(VideoOS.Management.VmoClient.CameraDevice)">
            <summary>
            Construct a patrolling profile
            </summary>
            <param name="cameraDevice">The camera device</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Constructs a patrolling profile - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="cameraDeviceId">The id of the camera this preset belongs to.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create patrolling profiles based on a generic object
            </summary>
            <param name="internalId">Id of the patrolling profile.</param>
            <param name="objectProperties">Patrolling profile properties.</param>
            <param name="relations">Patrolling profile relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new patrolling profile is created, false when an existing Patrolling profile is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingProfile.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingProfile.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingProfile.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingProfile.CameraId">
            <summary>
            Internal method to get the camera id.
            </summary>
            <value>The id of the camera.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingProfile.CameraDevice">
            <summary>
            Get the camera the patrolling profile is attached to
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingProfile.DefinitionXml">
            <summary>
            Internal method to get the camera id.
            </summary>
            <value>The id of the camera.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Refreshing a <see cref="T:VideoOS.Management.VmoClient.PatrollingProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.Create">
            <summary>
            Creates the patrolling profile
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.PatrollingProfilePtzNotSupportedException">This expection is thrown if the camera device doesn't support PTZ.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.PatrollingProfileCreationException">This expection is thrown if the camera device contains another patrolling profile with the same name.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.PatrollingProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.Update">
            <summary>
            Updates the patrolling profile
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.PatrollingProfileUpdateException">This expection is thrown if the patrolling profile has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.PatrollingProfileRenameException">This expection is thrown another patrolling profile on the same device have the same name.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Updating a <see cref="T:VideoOS.Management.VmoClient.PatrollingProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.Delete">
            <summary>
            Deletes the patrolling profile
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingPatrollingProfileException">This expection is thrown if the specified patrolling profile have already been deleted on the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Deleting a <see cref="T:VideoOS.Management.VmoClient.PatrollingProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.FindFirstStep(VideoOS.Management.VmoClient.PatrollingPreset)">
            <summary>
            Retrives the first patrolling step with the specificed preset.
            </summary>
            <param name="preset"></param>
            <returns>A PatrollingStep if the preset exists, otherwise null</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PatrollingProfile.FindLastStep(VideoOS.Management.VmoClient.PatrollingPreset)">
            <summary>
            Retrives the last patrolling step with the specificed preset.
            </summary>
            <param name="preset"></param>
            <returns>A PatrollingStep if the preset exists, otherwise null</returns>
        </member>
        <member name="T:VideoOS.Management.VmoClient.PatrollingStep">
            <summary>
            A patrolling step represents a move with the camera to a predefined position specified by a preset. It includes
            all the necessary information to move the camera one step. The expected transition time to the preset, for how long
            it should wait in the specified position and the speed of the pan and tilt as well as the zoom speed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingStep.Profile">
            <summary>
            The patrolling profile to which the patrolling step belongs.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingStep.Position">
            <summary>
            The index position for the patrolling step in relation too all previous steps of the profile.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingStep.Preset">
            <summary>
            The predefined preset for the camera to move to in this patrolling step.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingStep.WaitTime">
            <summary>
            Specifies for how long the camera should stay in this position until it continues to the next patrolling step.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingStep.ExpectedTransitionTimeToPreset">
            <summary>
            The expected time required for the camera to move the specified preset. This is used when disabling
            plugins during movement. When the camera moves between presets it is possible to disable plugins such as motion
            detection and other. This time specifies for how long plugins should be disbled.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingStep.PanSpeed">
            <summary>
            Allow the pan-speed of the camera to defined. This is only possible if IsPanSpeedAvailable is true.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingStep.TiltSpeed">
            <summary>
            Allow the tilt-speed of the camera to defined. This is only possible if IsTiltSpeedAvailable is true.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PatrollingStep.ZoomSpeed">
            <summary>
            Allow the zoom-speed of the camera to defined. This is only possible if IsZoomSpeedAvailable is true.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.RuleSource">
            <summary>
            The <b>RuleSource</b> object .
            </summary>
            <remarks>
            A rule sources are rightly related to performance counter rule configurations. Can be used to setup advanced congiguration on performance counters
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RuleSource.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create roles based on a generic object
            </summary>
            <param name="internalId">Id of the Configuration .</param>
            <param name="objectProperties">Configuration properties.</param>
            <param name="relations">Configuration relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new configuration is created, false when an existing configuration is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RuleSource.#ctor(System.String,System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create RuleSources based on a generic object
            </summary>
            <param name="internalId">Internal id</param>
            <param name="id">Id of the object.</param>
            <param name="objectProperties">RuleSource properties.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isCreated">Set to <c>true</c> if object is created on the server, otherwise false.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.DataCollectorId">
            <summary>
            Gets or sets the id of datacollector of the RuleSource.
            </summary>
            <value>
            A string containing the datacollector id.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.CriticalThreshold">
            <summary>
            Gets or sets the critical threshold of the RuleSource.
            </summary>
            <value>
            A double containing the RuleSource critical threshold .
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.WarningThreshold">
            <summary>
            Gets or sets the warning threshold of the RuleSource.
            </summary>
            <value>
            A double containing the RuleSource warning threshold .
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.TimeWindow">
            <summary>
            Gets or sets the time window of the RuleSource.
            </summary>
            <value>
            A string containing the RuleSource time window.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.CounterRuleId">
            <summary>
            Gets or sets the counter rule id.
            </summary>
            <value>The counter configuration rule id.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.RuleType">
            <summary>
            Gets or sets the type of RuleSource.
            </summary>
            <value>
            A int containing the RuleSource rule type.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.Configurable">
            <summary>
            Gets or sets if RuleSource is configurable.
            </summary>
            <value>
            A boolean determining if the RuleSource is configurable.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.CounterId">
            <summary>
            Gets or sets the Performance Counter Id of RuleSource.
            </summary>
            <value>
            A Int32 containing performance counter id.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.CounterPath">
            <summary>
            Gets or sets the Performance Counter path of RuleSource.
            </summary>
            <value>
            A string containing performance counter path.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RuleSource.ParentId">
            <summary>
            Gets or sets the parent id of the RuleSource.
            </summary>
            <value>
            A string containing parent id.
            </value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RuleSource.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if the object have been deleted ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the RuleSource have been deleted from the server</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RuleSource.Create">
            <summary>
            Creates the RuleSource.<br />
            <br />
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs. <br />
            - or - <br />
            If invalid properties have been set on the RuleSource.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RuleSource.Update">
            <summary>
            Updates the RuleSource. <br/>
            <br/>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs. <br/>
            - or - <br/>
            If invalid properties have been set on the RuleSource.
            </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RuleSource.Delete">
            <summary>
            Deletes the RuleSource
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the RuleSource have been deleted from the server</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.MIPDeviceEvent">
            <summary>
            The <b>MIPDeviceEvent</b> object represents a custom MIP device event.
            </summary>
            <remarks>
            A MIP device event can be used to invoke rules to perform various tasks in the system.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPDeviceEvent.Definition">
            <summary>
            Get or set the definition XML. The class <c>MIPDeviceEventDefinition</c> can be used to serialize and deserialize this content.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPDeviceEvent.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a MIPDeviceEvent.
            </summary>
            <param name="managementServer">The Management Server where the event should be created.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPDeviceEvent.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid)">
            <summary>
            Constructs a MIPDeviceEvent with a custom id.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the event should be created.</param>
            <param name="customId">Custom id of the event.</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.MIPDeviceEvent"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion" /> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPDeviceEvent.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Constructs a MIPDeviceEvent with a custom id - required for testability.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="repositories">Link to repositories.</param>
            <param name="customId">Custom id of the event.</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.MIPDeviceEvent"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion" /> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPDeviceEvent.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a MIPDeviceEvent - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPDeviceEvent.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to MIP device events based on a generic object
            </summary>
            <param name="internalId">Id of the MIP device event.</param>
            <param name="objectProperties">User-defined event properties.</param>
            <param name="relations">User-defined event relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new MIP device event is created, false when an existing MIP device event is loaded.</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.MIPEvent">
            <summary>
            The <b>MIPEvent</b> object represents a custom MIP event.
            </summary>
            <remarks>
            A MIP event can be used to invoke rules to perform various tasks in the system.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPEvent.Definition">
            <summary>
            Get or set the definition XML. The class <c>MIPEventDefinition</c> can be used to serialize and deserialize this content.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPEvent.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a MIPEvent.
            </summary>
            <param name="managementServer">The Management Server where the event should be created.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPEvent.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid)">
            <summary>
            Constructs a MIPEvent with a custom id.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the event should be created.</param>
            <param name="customId">Custom id of the event.</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.MIPEvent"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion" /> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPEvent.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Constructs a MIPEvent with a custom id - required for testability.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="repositories">Link to repositories.</param>
            <param name="customId">Custom id of the event.</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.MIPEvent"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion" /> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPEvent.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a MIPEvent - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPEvent.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to MIP events based on a generic object
            </summary>
            <param name="internalId">Id of the MIP event.</param>
            <param name="objectProperties">User-defined event properties.</param>
            <param name="relations">User-defined event relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new MIP event is created, false when an existing MIP event is loaded.</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.PluginEvent">
            <summary>
            The <b>PluginEvent</b> object represents a custom plug-in event.
            </summary>
            <remarks>
            A plugin-in event can be used to invoke rules to perform various tasks in the system.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to plug-in events based on a generic object
            </summary>
            <param name="internalId">Id of the plug-in event.</param>
            <param name="objectProperties">User-defined event properties.</param>
            <param name="relations">User-defined event relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new plug-in event is created, false when an existing plug-in event is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.Create">
            <summary>
            Creates the plug-in event
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.PluginEventCreationException">This expection is thrown if a plug-in event with same name already exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.Update">
            <summary>
            Updates the plug-in event
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.PluginEventRenameException">This expection is thrown if the name has been changed to the same name of an existing plug-in event.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.PluginEventNotFoundException">This expection is thrown if the plugin event has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.Delete">
            <summary>
            Deletes the plug-in event
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingPluginEventException">This expection is thrown if the specified plug-in event does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.Trigger(System.Guid)">
            <summary>
            Triggers the plug-in event
            </summary>
            <param name="sourceId">Id of the source on which the event was triggered.</param>
            <exception cref="T:VideoOS.Management.VmoClient.PluginEventNotFoundException">This expection is thrown if the plug-in event has been removed from the server.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.Trigger(System.Guid,System.String)">
            <summary>
            Triggers the plug-in event with metadata devices and custom data.
            </summary>
            <param name="sourceId">Id of the source on which the event was triggered.</param>
            <param name="customData">Custom data string. Will be passed on any actions, triggered by a rule for this event.</param>
            <exception cref="T:VideoOS.Management.VmoClient.PluginEventNotFoundException">This expection is thrown if the plug-in event has been removed from the server.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.Trigger(System.Guid,System.Guid[],System.String)">
            <summary>
            Triggers the plug-in event with metadata devices and custom data.
            </summary>
            <param name="sourceId">Id of the source on which the event was triggered.</param>
            <param name="metadataDeviceIds">Metadata device ids. Can be used in rules - e.g. start recording on 'devices from metadata'.</param>
            <param name="customData">Custom data string. Will be passed on any actions, triggered by a rule for this event.</param>
            <exception cref="T:VideoOS.Management.VmoClient.PluginEventNotFoundException">This expection is thrown if the plug-in event has been removed from the server.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PluginEvent.Trigger(System.Guid,System.Guid[],System.Guid[],System.String)">
            <summary>
            Triggers the plug-in event with metadata devices and custom data.
            </summary>
            <param name="sourceId">Id of the source on which the event was triggered.</param>
            <param name="metadataDeviceIds">Metadata device ids. Can be used in rules - e.g. start recording on 'devices from metadata'.</param>
            <param name="metadataDeviceGroupIds">Metadata group ids. Can be used in rules - e.g. start recording on 'devices from metadata'.</param>
            <param name="customData">Custom data string. Will be passed on any actions, triggered by a rule for this event.</param>
            <exception cref="T:VideoOS.Management.VmoClient.PluginEventNotFoundException">This expection is thrown if the plug-in event has been removed from the server.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivacyProtection.Enabled">
            <summary>
            Gets or sets a boolean value indicating whether the privacy mask is enabled in the configuration.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivacyProtection.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivacyProtection.DeviceId">
            <summary>
            Gets the id of the device to which the privacy mask is related.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivacyProtection.Device">
            <summary>
            Get the camera the privacy mask is attached to
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivacyProtection.Mask">
            <summary>
            Gets the privacy mask.
            </summary>
            <value>The privacy mask.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivacyProtection.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Refreshing a <see cref="T:VideoOS.Management.VmoClient.PrivacyProtection"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivacyProtection.Update">
            <summary>
            Apply privacy masking changes to the database.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v12_1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.DeviceNotFoundException">This expection is thrown if the device has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <remarks>Updating a <see cref="T:VideoOS.Management.VmoClient.PatrollingProfile"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivacyProtection.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on privacy mask.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServerCreateOptions.DefaultStorageName">
            <summary>
            Gets or sets the default storage name for newly created storage.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServerCreateOptions.DefaultStoragePath">
            <summary>
            Gets or sets the default storage path for the newly created storage.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServerCreateOptions.DefaultStorageRetainMinutes">
            <summary>
            Gets or sets the number of minutes that must elapse before data are deleted or archived for the newly created storage.
            </summary>
            <value>A <see cref="T:System.Int32"/> value that specificies the retention period in minutes. By default, the value is set to 7 days</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServerCreateOptions.DefaultStorageMaxSize">
            <summary>
            Sets the maximum size of the archive storage in MB for the newly created storage.
            </summary>
            <value>A <see cref="T:System.Double"/> value that specifies the maximum size of the storage in MB. By default, the value is set to 1 TB</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid,System.Guid)">
            <summary>
            Constructs a RetentionOptionRoleRelation.
            </summary>
            <param name="managementServer">The Management Server where the role should be created.</param>
            <param name="idRole">The id of the role.</param>
            <param name="idRetentionOption">The id of the retention option.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="idRole"/> is a null reference</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="idRetentionOption"/> is a null reference</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a Role.
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the role should be created.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Guid)">
            <summary>
            Constructs a VmoRetentionOptionRoleRelation - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="idRole">The id of the role.</param>
            <param name="idRetentionOption">The id of the retention option.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="idRole"/> is a null reference</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="idRetentionOption"/> is a null reference</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a RetentionOptionRoleRelation - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create roles based on a generic object
            </summary>
            <param name="internalId">Id of the role.</param>
            <param name="objectProperties">Role properties.</param>
            <param name="relations">Role relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new role is created, false when an existing role is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.IdRole">
            <summary>
            Gets or sets the role id.
            </summary>
            <value>The role id.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.IdRetentionOption">
            <summary>
            Gets or sets the retention option id.
            </summary>
            <value>The retention option id.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.RetentionName">
            <summary>
            Gets or sets the retention name.
            </summary>
            <value>The retention name.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            This expection is thrown if the role has been removed from the server.<br/>
            - or -<br/>
            This expection is thrown in case of communication erros or if an unknown error occurs.
            </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.Create">
            <summary>
            Creates the role
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.RoleCreationException">This expection is thrown if a role with same username already exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.Update">
            <summary>
            Updates the role
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RoleUpdateException">This expection is thrown if the role has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.Delete">
            <summary>
            Deletes the role
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingRoleException">This expection is thrown if the specified role does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RetentionOptionRoleRelation.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on roles.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.MarkedData">
            <summary>
            The <b>MarkedData</b> object represents a bookmark.
            </summary>
            <remarks>
            A boomark can be used to add information to a point-in-time of recorded data.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.#ctor(System.String,VideoOS.Management.VmoClient.MarkedDataReference)">
            <summary>
            Constructs a MarkedData based on a MarkedData reference.
            </summary>
            <param name="id">The id of the marked data</param>
            <param name="markedDataReference">The MarkedData reference the MarkedData should be based on.</param>
            <remarks>This contructor is based on a MarkedData reference.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.#ctor(System.String,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used for test - constructs a MarkedData on a device.
            </summary>
            <param name="internalId">Id of the MarkedData.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create MarkedDatas based on a generic object;
            </summary>
            <param name="internalId">Id of the MarkedData.</param>
            <param name="objectProperties">MarkedData properties.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isCreated">Set to <c>true</c> if object is created on the server, otherwise false.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.DeviceIds">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.Reference">
            <summary>
            Gets or sets the MarkedData reference.
            </summary>
            <value>
            A string containing the MarkedData reference.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.UserDomainAccountName">
            <summary>
            Gets the name of the user that created the MarkedData
            </summary>
            <value>
            A string containing the user name in the form '[DOMAIN]\[USERNAME]'.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.Header">
            <summary>
            Gets or sets the header of the MarkedData.
            </summary>
            <value>
            A string containing the MarkedData header.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.MarkedDataType">
            <summary>
            Gets or sets the type of the marked data.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.StartTime">
            <summary>
            Gets or sets the TimeBegin time.
            </summary>
            <value>This is the starttime of the MarkedData.</value>
            <remarks>
            The TimeBegin should be less that the TimeTrigged and the TimeEnd.
            The time will be in UTC format when recieved from the server but can be in local time when editted.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.TagTime">
            <summary>
            Gets or sets the TagTime time.
            </summary>
            <value>The date the MarkedData is triggered.</value>
            <remarks>
            The TimeTrigged should be higher that the TimeBegin and less than the TimeEnd.
            The time will be in UTC format when recieved from the server but can be in local time when editted.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.EndTime">
            <summary>
            Gets or sets the TimeEnd time.
            </summary>
            <value>This is the endtime of the MarkedData.</value>
            <remarks>
            The TimeEnd should be higher that the TimeBegin and the TimeTrigged
            The time will be in UTC format when recieved from the server but can be in local time when editted.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.UseRetention">
            <summary>
            Gets or sets the whether to use retension.
            </summary>
            <value>This tells if the marked data is protected.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.RetentionExpire">
            <summary>
            Gets or sets the expire time.
            </summary>
            <value>This is the expire time of the MarkedData.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.RetentionSize">
            <summary>
            Gets or sets the retention size.
            </summary>
            <value>This is the size of the MarkedData in the MediaDatabase.</value>
        </member>
        <member name="F:VideoOS.Management.VmoClient.MarkedData._stickerSizes">
            <summary>
            Gets locked size by devices.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.ResetCachedObjects">
            <summary>
            Sets all cached objects to null. Intended to be used whenever the underlying ObjectProperty gets a new value.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if the object have been deleted ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the MarkedData have been deleted from the server</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.Create">
            <summary>
            Creates the MarkedData.<br />
            <br />
            Required properties are <see cref="P:VideoOS.Management.VmoClient.MarkedData.Reference" />, <see cref="P:VideoOS.Management.VmoClient.MarkedData.StartTime" />, <see cref="P:VideoOS.Management.VmoClient.MarkedData.TagTime" /> and <see cref="P:VideoOS.Management.VmoClient.MarkedData.EndTime" />,
            The following must apply: <see cref="P:VideoOS.Management.VmoClient.MarkedData.StartTime" /> &lt;= <see cref="P:VideoOS.Management.VmoClient.MarkedData.TagTime" /> &lt;=
            <see cref="P:VideoOS.Management.VmoClient.MarkedData.EndTime" />.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs. <br />
            - or - <br />
            If invalid properties have been set on the MarkedData.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.Update">
            <summary>
            Updates the MarkedData. <br/>
            <br/>
            The following must apply: <see cref="P:VideoOS.Management.VmoClient.MarkedData.StartTime"/> &lt;= <see cref="P:VideoOS.Management.VmoClient.MarkedData.TagTime"/> &lt;=
            <see cref="P:VideoOS.Management.VmoClient.MarkedData.EndTime"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs. <br/>
            - or - <br/>
            If invalid properties have been set on the MarkedData.
            </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.Delete">
            <summary>
            Deletes the MarkedData
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the MarkedData have been deleted from the server</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.ObjectProperties">
            <summary>
            Contains all the properties of the object
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.Undo">
            <summary>
            Revert changes which have been done since the object was last received from the database.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MarkedData.IsDirty">
            <summary>
            Specifies if the object have been changed.
            </summary>
            <returns>True if it has been changed, false if not</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.IsCreated">
            <summary>
            Specifies if the object have been created.
            </summary>
            <remarks>True if the it have been created, false if not.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MarkedData.IsDeleted">
            <summary>
            Specifies if the object have been deleted.
            </summary>
            <remarks>
            True if the it have been deleted, false if not. MarkedDatas don't get deleted by Device.
            So if related device get deleted it will not mark the MarkedData as deleted.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevice.RecordingFramerate">
            <summary>
            Gets or sets a <see cref="T:System.Double"/> value specifying the configured recording framerate for this device (frames per second).
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevice.RecordKeyframesOnly">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value specifying if all or just key frames should be recorded.
            </summary>
            <exception cref="T:System.NotSupportedException">This property is supported from version 7.0 up</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevice.RecordOnRelatedDevices">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value specifying if this device is recording all related devices should also record.
            </summary>
            <exception cref="T:System.NotSupportedException">The property is not supported by the server (see remarks).</exception>
            <remarks>This property is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevice.PrivacyProtectionSettings">
            <summary>
            Get a <see cref="T:VideoOS.Management.VmoClient.PrivacyProtection"/> specifying the privacy masking settings on the camera
            </summary>
            <exception cref="T:System.NotSupportedException">The property is not supported by the server (see remarks).</exception>
            <remarks>This property is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v12_1"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevice.MotionDetectionSettings">
            <summary>
            Get a <see cref="T:VideoOS.Management.VmoClient.MotionDetection"/> value specifying the motion detection settings on the camera
            </summary>
            <exception cref="T:System.NotSupportedException">The property is not supported by the server (see remarks).</exception>
            <remarks>This property is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevice.EnumPermissions">
            <summary>
            Gets all permissions for this <see cref="T:VideoOS.Management.VmoClient.CameraDevice"/> instance.
            </summary>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.CameraDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevice.EnumPermissions(VideoOS.Management.VmoClient.CameraDevicePermissionSet)">
            <summary>
            Gets the specified permissions for this <see cref="T:VideoOS.Management.VmoClient.CameraDevice"/> instance.
            </summary>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.CameraDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevice.EnumPermissions(System.String)">
            <summary>
            Gets the permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.CameraDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.CameraDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevice.EnumPermissions(System.String,VideoOS.Management.VmoClient.CameraDevicePermissionSet)">
            <summary>
            Gets the specified permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.CameraDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.CameraDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevice.Allow(VideoOS.Management.VmoClient.CameraDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Allows the specified permissions to a <see cref="T:VideoOS.Management.VmoClient.Role"/> instance.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevice.Allow(VideoOS.Management.VmoClient.CameraDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Allows the specified permissions for a number of roles.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevice.Revoke(VideoOS.Management.VmoClient.CameraDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Revokes the specified permissions for a single identity.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevice.Revoke(VideoOS.Management.VmoClient.CameraDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Revokes the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevice.EnumPermissions">
            <summary>
            Gets all permissions for this <see cref="T:VideoOS.Management.VmoClient.MetadataDevice"/> instance.
            </summary>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.MetadataDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevice.EnumPermissions(VideoOS.Management.VmoClient.MetadataDevicePermissionSet)">
            <summary>
            Gets the specified permissions for this <see cref="T:VideoOS.Management.VmoClient.MetadataDevice"/> instance.
            </summary>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.MetadataDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevice.EnumPermissions(System.String)">
            <summary>
            Gets the permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.MetadataDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.MetadataDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevice.EnumPermissions(System.String,VideoOS.Management.VmoClient.MetadataDevicePermissionSet)">
            <summary>
            Gets the specified permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.MetadataDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.MetadataDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevice.Allow(VideoOS.Management.VmoClient.MetadataDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Allows the specified permissions to a <see cref="T:VideoOS.Management.VmoClient.Role"/> instance.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevice.Allow(VideoOS.Management.VmoClient.MetadataDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Allows the specified permissions for a number of roles.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevice.Revoke(VideoOS.Management.VmoClient.MetadataDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Revokes the specified permissions for a single identity.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevice.Revoke(VideoOS.Management.VmoClient.MetadataDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Revokes the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.FailoverServer">
            <summary>
            The <b>View</b> object represents one view.
            </summary>
            <remarks>
            There are monitor views, private views and shared views.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid,System.Guid,System.Boolean,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.FailoverServer"/> class specifying the parent failover group as the <see cref="P:VideoOS.Management.VmoClient.FailoverServer.ManagementServer"/>, the recording server service id and the id for the failover server itself.
            </summary>
            <param name="managementServer">A new failover server will be placed under the management server (FailoverGroupId = "6A85FFC3-C134-4338-A072-024817CB5820")</param>
            <param name="id">The id of the failover server</param>
            <param name="recordingServerServiceId">The recording server service ID</param>
            <param name="clientEncryptionEnabled">Flag for SSL connection.</param>
            <param name="serverHostName">Server host name.</param>
            <param name="serverPort">Server port.</param>
            <exception cref="T:System.ArgumentException">if recordingServerServiceId is not a guid</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.#ctor(VideoOS.Management.VmoClient.FailoverServerGroup,System.Guid,System.Guid,System.Boolean,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the FailoverServer class specifying the parent failover group (always MS), the recording server service ID and the ID for the failover server itself
            </summary>
            <param name="failoverServerGroup">The <see cref="T:VideoOS.Management.VmoClient.FailoverServerGroup"/> in which this <see cref="T:VideoOS.Management.VmoClient.FailoverServer"/> is placed.</param>
            <param name="id">The id of the failover server</param>
            <param name="recordingServerServiceId">The recording server service ID</param>
            <param name="clientEncryptionEnabled">Flag for SSL connection.</param>
            <param name="serverHostName">Server host name.</param>
            <param name="serverPort">Server port.</param>
            <exception cref="T:System.ArgumentException">if recordingServerServiceId is not a guid</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the FailoverServer class - required for testability.
            </summary>
            <param name="repositories"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create view  based on a generic object
            </summary>
            <param name="internalId">Id of the view .</param>
            <param name="objectProperties">View  properties.</param>
            <param name="relations">View  relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded.  Always false since only existing view s is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.Position">
            <summary>
            Gets or sets the position of the failover server in the failover server group
            </summary>
            <value>The position</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.HostName">
            <summary>
            Gets or sets the host name of the failover server
            </summary>
            <value>The host name</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.UdpPort">
            <summary>
            Gets or sets the UDP port of the failover server
            </summary>
            <value>The UDP port</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.DatabasePath">
            <summary>
            Gets or sets the database path of the failover server
            </summary>
            <value>The database path</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.RecordingServerServiceId">
            <summary>
            Gets the recording server service ID of the failover server
            </summary>
            <value>The recording server service ID</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.Status">
            <summary>
            Gets the status of the failover server (0=Stopped, 1=Running, 2=StopPending)
            </summary>
            <value>The failover server status</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.Enabled">
            <summary>
            Returns whether the failover server is enabled
            </summary>
            <value>true if failover server is enabled</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.HotStandbyRecorderId">
            <summary>
            Gets the hot standby recorder ID
            </summary>
            <value>The hot standby recorder ID</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.WebServerUri">
            <summary>
            Gets the URI for the failover server web server
            </summary>
            <value>URI</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.WebServerUriConfiguration">
            <summary>
            Gets the URI configuration for the failover server web server
            </summary>
            <value>URI configuration</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.PublicAccessEnabled">
            <summary>
            Gets the Enabled state of the public web adress
            </summary>
            <value>The Enabled state</value>
            <exception cref="T:System.NotSupportedException">Only supported from verion 13.1</exception>
            <remarks>Only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_1"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.PublicWebServerHostName">
            <summary>
            Gets the host name of the public web adress if configured
            </summary>
            <value>The host name</value>
            <exception cref="T:System.NotSupportedException">Only supported from verion 13.1</exception>
            <remarks>Only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_1"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.PublicWebServerPort">
            <summary>
            Gets the port of the public web adress if configured
            </summary>
            <value>The port</value>
            <exception cref="T:System.NotSupportedException">Only supported from verion 13.1</exception>
            <remarks>Only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_1"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.ParentGroupId">
            <summary>
            Gets the parent server group ID
            </summary>
            <value>The parent server group ID</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.ParentFailoverServerGroup">
            <summary>
            Get the group the object is member of.
            If null, the failover server not in a group but under the ManagementServer.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServer.ManagementServer">
            <summary>
            The Management Server
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.EnableFailoverServer">
            <summary>
            Enables the failover server
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.DisableFailoverServer">
            <summary>
            Disable the failover server
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.StopFailoverService">
            <summary>
            Stop the failover service
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.SetRecorderInformation(System.Boolean,System.String,System.Int32,System.Version,System.String)">
            <summary>
            Updates recorder information for the failover recording server.
            </summary>
            <param name="clientEncryptionEnabled">Specifies whether encryption of the client communication is enabled.</param>
            <param name="webserverHostName">The host name for the web server hosted by the recording server.</param>
            <param name="webserverPort">The port number for the web server hosted by the recording server.</param>
            <param name="version">Version of the the recording server.</param>
            <param name="timeZone">Time zone of the recording server.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_1"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.MoveFailoverServer(VideoOS.Management.VmoClient.FailoverServerGroup,System.Int32)">
            <summary>
            Move the failover server to the same or another server group at a specific or "system determined" position.
            All failover server objects in the source server group as well as destination server group will be refreshed due to this function.
            However, if one of above failover server objects are dirty, an InvalidOperationException will be thrown
            </summary>
            <param name="newParentGroup">The new parent failover server group under which the failover server is placed</param>
            <param name="insertAtPosition">
            The new position (priority) in the server group for the failover server.
            The value can [0, number of failover servers in group]. The value -1 means "system decides the position (priority)"
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the object hasn't been created or if a deleted event have occurred ealier or in dirty state<br/>
            - or -
            If any failover servers in the source server group or destination server group is dirty<br/>
            </exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.MoveFailoverServerToManagementServer(System.Int32)">
            <summary>
            Move the failover server to the Management Server at a specific or "system determined" position.
            All failover server objects in the source server group as well as all under the Management Server will be refreshed due to this function.
            However, if one of above failover server objects are dirty, an InvalidOperationException will be thrown
            </summary>
            <param name="insertAtPosition">
            The new position (priority) in the server group for the failover server.
            The value can [0, number of failover servers in group]. The value -1 means "system decides the position (priority)"
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the object hasn't been created or if a deleted event have occurred ealier or in dirty state<br/>
            - or -
            If any failover servers in the source server group or under the Management Server is dirty<br/>
            </exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.GetHardwareDrivers">
            <summary>
            Get the hardware drivers installed on the failover server
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <returns>Installed hardware drivers</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Get hardware drivers on a <see cref="T:VideoOS.Management.VmoClient.FailoverServer"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
            <remarks>This will return a empty array until the first time the recording server on the failover server have started. The recording server will start when the failover server goes in hotstandby or in failover for a recorder</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.Refresh">
            <summary>
            Refreshes the failover server and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.Refresh(System.Boolean)">
            <summary>
            Refreshes the failover server and get the latest updates from the database.
            </summary>
            <param name="updateRelations">True if object should be tested and possibly moved in the object hierarchy</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.Create">
            <summary>
            Create a failover server.
            This method is only called by the server when a failover server register itself.
            It may not be called by the system administrator in e.g. the Management Client
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.Delete">
            <summary>
            Delete the failover server
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServer.Update">
            <summary>
            Update the failover server
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case on a VMO error</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevice.EnumPermissions">
            <summary>
            Gets all permissions for this <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevice"/> instance.
            </summary>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevice.EnumPermissions(VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet)">
            <summary>
            Gets the specified permissions for this <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevice"/> instance.
            </summary>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevice.EnumPermissions(System.String)">
            <summary>
            Gets the permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevice.EnumPermissions(System.String,VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet)">
            <summary>
            Gets the specified permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevice.Allow(VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Allows the specified permissions to a <see cref="T:VideoOS.Management.VmoClient.Role"/> instance.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevice.Allow(VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Allows the specified permissions for a number of roles.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevice.Revoke(VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Revokes the specified permissions for a single identity.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevice.Revoke(VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Revokes the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevice.EnumPermissions">
            <summary>
            Gets all permissions for this <see cref="T:VideoOS.Management.VmoClient.InputDevice"/> instance.
            </summary>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.InputDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.InputDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevice.EnumPermissions(VideoOS.Management.VmoClient.InputDevicePermissionSet)">
            <summary>
            Gets the specified permissions for this <see cref="T:VideoOS.Management.VmoClient.InputDevice"/> instance.
            </summary>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.InputDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.InputDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.InputDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevice.EnumPermissions(System.String)">
            <summary>
            Gets the permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.InputDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.InputDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.InputDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevice.EnumPermissions(System.String,VideoOS.Management.VmoClient.InputDevicePermissionSet)">
            <summary>
            Gets the specified permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.InputDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.InputDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.InputDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.InputDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevice.Allow(VideoOS.Management.VmoClient.InputDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Allows the specified permissions to a <see cref="T:VideoOS.Management.VmoClient.Role"/> instance.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevice.Allow(VideoOS.Management.VmoClient.InputDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Allows the specified permissions for a number of roles.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevice.Revoke(VideoOS.Management.VmoClient.InputDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Revokes the specified permissions for a single identity.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevice.Revoke(VideoOS.Management.VmoClient.InputDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Revokes the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevice.EnumPermissions">
            <summary>
            Gets all permissions for this <see cref="T:VideoOS.Management.VmoClient.SpeakerDevice"/> instance.
            </summary>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.SpeakerDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevice.EnumPermissions(VideoOS.Management.VmoClient.SpeakerDevicePermissionSet)">
            <summary>
            Gets the specified permissions for this <see cref="T:VideoOS.Management.VmoClient.SpeakerDevice"/> instance.
            </summary>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.SpeakerDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevice.EnumPermissions(System.String)">
            <summary>
            Gets the permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.SpeakerDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.SpeakerDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevice.EnumPermissions(System.String,VideoOS.Management.VmoClient.SpeakerDevicePermissionSet)">
            <summary>
            Gets the specified permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.SpeakerDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.SpeakerDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevice.Allow(VideoOS.Management.VmoClient.SpeakerDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Allows the specified permissions to a <see cref="T:VideoOS.Management.VmoClient.Role"/> instance.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevice.Allow(VideoOS.Management.VmoClient.SpeakerDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Allows the specified permissions for a number of roles.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevice.Revoke(VideoOS.Management.VmoClient.SpeakerDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Revokes the specified permissions for a single identity.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevice.Revoke(VideoOS.Management.VmoClient.SpeakerDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Revokes the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.RecordingStorageId">
            <summary>
            Gets the id of the recording storage this device is configured to use.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.RecordingStorage">
            <summary>
            Gets the <see cref="P:VideoOS.Management.VmoClient.RecordingDevice.RecordingStorage"/> instance which this <see cref="T:VideoOS.Management.VmoClient.Device"/> is related to.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.RecordingEnabled">
            <summary>
            Gets or sets a boolean value indicating whether recording is enabled in the configuration for this device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.PrebufferEnabled">
            <summary>
            Gets or sets a boolean value indicating whether prebuffer recording is enabled in the configuration for this device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.PrebufferInMemory">
            <summary>
            Gets or sets a boolean value indicating whether prebuffer should use disk or memory for this device.
            </summary>
            <exception cref="T:System.NotSupportedException">Prebuffer in memory is supported from version 10.2</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.PrebufferSeconds">
            <summary>
            Gets or sets an <see cref="T:System.Int32"/> value specifying the configured number of seconds to keep in the pre-buffer this device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.EdgeStorageEnabled">
            <summary>
            Gets or sets a boolean value indicating whether automatic remote recording retrieval is enabled in the configuration for this device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.EdgeStoragePlaybackEnabled">
            <summary>
            Gets or sets a boolean value indicating whether edge-storage playback is enabled in the configuration for this device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.ManualRecordingTimeoutEnabled">
            <summary>
            Gets or sets a boolean value indicating whether manual recording timeout is enabled in the configuration for this device.
            </summary>
            <exception cref="T:System.NotSupportedException">Manual recording is supported from verion 7.0</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingDevice.ManualRecordingTimeoutMinutes">
            <summary>
            Gets or sets an <see cref="T:System.Int32"/> value specifying the configured number of minutes after which to stop manual recording for this device.
            </summary>
            <exception cref="T:System.NotSupportedException">Manual recording is supported from verion 7.0</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingDevice.TruncateStorage">
            <summary>
            Truncates media storage for the device on the recording server where the device is currently configured.
            </summary>
            <returns><see cref="T:VideoOS.Management.VmoClient.TruncateDeviceStorageTask"/> object with progress information of the operation.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingDevice.TruncateStorage(System.Guid)">
            <summary>
            Truncates media storage for the device on the recording server where the device is currently configured.
            </summary>
            <returns><see cref="T:VideoOS.Management.VmoClient.TruncateDeviceStorageTask"/> object with progress information of the operation.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>This is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingDevice.QueryOtherRecordingServersWithMedia">
            <summary>
            Queries the server for the ids of other recording server than the one where the device is currently configured where the device has recordings.
            </summary>
            <returns>A guid array containing recording server ids where the device has recordings.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>This is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingDevice.ChangeRecordingStorage(System.Guid,System.Boolean)">
            <summary>
            Moves the device to another recording storage.
            This action will refresh the object.
            </summary>
            <param name="targetStorageId">Id of the <see cref="P:VideoOS.Management.VmoClient.RecordingDevice.RecordingStorage"/> that the device is being moved to.</param>
            <param name="moveData"><b>true</b> to allow any existing media data to be moved to the new storage; otherwise, <b>false</b>.</param>
            <returns><see cref="T:VideoOS.Management.VmoClient.MoveDeviceTask"/> object with progress information of the operation.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>
            Moving media data to a new recording storage is potentially a long running operation as the recording server may have to move a lot of data.<br/>
            Calling this function will therefore make the configuration change and will create a task that is executed by the recording server
            to actually perform the move operation.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingDevice.RequestEdgeStorageRetrieval(System.DateTime,System.DateTime,System.String)">
            <summary>
            Requests retrieving edge storage data from the device for a specified time interval.
            </summary>
            <param name="startTime">The start time of the interval from where to retrieve edge storage.</param>
            <param name="endTime">The end time of the interval from where to retrieve edge storage.</param>
            <param name="metadata">Custom metadata that should be associated to this task.
            No pre-defined parsing or rules are applied to this data by the system.</param>
            <returns><see cref="T:VideoOS.Management.VmoClient.RequestEdgeStorageTask"/> object with progress information of the operation.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">The feature is not license on the server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>Requesting edge storage retrieval is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.HardwareDriver.#ctor(VideoOS.Management.VmoClient.VmoPropertyCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.HardwareDriver"/> class.
            </summary>
            <param name="objectProperties">Hardware driver properties.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.ObjectProperties">
            <summary>
            Contains all the properties of the object
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.DriverNumber">
            <summary>
            Gets the number of the driver
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.Name">
            <summary>
            Gets the name of the driver
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.GroupName">
            <summary>
            Gets the group name
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.UseCount">
            <summary>
            Gets the amount of hardwares that uses the driver on the recorder
            </summary>
            <remarks>If hardware drivers from failover server is returned this is always 0 since the failover server only uses its driver when it is in failover. </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.Id">
            <summary>
            Gets the id of the driver
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.DriverVersion">
            <summary>
            Gets the version of the driver.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.DriverType">
            <summary>
            Gets the type of the driver
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareDriver.Revision">
            <summary>
            Gets the revision of the driver
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SecuritySection.Roles">
            <summary>
            All roles
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SecuritySection.BasicUsers">
            <summary>
            All basic users
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SecuritySection.ClientLogOnSupported(VideoOS.Management.Common.ClientType)">
            <summary>
            Determine if logged in user have access to specified client application
            </summary>
            <param name="clientType">The client application type</param>
            <returns>true if user have access</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SecuritySection.ClientLogOnSupported(VideoOS.Management.Common.ClientType,VideoOS.Management.VmoClient.BasicUser)">
            <summary>
            Determine if specified basic user have access to specified client application
            </summary>
            <param name="clientType">The client application type</param>
            <param name="basicUser">The basic user</param>
            <returns>true if user have access</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">If specified user is not logged in user and logged in user doesn't have administrative security permission.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UserNotExistsException">The user does not exists on the server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SecuritySection.ClientLogOnSupported(VideoOS.Management.Common.ClientType,System.String)">
            <summary>
            Determine if specified user (Domain or Basic) have access to specified client application
            </summary>
            <param name="clientType">The client application type</param>
            <param name="userAccountName">The user account name on form DOMAIN\Username - eg. [BASIC]\Test</param>
            <returns>true if user have access</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">If specified user is not logged in user and logged in user doesn't have administrative security permission.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UserNotExistsException">The user does not exists on the server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>
            Domain have to be specified when specifying Windows users from other domains than the domain the Management
            Server runs under. If the Management Server runs under WORKGROUP the user have to be specified as a
            machine user on the Management Server.br/>
            When specifying a basic user, a string similar to the return value of the <see cref="P:VideoOS.Management.VmoClient.BasicUser.DomainAccountName"/>
            property of the <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> class should be used.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SecuritySection.HasOverallPermission(System.Guid,System.String)">
            <summary>
            Queries whether the current authenticated user has the specified overall permission.
            </summary>
            <param name="namespaceId">One of the values from <see cref="T:VideoOS.Management.Common.SecurityNamespaceIdentifier"/></param>
            <param name="actionId">
            One of the actions specified in
             - <see cref="T:VideoOS.Management.Common.ManagementServerSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.RecordingServerSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.FailoverSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.HardwareSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.CameraSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.MetadataSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.MicrophoneSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.SpeakerSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.InputSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.OutputSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.MatrixSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.RuleSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.RemoteStorageDeviceSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.SmartWallSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.MarkedDataGenericSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.SystemMonitorSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.UserDefinedEventSecurityAction"/>
             - <see cref="T:VideoOS.Management.Common.ViewGroupSecurityAction"/>
            </param>
            <returns><c>true</c> if the user has te permission; otherwise <c>false</c>.</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.NotSupportedException">The value of <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is less than <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v12_1"/></exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroupSection.CameraDeviceGroups">
            <summary>
            All top camera device groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroupSection.MicrophoneDeviceGroups">
            <summary>
            All top microphone device groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroupSection.MetadataDeviceGroups">
            <summary>
            All top metadata device groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroupSection.SpeakerDeviceGroups">
            <summary>
            All top speaker device groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroupSection.OutputDeviceGroups">
            <summary>
            All top output device groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroupSection.InputDeviceGroups">
            <summary>
            All top input device groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServerPermissionSet.Connect">
            <summary>
            The ability to connect to server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServerPermissionSet.Read">
            <summary>
            The ability to read server-level information
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServerPermissionSet.Write">
            <summary>
            The ability to change server-level information
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServerPermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ManagementServerPermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServerPermissionSet.#ctor(VideoOS.Management.VmoClient.ManagementServerPermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ManagementServerPermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.ManagementServerPermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServerPermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue">
            <summary>
            The ManagementServerPermissionSetValue enumeration is a list of constant values that
            specify all the Management Server permissions.
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue.Connect">
            <summary>
            The ability to connect to server
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue.Read">
            <summary>
            The ability to read server-level information
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue.Edit">
            <summary>
            The ability to change server-level information
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue.AdministrateSecurity">
            <summary>
            The ability to change security on the management server object
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue.StatusApi">
            <summary>
            The ability to access Status API on all recording servers
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue.AdministrateFederatedSiteHierarchy">
            <summary>
            The ability to administer federated site hierarchy
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue.BackupConfiguration">
            <summary>
            The ability to backup configuration
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServerPermissionSetValue.AuthorizeUser">
            <summary>
            The ability to authroize users
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.Role">
            <summary>
            The <b>Role</b> object represents a role.
            </summary>
            <remarks>
            A role can be used to login on the Management Server.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.String)">
            <summary>
            Constructs a Role.
            </summary>
            <param name="managementServer">The Management Server where the role should be created.</param>
            <param name="name">The name of the role.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> is a empty string</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a Role.
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the role should be created.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.String)">
            <summary>
            Constructs a Role - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="name">The name of the role.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> is a empty string</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a Role - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create roles based on a generic object
            </summary>
            <param name="internalId">Id of the role.</param>
            <param name="objectProperties">Role properties.</param>
            <param name="relations">Role relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new role is created, false when an existing role is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.RoleType">
            <summary>
            Gets the RoleType the role.
            </summary>
            <value>The roletype of the role.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.DomainAccountName">
            <summary>
            Gets the role name prepended by the predefined [VideoOS] domain.
            </summary>
            <value>
            A string containing the '[VideoOS]\role name'.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.DualAuthorizationRequired">
            <summary>
            Gets the dual authorization required.
            </summary>
            <value>true if dual authorization is required for this role</value>
            <exception cref="T:System.NotSupportedException">This property is supported from version 7.0 up</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.ShowPtzReservedNameAsAnonymous">
            <summary>
            Gets the Show PTZ reserved name as anonymous.
            </summary>
            <value>true if the name should be shown as anonynmous</value>
            <exception cref="T:System.NotSupportedException">This property is supported from version 10.0 up</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.AllowMobileClientLogOn">
            <summary>
            Allows users of this role to log on with mobile clients
            </summary>
            <value>true if users are allowed to login</value>
            <exception cref="T:System.NotSupportedException">This property is supported from version 10.2 up</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.AllowSmartClientLogOn">
            <summary>
            Allows users of this role to log on with the Smart Client
            </summary>
            <value>true if users are allowed to login</value>
            <exception cref="T:System.NotSupportedException">This property is supported from version 10.2 up</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.AllowWebClientLogOn">
            <summary>
            Allows users of this role to log on with web clients
            </summary>
            <value>true if users are allowed to login</value>
            <exception cref="T:System.NotSupportedException">This property is supported from version 11.0 up</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.AttachedManagementClientProfile">
            <summary>
            Get the attached Management Client Profile for role
            </summary>
            <returns>The Management Client Profile</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.AttachedSmartClientProfile">
            <summary>
            Get the attached Smart Client Profile for role
            </summary>
            <returns>The Smart Client Profile</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            This expection is thrown if the role has been removed from the server.<br/>
            - or -<br/>
            This expection is thrown in case of communication erros or if an unknown error occurs.
            </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.Create">
            <summary>
            Creates the role
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.RoleCreationException">This expection is thrown if a role with same username already exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.Update">
            <summary>
            Updates the role
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RoleUpdateException">This expection is thrown if the role has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.Delete">
            <summary>
            Deletes the role
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingRoleException">This expection is thrown if the specified role does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.CopyRole(System.String,System.String)">
             <summary>
             Create a copy of the role.
            
             This includes copy of all permissions, members, attached Management Client Profile, attached Smart Client Profile and retention options
             </summary>
             <exception cref="T:System.ArgumentNullException">The <paramref name="roleName"/> is a null reference</exception>
             <exception cref="T:System.ArgumentException">The <paramref name="roleName"/> is a empty string</exception>
             <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
             <exception cref="T:VideoOS.Management.VmoClient.RoleCreationException">This expection is thrown if a role with same username already exist.</exception>
             <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
             <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.AddMember(VideoOS.Management.VmoClient.BasicUser)">
            <summary>
            Add a BasicUserp to the current role.
            </summary>
            <param name="basicUser">
            A <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> value that specifies a basic user
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="basicUser"/> is a null reference</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">The <paramref name="basicUser"/> is not created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UserNotExistsException">The user does not exists on the server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.AddMemberAlreadyMemberException">The user is already member of the role</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.AddMember(System.String)">
            <summary>
            Add a user or group to the current role.
            </summary>
            <param name="domainAccountName">
            A <see cref="T:System.String"/> value that specifies a valid name
            representing the user or group.
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="domainAccountName"/> is a null reference</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="domainAccountName"/> is a empty string</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UserNotExistsException">The user does not exists on the server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.AddMemberAlreadyMemberException">The user is already member of the role</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>
            Domain have to be specified when adding Windows users from other domains than the domain the Management
            Server runs under. If the Management Server runs under WORKGROUP the user have to be specified as a
            machine user on the Management Server.br/>
            When adding a basic user as member, a string similar to the return value of the <see cref="P:VideoOS.Management.VmoClient.BasicUser.DomainAccountName"/>
            property of the <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> class should be used.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.RemoveMember(VideoOS.Management.VmoClient.BasicUser)">
            <summary>
            Remove a basic user from a role
            </summary>
            <param name="basicUser">
            A <see cref="T:VideoOS.Management.VmoClient.BasicUser"/> value that specifies a basic user
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="basicUser"/> is a null reference</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">The <paramref name="basicUser"/> is not created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveRoleMemberNotMemberException">Thrown if the user is not a member of the role</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.RemoveMember(System.String)">
            <summary>
            Remove a user or group from the current role.
            </summary>
            <param name="domainAccountName">A <see cref="T:System.String"/> specifying a user or group.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="domainAccountName"/> is a null reference</exception>
            <exception cref="T:System.ArgumentException">The domainAccountName is a empty string</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveRoleMemberNotMemberException">Thrown if the user is not a member of the role</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Role.EnumMembers">
            <summary>
            Returns a list of users and groups that are members of the role.
            </summary>
            <returns>
            An array of <see cref="T:VideoOS.Management.Common.Identity"/> objects that contains information about
            the users and groups.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Role.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on roles.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.CustomPropertyCollection">
            <summary>
            The CustomPropertyCollection contains custom properties on a VMO object.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AxisOneClickCamera">
            <summary>
            The <b>AxisOneClickCamera</b> object represents an Axis one click camera.
            </summary>
            <remarks>
            An Axis one click camera is registered at the Axis tunnel server and is used to show video from within a firewall.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisOneClickCamera.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Int32)">
            <summary>
            Constructs an AxisOneClickCamera - used by unittest.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="hostingServerId">The id of the hosting server to which this instance is associated.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisOneClickCamera.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create AxisOneClickCamera based on a generic object
            </summary>
            <param name="internalId">Id of the AxisOneClickCamera.</param>
            <param name="objectProperties">AxisOneClickCamera properties.</param>
            <param name="relations">AxisOneClickCamera relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new AxisOneClickCamera is created, false when an existing AxisOneCLickCamera is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AxisOneClickCamera.OwnerAuthenticationKey">
            <summary>
            Set the Owner Authentication Key. This need to following a specified XML structure.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisOneClickCamera.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisOneClickCamera.Create">
            <summary>
            Creates the AxisOneClickCamera
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.HostedHardwareCreationException">This expection is thrown if a Axis one click camera with same name already exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisOneClickCamera.Update">
            <summary>
            Updates the Axis one click camera
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.HostedHardwareUpdateException">This expection is thrown if the name has been changed to the same name of an existing Axis one click camera.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisOneClickCamera.Delete">
            <summary>
            Deletes the user defined event
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.HostedHardwareDeleteNotExistException">This expection is thrown if the specified Axis one click camera does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AxisOneClickCamera.AxisTunnelServer">
            <summary>
            The Axis Tunnel Server the camera is attached to
            </summary>
            <value>The Axis Tunnel Server.</value>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AxisTunnelServer">
            <summary>
            The <b>AxisTunnelServer</b> object represents a AxisTunnelServer.
            The AxisTunnelServer inherits from the HostingServer class that contains the generic hosting server information.
            </summary>
            <remarks>
            A AxisTunnelServer is a local recorder installed at XPCO.
            It contains registered AxisOneClick cameras and makes recordings from these cameras. The cameras are typically placed behind a firewall.
            The AxisTunnelServer is registered at the Axis Dispatch Server
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisTunnelServer.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a AxisTunnelServer with a custom id - used by unittest.
            </summary>
            <param name="managementServer">The Management Server where the event could be created.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisTunnelServer.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a AxisTunnelServer - used by unittest
            </summary>
            <param name="repositories">The repository containing objects of type AxisTunnelServer.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisTunnelServer.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create AxisTunnelServer based on a generic object
            </summary>
            <param name="internalId">Id of the AxisTunnelServer.</param>
            <param name="objectProperties">AxisTunnelServer properties.</param>
            <param name="relations">AxisTunnelServer relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new AxisTunnelServer is created, false when an existing AxisTunnelServer is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisTunnelServer.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisTunnelServer.Create">
            <summary>
            Creates the AxisTunnelServer
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.HostingServerCreationException">This expection is thrown if a tunnel server with same name already exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisTunnelServer.Update">
            <summary>
            Updates the AxisTunnelServer
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.HostingServerUpdateException">This expection is thrown if the name has been changed to the same name of an existing tunnel server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AxisTunnelServer.Delete">
            <summary>
            Deletes the AxisTunnelServer
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.HostingServerDeleteNotExistException">This expection is thrown if the specified tunnel server does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.HostingServer">
            <summary>
            The <b>HostingServer</b> object represents a generic hosting server. This class cannot be instantiated. You can only inherit from the class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostingServer.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostingServer.Description">
            <summary>
            Gets or sets the description
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the description.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostingServer.LastModified">
            <summary>
            Gets the latest time the hosting server was modified
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> value that specifies the last modified time.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostingServer.CreatedDate">
            <summary>
            Gets the time the hosting server was created
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> value that specifies the creation time.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostingServer.UserName">
            <summary>
            Gets or sets the user name for accessing the hosting server.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the user name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostingServer.Password">
            <summary>
            Gets or sets the password for accessing the hosting server.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the password.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostingServer.InternalAddress">
            <summary>
            Gets or sets the ip address used by the system to call the hosting server.
            </summary>
            <value>
            A <see cref="T:System.Uri"/> value that specifies the internal ip address.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostingServer.ExternalAddress">
            <summary>
            Gets or sets the ip address used by the AxisOneClickCameras to call the hosting server.
            </summary>
            <value>
            A <see cref="T:System.Uri"/> value that specifies the external ip address.
            </value>
        </member>
        <member name="T:VideoOS.Management.VmoClient.HostedHardware">
            <summary>
            The <b>UserDefinedEvent</b> object represents a custom user-defined event.
            </summary>
            <remarks>
            A user-defined event can be used to invoke rules to perform various tasks in the system.
            To trigger the event the web-service interface provided can be used.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HostedHardware.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevice.EnumPermissions">
            <summary>
            Gets all permissions for this <see cref="T:VideoOS.Management.VmoClient.OutputDevice"/> instance.
            </summary>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.OutputDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevice.EnumPermissions(VideoOS.Management.VmoClient.OutputDevicePermissionSet)">
            <summary>
            Gets the specified permissions for this <see cref="T:VideoOS.Management.VmoClient.OutputDevice"/> instance.
            </summary>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.OutputDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevice.EnumPermissions(System.String)">
            <summary>
            Gets the permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.OutputDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.OutputDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevice.EnumPermissions(System.String,VideoOS.Management.VmoClient.OutputDevicePermissionSet)">
            <summary>
            Gets the specified permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.OutputDevice"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.OutputDevice"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevice.Allow(VideoOS.Management.VmoClient.OutputDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Allows the specified permissions to a <see cref="T:VideoOS.Management.VmoClient.Role"/> instance.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevice.Allow(VideoOS.Management.VmoClient.OutputDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Allows the specified permissions for a number of roles.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevice.Revoke(VideoOS.Management.VmoClient.OutputDevicePermissionSet,VideoOS.Management.VmoClient.Role)">
            <summary>
            Revokes the specified permissions for a single identity.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="role">An <see cref="T:VideoOS.Management.VmoClient.Role"/> instance that are to be given the permissions.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevice.Revoke(VideoOS.Management.VmoClient.OutputDevicePermissionSet,VideoOS.Management.VmoClient.Role[])">
            <summary>
            Revokes the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="roles">An array of <see cref="T:VideoOS.Management.VmoClient.Role"/> instances that are to be given the permissions.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServerInformation.DiskUsage">
            <summary>
            Gets the disk usage on the recording server.
            </summary>
            <value>Array of <see cref="T:VideoOS.Management.Common.RecordingServerDiskUsage"/>.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServerGroup.#ctor(VideoOS.Management.VmoClient.FailoverServerGroup,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.FailoverServerGroup"/> as child group of an already existing view group.
            </summary>
            <param name="parentGroup">The failover server group that are parent for this group</param>
            <param name="name">The name of the group</param>
            <exception cref="T:System.ArgumentNullException">if parentGroup is null or name is null or empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServerGroup.#ctor(VideoOS.Management.VmoClient.FailoverServerGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.FailoverServerGroup"/> as child group of an already existing view group.
            </summary>
            <param name="parentGroup">The failover server group that are parent for this group</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServerGroup.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.FailoverServerGroup"/> class as a top-level group.
            </summary>
            <param name="managementServer">Specifying a management server makes this failover server group a top group</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServerGroup.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.FailoverServerGroup"/> class - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.FailoverServerGroup.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create failover server group based on a generic object
            </summary>
            <param name="internalId">Id of the FailoverServerGroup.</param>
            <param name="objectProperties">FailoverServerGroup properties.</param>
            <param name="relations">FailoverServerGroup relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new FailoverServerGroup is created, false when an existing FailoverServerGroup is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServerGroup.ParentFailoverServerGroup">
            <summary>
            Get the group the object is member of.
            If null, the failover server group not under a group but under the ManagementServer.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServerGroup.ManagementServer">
            <summary>
            The Management Server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServerGroup.FailoverServers">
            <summary>
            Contains the failover server under this failover server group
            </summary>
            <value>The public view group.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.FailoverServerGroup.FailoverServerGroups">
            <summary>
            Contains the failover server groups under this failover server group
            </summary>
            <value>The public view group.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObjectGroup.#ctor(System.Guid,VideoOS.Management.VmoClient.MIPObjectGroup,System.String,System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MIPObjectGroup" /> as child group of an already existing group.
            </summary>
            <param name="id">The identifier.</param>
            <param name="parentGroup">The MIP object group that are parent for this group</param>
            <param name="name">The name of the group</param>
            <param name="kind">The kind.</param>
            <param name="pluginId">The plugin identifier.</param>
            <exception cref="T:System.ArgumentNullException">if parentGroup is null or name is null or empty</exception>
            <exception cref="T:System.ArgumentException">kind cannot be empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObjectGroup.#ctor(System.Guid,VideoOS.Management.VmoClient.ManagementServer,System.String,System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MIPObjectGroup" /> class as a top-level group.
            </summary>
            <param name="id">The identifier.</param>
            <param name="managementServer">Specifying a management server makes this group a top group</param>
            <param name="name">The name.</param>
            <param name="kind">The kind.</param>
            <param name="pluginId">The plugin identifier.</param>
            <exception cref="T:System.ArgumentNullException">managementServer;cannot be null</exception>
            <exception cref="T:System.ArgumentException">kind cannot be empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObjectGroup.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MIPObjectGroup"/> class - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MIPObjectGroup.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create MIP object group based on a generic object
            </summary>
            <param name="internalId">Id of the MIPObjectGroup.</param>
            <param name="objectProperties">MIPObjectGroup properties.</param>
            <param name="relations">MIPObjectGroup relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new MIPObjectGroup is created, false when an existing MIPObjectGroup is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObjectGroup.Kind">
            <summary>
            Get the kind.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObjectGroup.PluginId">
            <summary>
            Get the plugin id.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObjectGroup.CustomData">
            <summary>
            Get the custom data.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObjectGroup.ParentMIPObjectGroup">
            <summary>
            Get the group the object is member of.
            This can be null if the current group is the top group
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObjectGroup.ManagementServer">
            <summary>
            The Management Server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObjectGroup.MIPObjects">
            <summary>
            Contains the MIP objects under this server group
            </summary>
            <value>The MIP objects.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MIPObjectGroup.MIPObjectGroups">
            <summary>
            Contains the MIP object groups under this server group
            </summary>
            <value>The MIP object groups.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ServerGroup.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ServerGroup.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ServerGroup.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ServerGroup.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ServerGroup.ParentServerGroupId">
            <summary>
            Gets or sets the parent server group ID
            </summary>
            <value>The server group ID of the parent.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ServerGroup.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ServerGroup.Create">
            <summary>
            Creates the ServerGroup
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.GroupCreationException">An error occurred creating the server group. A server group with the name {0} already exists under the group {1}.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ServerGroupNoGroupException">An error occurred creating the server group. The parent server group does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ServerGroupMaxDepthExceededException">An error occurred creating the server group. The maximum group depth of 12 levels has been exceeded.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ServerGroup.Update">
            <summary>
            Updates the ServerGroup
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ServerGroupUpdateException">An error occurred updating the server group. The server group does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.GroupRenameException">An error occurred updating the server group. A server group with the name {0} already exists.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ServerGroup.Delete">
            <summary>
            Deletes the ServerGroup
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingGroupException">An error occurred removing the server group. The server group does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ServerGroupRemovePrivateException">You cannot remove the &apos;&apos;Private&apos;&apos; view group.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ServerGroupDeleteHasMembersException">An error occurred removing the server group. The server group or one of the descendants has members.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ServerGroupDeletePrimaryException">An error occurred removing the server group. The uppermost server group cannot be removed.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ServerGroup.AddNotification(VideoOS.Management.VmoClient.VmoObject)">
             <summary>
             This method potentially adds a child object to one of this object's child collections
             This is made by giving a notification to the parent (this) which will trigger a refresh of this parent object itself
             and its collections including the collection having the child object.
            
             Furthermore all objects having a server group as parent: Public View Group, Private View Group, View Layout group, Failover group and View MUST
             use the property "ServerGroupPropertyName.ParentServerGroupId" for a specification of their parent group.
             </summary>
             <param name="obj">The object (public view group, private view group, view layout group, failover group, view) that shall be added to the parent collection</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivateViewGroup.#ctor(VideoOS.Management.VmoClient.PrivateViewGroup,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PrivateViewGroup"/> as child group of an already existing view group.
            </summary>
            <param name="parentGroup"></param>
            <param name="name"></param>
            <param name="id"></param>
            <exception cref="T:System.ArgumentNullException">if parentGroup is null or name is null or empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivateViewGroup.#ctor(VideoOS.Management.VmoClient.PrivateViewGroup,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PrivateViewGroup"/> as child group of an already existing view group.
            </summary>
            <param name="parentGroup"></param>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException">if parentGroup is null or name is null or empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivateViewGroup.#ctor(VideoOS.Management.VmoClient.PrivateViewGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PrivateViewGroup"/> as child group of an already existing view group.
            </summary>
            <param name="parentGroup"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivateViewGroup.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PrivateViewGroup"/> as child group of an already existing view group.
            </summary>
            <param name="managementServer"></param>
            <param name="name"></param>
            <param name="id"></param>
            <exception cref="T:System.ArgumentNullException">if parentGroup is null or name is null or empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivateViewGroup.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PrivateViewGroup"/> as child group of an already existing view group.
            </summary>
            <param name="managementServer"></param>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException">if parentGroup is null or name is null or empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivateViewGroup.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PrivateViewGroup"/> class as a top-level group.
            </summary>
            <param name="managementServer"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivateViewGroup.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PrivateViewGroup"/> class - required for testability.
            </summary>
            <param name="repositories"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PrivateViewGroup.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create ViewGroup based on a generic object
            </summary>
            <param name="internalId">Id of the ViewGroup.</param>
            <param name="objectProperties">ViewGroup properties.</param>
            <param name="relations">ViewGroup relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new ViewGroup is created, false when an existing ViewGroup is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivateViewGroup.Parent">
            <summary>
            Get the parent of this object.
            If Parent is null, the ManagementServer is the Parent, otherwise the PrivateViewGroup parent is returned.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivateViewGroup.Views">
            <summary>
            Gets the views.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PrivateViewGroup.PrivateViewGroups">
            <summary>
            Gets the private view groups.
            </summary>
            <value>The private view group.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.#ctor(VideoOS.Management.VmoClient.PublicViewGroup,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/> as child group of an already existing view group.
            </summary>
            <param name="parentGroup"></param>
            <param name="name"></param>
            <param name="id"></param>
            <exception cref="T:System.ArgumentNullException">if parentGroup is null or name is null or empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.#ctor(VideoOS.Management.VmoClient.PublicViewGroup,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/> as child group of an already existing view group.
            </summary>
            <param name="parentGroup"></param>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException">if parentGroup is null or name is null or empty</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.#ctor(VideoOS.Management.VmoClient.PublicViewGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/> as child group of an already existing view group.
            </summary>
            <param name="parentGroup"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/> class as a top-level group.
            </summary>
            <param name="managementServer"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/> class - required for testability.
            </summary>
            <param name="repositories"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create ViewGroup based on a generic object
            </summary>
            <param name="internalId">Id of the ViewGroup.</param>
            <param name="objectProperties">ViewGroup properties.</param>
            <param name="relations">ViewGroup relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new ViewGroup is created, false when an existing ViewGroup is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PublicViewGroup.Parent">
            <summary>
            Get the parent of this object.
            If Parent is null, the ManagementServer is the Parent, otherwise the PublicViewGroup parent is returned.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PublicViewGroup.Views">
            <summary>
            Gets the views.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PublicViewGroup.PublicViewGroups">
            <summary>
            Gets the public view groups.
            </summary>
            <value>The public view group.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.EnumPermissions">
            <summary>
            Enums the permissions.
            </summary>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.PublicViewGroupPermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.EnumPermissions(VideoOS.Management.VmoClient.PublicViewGroupPermissionSet)">
            <summary>
            Enums the permissions.
            </summary>
            <param name="permissions">The permissions.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.PublicViewGroupPermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.EnumPermissions(System.String)">
            <summary>
            Enums the permissions.
            </summary>
            <param name="identity">The identity.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.PublicViewGroupPermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.EnumPermissions(System.String,VideoOS.Management.VmoClient.PublicViewGroupPermissionSet)">
            <summary>
            Enums the permissions.
            </summary>
            <param name="identity">The identity.</param>
            <param name="permissions">The permissions.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.PublicViewGroupPermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroup"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.Allow(VideoOS.Management.VmoClient.PublicViewGroupPermissionSet,System.String)">
            <summary>
            Allows the specified permission.
            </summary>
            <param name="permission">The permission.</param>
            <param name="identity">The identity.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.Allow(VideoOS.Management.VmoClient.PublicViewGroupPermissionSet,System.String[])">
            <summary>
            Allows the specified permission.
            </summary>
            <param name="permission">The permission.</param>
            <param name="identities">The identities.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.Deny(VideoOS.Management.VmoClient.PublicViewGroupPermissionSet,System.String)">
            <summary>
            Denies the specified permission.
            </summary>
            <param name="permission">The permission.</param>
            <param name="identity">The identity.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.Deny(VideoOS.Management.VmoClient.PublicViewGroupPermissionSet,System.String[])">
            <summary>
            Denies the specified permission.
            </summary>
            <param name="permission">The permission.</param>
            <param name="identities">The identities.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.Revoke(VideoOS.Management.VmoClient.PublicViewGroupPermissionSet,System.String)">
            <summary>
            Revokes the specified permission.
            </summary>
            <param name="permission">The permission.</param>
            <param name="identity">The identity.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroup.Revoke(VideoOS.Management.VmoClient.PublicViewGroupPermissionSet,System.String[])">
            <summary>
            Revokes the specified permission.
            </summary>
            <param name="permission">The permission.</param>
            <param name="identities">The identities.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewLayoutGroup.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ViewLayoutGroup"/> class as a top-level group.
            </summary>
            <param name="managementServer"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewLayoutGroup.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ViewLayoutGroup"/> class - required for testability.
            </summary>
            <param name="repositories"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewLayoutGroup.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create ViewLayoutGroup based on a generic object
            </summary>
            <param name="internalId">Id of the ViewGroup.</param>
            <param name="objectProperties">ViewGroup properties.</param>
            <param name="relations">ViewGroup relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new ViewGroup is created, false when an existing ViewGroup is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ViewLayoutGroup.ViewLayouts">
            <summary>
            Gets the view layouts.
            </summary>
            <value>The view layouts.</value>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ActivateLicenseTask">
            <summary>
            The <see cref="T:VideoOS.Management.VmoClient.ActivateLicenseTask"/> class represents the operation of activating a license.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a <see cref="T:VideoOS.Management.VmoClient.ManagementServer"/> object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ActivateLicenseTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ActivateLicenseTask"/> class.
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ActivateLicenseTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ActivateLicenseTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to Management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ActivateLicenseTask.ErrorResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ActivateLicenseTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.String,System.String)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="userName">User name used for activation.</param>
            <param name="password">Password used for activation</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.ActivateLicenseTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.ActivateLicenseTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.CameraCredentialCollection"/> class.
            </summary>
        </member>
        <member name="E:VideoOS.Management.VmoClient.CameraCredentialCollection.CollectionChangedEvent">
            <summary>
            Event that is raised whenever the collection or elements in the collection get changed
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraCredentialCollection.Count">
            <summary>
            Gets the number of elements actually contained in the CameraCredentialCollection.
            </summary>
            <returns>The number of elements actually contained in the CameraCredentialCollection</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.Add(VideoOS.Management.VmoClient.CameraCredential)">
            <summary>
            Adds an CameraCredential to the end of the CameraCredentialCollection.
            </summary>
            <param name="cameraCredential">
             The CameraCredential to be added to the end of the CameraCredentialCollection.
             The CameraCredential will only be added if it isn't null and it isn't in the collection already.
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.Remove(VideoOS.Management.VmoClient.CameraCredential)">
            <summary>
            Removes the first occurrence of a specific object from the CameraCredentialCollection.
            </summary>
            <param name="cameraCredential">The CameraCredential to remove from the CameraCredentialCollection.</param>
            <returns>
            true if item is successfully removed; otherwise, false. This method also
            returns false if item was not found in the CameraCredentialCollection.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.Clear">
            <summary>
            Removes all elements from the CameraCredentialCollection.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraCredentialCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is equal to or greater than AddressCollection.Count.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the AddressCollection.
            </summary>
            <returns>A AddressCollection.Enumerator for the AddressCollection.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.Clone">
            <summary>
            Returns an clone of the collection and all the elements in the collection
            </summary>
            <returns>A new CameraCredentialCollection containing cloned elements</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.IsEqual(VideoOS.Management.VmoClient.CameraCredentialCollection)">
            <summary>
            Specifies if collection is equal to another CameraCredentialCollection.
            </summary>
            <param name="cameraCredentialCollectionB">The second instance of the CameraCredentialCollection.</param>
            <returns>
            true if the two collections are equal; otherwise, false. This method also
            returns false if addressCollectionB is null.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.TryGetValue(System.String,System.String,VideoOS.Management.VmoClient.CameraCredential@)">
            <summary>
            Gets the CameraCredential associated with the specified user name and password.
            </summary>
            <param name="userName">The user name of the CameraCredential to get.</param>
            <param name="password">The password of the CameraCredential to get.</param>
            <param name="cameraCredential">
            When this method returns, contains the CameraCredential associated with the specified
            user name, if the user name is found; otherwise, null. This parameter is passed uninitialized.
            </param>
            <returns>true if the CameraCredentialCollection contains an CameraCredential with the specified user name; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">userName is null.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.ToServerCameraCredentials">
            <summary>
            Convert the collection to a ServerCameraCredential array
            </summary>
            <returns>Array of ServerCameraCredential</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraCredentialCollection.ToServerCameraCredentialXml">
            <summary>
            Convert the collection to a ServerCameraCredential Xml representation
            </summary>
            <returns>The CameraCredential xml</returns>
        </member>
        <member name="E:VideoOS.Management.VmoClient.CameraCredential.ChangedEvent">
            <summary>
            Event that comes when you get deleted. Either by direct delete or by delete of related objects.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask">
            <summary>
            The <see cref="T:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask"/> class represents the operation of authorizing a recording server.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a <see cref="T:VideoOS.Management.VmoClient.RecordingServer"/> object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask"/> class.
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask.RecordingServerName">
            <summary>
            Gets the name of the <see cref="T:VideoOS.Management.VmoClient.RecordingServer"/> to which the hardware is being added.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask.RecordingServerName"/>
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask.ErrorResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingServerId">Id of the recording server to autorize.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AsyncTaskStatus">
            <summary>
            Possible states of a task
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AsyncStatus">
            <summary>
            The <b>AsyncStatus</b> represents the status of an <see cref="T:VideoOS.Management.VmoClient.AsyncTask"/>.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncStatus.Details">
            <summary>
            Gets a text related to the current status of the task.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncStatus.Status">
            <summary>
            Gets the status of the task.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AsyncTask">
            <summary>
            The <b>AsyncTask</b> represents the abstract base class of a specialized task.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AsyncTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.Target">
            <summary>
            Gets the ID of the target of this this task. This is can be the ID of a service or server like a recording server.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.PercentCompleted">
            <summary>
            Gets the amount of percent the task has completed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.StartTime">
            <summary>
            Gets the date and time of when the task was started.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.EndTime">
            <summary>
            Gets the date and time of when the task has ended. If the task hasn't EndTime is equal to <see cref="F:System.DateTime.MaxValue"/>.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails">
            <summary>
            Gets a text related to the current status of the task.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.Status">
            <summary>
            Gets the status of the task.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AsyncTask.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            If the object no longer exists on the server, the status til be set to <see cref="T:VideoOS.Management.VmoClient.AsyncTaskStatus">Suceeded</see>
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AsyncTask.Cleanup">
            <summary>
            Clean up the task if it is completed.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.TaskCleanupNotAllowedException">The task could not be cleaned up because the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.Status"/> was not <see cref="F:VideoOS.Management.VmoClient.AsyncTaskStatus.Succeeded"/>, <see cref="F:VideoOS.Management.VmoClient.AsyncTaskStatus.Failed"/> or <see cref="F:VideoOS.Management.VmoClient.AsyncTaskStatus.Stopped"/></exception>
            <remarks>This function is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AsyncTask.ErrorResultInstance">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.IAsyncTask.Name">
            <summary>
            The display name of the task
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.IAsyncTask.EntityName">
            <summary>
            The display name of the entity that the task operates on
            For a TruncateDeviceStorage the entity name would be the name of the device
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.IAsyncTask.Status">
            <summary>
            Gets the status of the task.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.IAsyncTask.Cleanup">
            <summary>
            Clean up the task if it is completed.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.TaskCleanupNotAllowedException">The task could not be cleaned up because the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.Status"/> was not <see cref="F:VideoOS.Management.VmoClient.AsyncTaskStatus.Succeeded"/>, <see cref="F:VideoOS.Management.VmoClient.AsyncTaskStatus.Failed"/> or <see cref="F:VideoOS.Management.VmoClient.AsyncTaskStatus.Stopped"/></exception>
            <remarks>This function is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.IAsyncTask.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            If the object no longer exists on the server, the status til be set to <see cref="T:VideoOS.Management.VmoClient.AsyncTaskStatus">Suceeded</see>
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ArchivingTask">
            <summary>
            The <b>ArchivingTask</b> class represents an active archiving operation on the recording server.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of a recording server initiated archiving operation.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchivingTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchivingTask.RecordingServer">
            <summary>
            Gets the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchivingTask.SourceStorageId">
            <summary>
            Gets the id of the source storage of the archiving operation.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchivingTask.TargetStorageId">
            <summary>
            Gets the id of the target storage of the archiving operation.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchivingTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchivingTask.EntityName">
            <summary>
            Gets the display name of the entity that this task operates on. In this case including both names of the RecordingStorage and the target ArchiveStorage.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AddHardwareTask">
            <summary>
            The <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> class represents the operation of adding a specific hardware unit to the configuration asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a <see cref="T:VideoOS.Management.VmoClient.RecordingServer"/> object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddHardwareTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> class.
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.RecordingServerName">
            <summary>
            Gets the name of the <see cref="T:VideoOS.Management.VmoClient.RecordingServer"/> to which the hardware is being added.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.Address">
            <summary>
            Gets the address of the hardware being added.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.UserName">
            <summary>
            Gets the user name used for communicating with the hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.DriverNumber">
            <summary>
            Gets the driver number as returned by <see cref="P:VideoOS.Management.VmoClient.HardwareDriver.DriverNumber"/> used for adding the hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.DefinitionXml">
            <summary>
            Gets the hardware definition used for adding the hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.AddHardwareTask.RecordingServerName"/>
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.ErrorResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddHardwareTask.SuccessResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.AddHardwareTaskResult"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Succeeded'</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddHardwareTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Uri,System.String,System.String,System.Int32)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingServerId">Id of the recording server to which the hardware is being added.</param>
            <param name="address">The address of the hardware to add.</param>
            <param name="userName">The user name to use for communicating with the hardware.</param>
            <param name="password">The password to use for communicating with the hardware.</param>
            <param name="driverNumber">The driver number as returned by <see cref="P:VideoOS.Management.VmoClient.HardwareDriver.DriverNumber"/> to use for adding the hardware.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddHardwareTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Uri,System.String,System.String,System.String)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingServerId">Id of the recording server to which the hardware is being added.</param>
            <param name="address">The address of the hardware to add.</param>
            <param name="userName">The user name to use for communicating with the hardware.</param>
            <param name="password">The password to use for communicating with the hardware.</param>
            <param name="definitionXml">The hardware definition xml.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask">
            <summary>
            The <b>ChangeHardwarePasswordTask</b> class represents the operation of changing the hardware password asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a Device object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask.HardwareName">
            <summary>
            Gets the name of the hardware device on which password is changed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask.Name">
            <inheritdoc />
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask.EntityName">
            <inheritdoc />
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask.ErrorResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask.SuccessResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.ChangeHardwarePasswordTaskResult"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Succeeded'</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.String,System.String)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="hardwareId">Id of the hardware on which password is changed.</param>
            <param name="username">Hardware username.</param>
            <param name="password">Hardware password</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.ChangeHardwarePasswordTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This exception is thrown in case of communication errors or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.DeleteHardwareTask">
            <summary>
            The <b>DeleteHardwareTask</b> class represents the operation of deleting a hardware asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a Hardware object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.DeleteHardwareTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteHardwareTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteHardwareTask.HardwareId">
            <summary>
            Gets the ID of the hardware that is begin deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteHardwareTask.HardwareName">
            <summary>
            Gets the name of the storage that is being deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteHardwareTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteHardwareTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.DeleteHardwareTask.HardwareName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.DeleteHardwareTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="hardwareId">Id of the hardware to delete.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.DeleteHardwareTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.HardwareScanExpressTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.HardwareScanExpressTask"/> class.
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanExpressTask.UseDefaultCredentials">
            <summary>
            Gets if the scan is using default credentials when scanning for hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanExpressTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanExpressTask.RecordingServerName">
            <summary>
            Gets the name of the <see cref="T:VideoOS.Management.VmoClient.RecordingServer"/> that performs the hardware scan.
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.HardwareScanExpressTask._cameraCredentials">
            <summary>
            CameraCredentials descripes what user name and password that should be used when performing the hardware express scan.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanExpressTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.HardwareScanExpressTask.RecordingServerName"/>
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanExpressTask.ErrorResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanExpressTask.SuccessResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.HardwareScanExpressTaskResult"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Succeeded'</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.HardwareScanExpressTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,VideoOS.Management.VmoClient.CameraCredentialCollection,System.Boolean)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingServerId">Id of the recording server performing the hardware scan.</param>
            <param name="cameraCredentials">A collection of user name and password to use for communicating with hardware on the network.</param>
            <param name="useDefaultCredentials">Is default credentials used when scanning.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.HardwareScanExpressTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.HardwareScanExpressTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v11_1"/> or above.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.UpdateHardwareTask">
            <summary>
            The <b>UpdateDeviceTask</b> class represents the operation of updating the hardware and device information from the actual hardware.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UpdateHardwareTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UpdateHardwareTask.HardwareId">
            <summary>
            Gets the id of the hardware device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UpdateHardwareTask.HardwareName">
            <summary>
            Gets the name of the hardware device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UpdateHardwareTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UpdateHardwareTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.UpdateHardwareTask.HardwareName"/>
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UpdateHardwareTask.ErrorResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UpdateHardwareTask.SuccessResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.UpdateHardwareTaskResult"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Succeeded'</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UpdateHardwareTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.String)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="hardwareId">Id of the hardware that is being moved.</param>
            <param name="sessionDataId">Id of the session, need to be "0" on detect call and returned value for apply call</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.UpdateHardwareTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.MoveHardwareTask">
            <summary>
            The <b>MoveDeviceTask</b> class represents the operation of moving a device to a new recording storage asynchronously.
            You can choose to move any existing media data to the new recording storage or delete it.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a Device object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MoveHardwareTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.HardwareId">
            <summary>
            Gets the id of the hardware device that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.HardwareName">
            <summary>
            Gets the name of the hardware device that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.SourceRecordingServerId">
            <summary>
            Gets the id of the recording server that the hardware is moved from.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.SourceRecordingServerName">
            <summary>
            Gets the name of the recording server that the hardware is moved from.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.DestinationRecordingServerId">
            <summary>
            Gets the id of the recording server that the hardware is moved to.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.DestinationRecordingServerName">
            <summary>
            Gets the name of the recording server that the hardware is moved to.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.DestinationStorageId">
            <summary>
            Gets the id of the recording storage that the hardware is moved to.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.DestinationStorageName">
            <summary>
            Gets the name of the recording storage that the hardware is moved to.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.IgnoreSourceRecordingServer">
            <summary>
            Gets a value indicating whether any existing media data are moved to the new storage.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.MoveHardwareTask.HardwareName"/>
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.ErrorResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveHardwareTask.SuccessResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.MoveHardwareTaskResult"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Succeeded'</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MoveHardwareTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="hardwareId">Id of the hardware that is being moved.</param>
            <param name="destinationRecordingServerId">Id of the recording server that the hardware device is being moved to.</param>
            <param name="destinationStorageId">Id of the storage that the hardware device is being moved to.</param>
            <param name="ignoreSourceRecordingServer"><b>true</b> to ignore if is the recording server from which the hardware is moved is unreachable; otherwise, <b>false</b>.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.MoveHardwareTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.RepairingTask">
            <summary>
            The <b>RepairingTask</b> class represents an active repairing operation on the recording server.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of a recording server initiated repairing operation.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RepairingTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RepairingTask.RecordingServer">
            <summary>
            Gets the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RepairingTask.RecordingServerName">
            <summary>
            Gets the name of the <see cref="P:VideoOS.Management.VmoClient.RepairingTask.RecordingServer"/> to which the hardware is being added.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RepairingTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RepairingTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to the associated storage name
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.HardwareScanTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.HardwareScanTask"/> class.
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.Address">
            <summary>
            Gets the address of the hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.Drivers">
            <summary>
            Gets the list of drivers to scan for.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.UserName">
            <summary>
            Gets the user name used for communicating with the hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.Password">
            <summary>
            Gets the password used for communicating with the hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.UseDefaultCredentials">
            <summary>
            Gets if the scan is using default credentials when scanning for hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.RecordingServerName">
            <summary>
            Gets the name of the <see cref="T:VideoOS.Management.VmoClient.RecordingServer"/> that performs the hardware scan.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.HardwareScanTask.RecordingServerName"/>
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.ErrorResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.TaskError"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Failed'</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.HardwareScanTask.SuccessResult">
            <summary>
            Gets a <see cref="T:VideoOS.Management.Common.Tasks.HardwareScanTaskResult"/> object deserialized from the xml in the <see cref="P:VideoOS.Management.VmoClient.AsyncTask.StatusDetails"/>.<br/>
            Returns <b>null</b> if the xml could not be parsed correctly.
            </summary>
            <exception cref="T:System.InvalidOperationException">The status of the task is not 'AsyncTaskStatus.Succeeded'</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.HardwareScanTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Uri,System.Int32[],System.String,System.String,System.Boolean)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingServerId">Id of the recording server performing the hardware scan.</param>
            <param name="address">The address of the hardware to scan.</param>
            <param name="drivers">The list of drivers to scan for.</param>
            <param name="userName">The user name to use for communicating with the hardware.</param>
            <param name="password">The password to use for communicating with the hardware.</param>
            <param name="useDefaultCredentials">Is default credentials used when scanning.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.HardwareScanTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.HardwareScanTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.SetEncryptionPasswordTask">
            <summary>
            The <b>SetEncryptionPasswordTask</b> class represents the operation of setting the password for encryption on a recording storage asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a RecordingStorage object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SetEncryptionPasswordTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionPasswordTask.RecordingServer">
            <summary>
            Gets the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionPasswordTask.Storage">
            <summary>
            Gets the recording storage where encryption password is being set.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionPasswordTask.StorageName">
            <summary>
            Gets the name of the storage where encryption password is being set.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionPasswordTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionPasswordTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.SetEncryptionPasswordTask.StorageName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SetEncryptionPasswordTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.String,System.String)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingStorageId">The ID of the storage to set encryption password on.</param>
            <param name="oldPassword">The old encryption password.</param>
            <param name="newPassword">The new encryption password.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.SetEncryptionPasswordTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.SetEncryptionMethodTask">
            <summary>
            The <b>SetEncryptionMethodTask</b> class represents the operation of setting the method of encryption on a recording storage asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a RecordingStorage object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SetEncryptionMethodTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionMethodTask.RecordingServer">
            <summary>
            Gets the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionMethodTask.Storage">
            <summary>
            Gets the recording storage where encryption method is being set.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionMethodTask.StorageName">
            <summary>
            Gets the name of the storage where encryption method is being set.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionMethodTask.Method">
            <summary>
            Gets the method of encryption that is being set on the storage.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionMethodTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SetEncryptionMethodTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.SetEncryptionMethodTask.StorageName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SetEncryptionMethodTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,VideoOS.Management.VmoClient.StorageEncryptionMethod,System.String)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingStorageId">The id of the recording storage to set encryption method on.</param>
            <param name="encryptionMethod">The method of encryption.</param>
            <param name="password">The password used for encryption</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.SetEncryptionMethodTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.MoveDeviceTask">
            <summary>
            The <b>MoveDeviceTask</b> class represents the operation of moving a device to a new recording storage asynchronously.
            You can choose to move any existing media data to the new recording storage or delete it.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a Device object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MoveDeviceTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveDeviceTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveDeviceTask.StorageId">
            <summary>
            Gets the ID of the currently associated storage.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveDeviceTask.DeviceId">
            <summary>
            Gets the ID of the device that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveDeviceTask.DeviceName">
            <summary>
            Gets the name of the device that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveDeviceTask.TargetStorageId">
            <summary>
            Gets the ID of the storage that the device is being moved to.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveDeviceTask.MoveData">
            <summary>
            Gets a value indicating whether any existing media data are moved to the new storage.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveDeviceTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveDeviceTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.MoveDeviceTask.DeviceName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MoveDeviceTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="deviceId">Id of the device that is being moved.</param>
            <param name="targetStorageId">Id of the storage that the device is being moved to.</param>
            <param name="moveData"><b>true</b> to allow any existing media data to be moved to the new storage; otherwise, <b>false</b>.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.TruncateDeviceStorageTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.RequestEdgeStorageTask">
            <summary>
            The <b>RequestEdgeStorageTask</b> class represents the operation of retrieving edge storage from a device asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a Device object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RequestEdgeStorageTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.DeviceId">
            <summary>
            Gets the ID of the device from where edge storage is being retrieved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.DeviceName">
            <summary>
            Gets the name of the device from where edge storage is being retrieved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.EdgeStartTime">
            <summary>
            Gets the start time of the requested edge storage interval.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.EdgeEndTime">
            <summary>
            Gets the end time of the requested edge storage interval.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.Metadata">
            <summary>
            Gets the metadata associated with this task.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.RequestEdgeStorageTask.DeviceName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RequestEdgeStorageTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.DateTime,System.DateTime,System.String)">
            <summary>
            Factory method used to start a new task of this type.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/>.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="deviceId">The ID of the device from where to retrieve edge storage.</param>
            <param name="startTime">The start time of the interval from where to retrieve edge storage.</param>
            <param name="endTime">The end time of the interval from where to retrieve edge storage.</param>
            <param name="metadata">Custom metadata that should be associated to this task.
            No pre-defined parsing or rules are applied to this data by the system.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.RequestEdgeStorageTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">The feature is not license on the server</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.RequestEdgeStorageTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RequestEdgeStorageTask.Stop">
            <summary>
            Requests this task to be stopped.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">The feature is not license on the server</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>This function is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v6_0"/> or above.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.DeleteArchiveTask">
            <summary>
            The <b>DeleteArchiveTask</b> class represents the operation of deleting an archive asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a ArchiveStorage object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.DeleteArchiveTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteArchiveTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteArchiveTask.StorageId">
            <summary>
            Gets the ID of the recording storage associated with the archive that is begin deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteArchiveTask.ArchiveId">
            <summary>
            Gets the ID of the archive that is begin deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteArchiveTask.ArchiveName">
            <summary>
            Gets the name of the archive that is being deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteArchiveTask.ArchivePath">
            <summary>
            Gets the path of the archive that is being deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteArchiveTask.ArchiveFolder">
            <summary>
            Gets the folder of the archive that is being deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteArchiveTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteArchiveTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.DeleteArchiveTask.ArchiveName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.DeleteArchiveTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Boolean)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="archiveStorageId">Id of the archive to delete.</param>
            <param name="deleteIfOffline">If true the archive will be removed from the configuration even if the archive isn't currently online.
            This means that if the archive contains any media data, these will not be deleted.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.DeleteArchiveTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.DeleteStorageTask">
            <summary>
            The <b>DeleteStorageTask</b> class represents the operation of deleting a storage asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a RecordingStorage object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.DeleteStorageTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteStorageTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteStorageTask.StorageId">
            <summary>
            Gets the ID of the storage that is begin deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteStorageTask.StorageName">
            <summary>
            Gets the name of the storage that is being deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteStorageTask.StoragePath">
            <summary>
            Gets the target path of the storage that is being deleted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteStorageTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeleteStorageTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.DeleteStorageTask.StorageName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.DeleteStorageTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Boolean)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingStorageId">Id of the recording storage to move.</param>
            <param name="deleteIfOffline">If true the storage will be removed from the configuration even if the storage isn't currently online.
            This means that if the storage contains any media data, these will not be deleted.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.DeleteStorageTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.MoveArchiveTask">
            <summary>
            The <b>MoveArchiveTask</b> class represents the operation of moving an archive to a new location asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a Device object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MoveArchiveTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.StorageId">
            <summary>
            Gets the ID of the recording storage associated with the archive that is begin moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.ArchiveId">
            <summary>
            Gets the ID of the archive that is begin moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.ArchiveName">
            <summary>
            Gets the name of the archive that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.TargetPath">
            <summary>
            Gets the target path of the archive that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.TargetFolder">
            <summary>
            Gets the target folder of the archive that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.SourcePath">
            <summary>
            Gets the source path of the archive that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.SourceFolder">
            <summary>
            Gets the source folder of the archive that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveArchiveTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.MoveArchiveTask.ArchiveName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MoveArchiveTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.String)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="archiveId">Id of the archive to move.</param>
            <param name="targetPath">The path of where the archive should be moved to.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.MoveArchiveTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.MoveStorageTask">
            <summary>
            The <b>MoveStorageTask</b> class represents the operation of moving a storage to a new location asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a Device object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MoveStorageTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveStorageTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveStorageTask.StorageId">
            <summary>
            Gets the ID of the storage that is begin moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveStorageTask.StorageName">
            <summary>
            Gets the name of the storage that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveStorageTask.TargetPath">
            <summary>
            Gets the target path of the storage that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveStorageTask.SourcePath">
            <summary>
            Gets the source path of the storage that is being moved.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveStorageTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MoveStorageTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.MoveStorageTask.StorageName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MoveStorageTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.String)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="recordingStorageId">Id of the recording storage to move.</param>
            <param name="targetPath">The path of where the recording storage should be moved to.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.MoveStorageTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.EntityNameManagementServer">
            <summary>
              Looks up a localized string similar to Management server.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.NameOfUnknownStorage">
            <summary>
              Looks up a localized string similar to &lt;Unknown&gt;.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskActivateLicense">
            <summary>
              Looks up a localized string similar to Activating license.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskAddHardware">
            <summary>
              Looks up a localized string similar to Adding hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskArchiving">
            <summary>
              Looks up a localized string similar to Archiving.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskAuthorizeRecordingServer">
            <summary>
              Looks up a localized string similar to Authorize recording server.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskChangeHardwarePassword">
            <summary>
              Looks up a localized string similar to Changing hardware password.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskDeleteArchive">
            <summary>
              Looks up a localized string similar to Deleting archive.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskDeleteHardware">
            <summary>
              Looks up a localized string similar to Delete hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskDeleteStorage">
            <summary>
              Looks up a localized string similar to Deleting storage.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskHardwareScan">
            <summary>
              Looks up a localized string similar to Scanning for a piece of hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskHardwareScanExpress">
            <summary>
              Looks up a localized string similar to Scanning network for hardware....
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskMoveArchiveStorage">
            <summary>
              Looks up a localized string similar to Moving archive.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskMoveDevice">
            <summary>
              Looks up a localized string similar to Moving device recordings.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskMoveHardware">
            <summary>
              Looks up a localized string similar to Moving hardware.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskMoveRecordingStorage">
            <summary>
              Looks up a localized string similar to Moving storage.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskRepairing">
            <summary>
              Looks up a localized string similar to Repairing database.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskRetrievingEdgeRecordings">
            <summary>
              Looks up a localized string similar to Retrieving remote recordings.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskSetEncryptionMethod">
            <summary>
              Looks up a localized string similar to Applying encryption method changes.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskSetEncryptionMethodInvalidMethod">
            <summary>
              Looks up a localized string similar to An invalid encryption method is specified..
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskSetEncryptionPassword">
            <summary>
              Looks up a localized string similar to Applying encryption password changes.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskTruncateDeviceStorage">
            <summary>
              Looks up a localized string similar to Deleting device recordings.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.BusinessObjects.ServerTask.TaskResources.TaskUpdateHardware">
            <summary>
              Looks up a localized string similar to Update hardware.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.TruncateDeviceStorageTask">
            <summary>
            The <b>TruncateDeviceStorageTask</b> class represents the operation of truncating the storage of a device asynchronously.
            </summary>
            <remarks>
            This task can't be created in it self but is a result of an action (method call) on a Device object.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used by the framework to create a task based on a generic object
            </summary>
            <param name="internalId">Id of the task.</param>
            <param name="objectProperties">Task properties.</param>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.RecordingServerId">
            <summary>
            Gets the ID of the recording server where the task is performed.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.DeviceId">
            <summary>
            Gets the ID of the device of which its storage is being truncated.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.DeviceName">
            <summary>
            Gets the name of the device of which its storage is being truncated.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.Name">
            <summary>
            Gets a localized UI display name of this task type.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.EntityName">
            <summary>
            Gets the name of the entity that this task operates on. In this case equal to <see cref="P:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.DeviceName"/>
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="deviceId">Id of the device of which storage should be truncated.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.TruncateDeviceStorageTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.TruncateDeviceStorageTask.StartNew(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Guid)">
            <summary>
            Factory method used to start a new task of this type.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="deviceId">Id of the device of which storage should be truncated.</param>
            <param name="recordingServerId">Id of the recording server where recordings for the specified device should be be truncated.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.TruncateDeviceStorageTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="E:VideoOS.Management.VmoClient.Address.ChangedEvent">
            <summary>
            Event that comes when you get deleted. Either by direct delete or by delete of related objects.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.AddressCollection"/> class.
            </summary>
        </member>
        <member name="E:VideoOS.Management.VmoClient.AddressCollection.CollectionChangedEvent">
            <summary>
            Event that is raised whenever the collection or elements in the collection get changed
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddressCollection.Count">
            <summary>
            Gets the number of elements actually contained in the AddressCollection.
            </summary>
            <returns>The number of elements actually contained in the AddressCollection</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.Add(VideoOS.Management.VmoClient.Address)">
            <summary>
            Adds an Address to the end of the AddressCollection.
            </summary>
            <param name="address">
             The Address to be added to the end of the AddressCollection.
             The Address will only be added if it isn't null and it isn't in the collection already.
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.Remove(VideoOS.Management.VmoClient.Address)">
            <summary>
            Removes the first occurrence of a specific object from the AddressCollection.
            </summary>
            <param name="address">The Address to remove from the AddressCollection.</param>
            <returns>
            true if item is successfully removed; otherwise, false. This method also
            returns false if item was not found in the AddressCollection.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.Clear">
            <summary>
            Removes all elements from the AddressCollection.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.AddressCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is equal to or greater than AddressCollection.Count.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the AddressCollection.
            </summary>
            <returns>A AddressCollection.Enumerator for the AddressCollection.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.Clone">
            <summary>
            Returns an clone of the collection and all the elements in the collection
            </summary>
            <returns>A new AddressCollection containing cloned elements</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.IsEqual(VideoOS.Management.VmoClient.AddressCollection)">
            <summary>
            Specifies if collection is equal to another AddressCollection.
            </summary>
            <param name="addressCollectionB">The second instance of the AddressCollection.</param>
            <returns>
            true if the two collections are equal; otherwise, false. This method also
            returns false if addressCollectionB is null.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.TryGetValue(System.Uri,VideoOS.Management.VmoClient.Address@)">
            <summary>
            Gets the Address associated with the specified Uri.
            </summary>
            <param name="serverUrl">The serverUrl of the Address to get.</param>
            <param name="address">
            When this method returns, contains the Address associated with the specified
            serverUrl, if the serverUrl is found; otherwise, null. This parameter is passed uninitialized.
            </param>
            <returns>true if the AddressCollection contains an Address with the specified Uri; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">serverUrl is null.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.ToServerAddress">
            <summary>
            Convert the collection to a ServerAddress array
            </summary>
            <returns>Array of ServerAddress</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.AddressCollection.ToServerAddressXml">
            <summary>
            Convert the collection to a ServerAddress Xml representation
            </summary>
            <returns>The Serveraddress xml</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ReadOnlyAddressCollection"/> class.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.Count">
            <summary>
            Gets the number of elements actually contained in the ReadOnlyAddressCollection.
            </summary>
            <returns>The number of elements actually contained in the ReadOnlyAddressCollection</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.Item(System.Int32)">
            <summary>
             Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is equal to or greater than ReadOnlyAddressCollection.Count.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the ReadOnlyAddressCollection.
            </summary>
            <returns>A ReadOnlyAddressCollection.Enumerator for the ReadOnlyAddressCollection.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.Clone">
            <summary>
            Returns an clone of the collection and all the elements in the collection
            </summary>
            <returns>A new ReadOnlyAddressCollection containing cloned elements</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.IsEqual(VideoOS.Management.VmoClient.ReadOnlyAddressCollection)">
            <summary>
            Removes the first occurrence of a specific object from the ReadOnlyAddressCollection.
            </summary>
            <param name="addressCollectionB">The ReadOnlyAddressCollection to compare with the collection.</param>
            <returns>
            true if the two collections are equal; otherwise, false. This method also
            returns false if addressCollectionB is null.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.TryGetValue(System.Uri,VideoOS.Management.VmoClient.ReadOnlyAddress@)">
            <summary>
            Gets the ReadOnlyAddress associated with the specified Uri.
            </summary>
            <param name="serverUrl">The serverUrl of the ReadOnlyAddress to get.</param>
            <param name="address">
            When this method returns, contains the ReadOnlyAddress associated with the specified serverUrl,
            if the serverUrl is found; otherwise, null. This parameter is passed uninitialized.
            </param>
            <returns>
            true if the ReadOnlyAddressCollection contains an ReadOnlyAddress with the specified Uri; otherwise, false.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.ToServerAddress">
            <summary>
            Convert the collection to a ServerAddress array
            </summary>
            <returns> Array of ServerAddress</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ReadOnlyAddressCollection.ToServerAddressXml">
            <summary>
            Convert the collection to a ServerAddress Xml representation
            </summary>
            <returns>The Serveraddress xml</returns>
        </member>
        <member name="T:VideoOS.Management.VmoClient.MasterSite">
            <summary>
            The <b>MasterSite</b> object represents a remote attached Management Server.
            </summary>
            <remarks>
            A master site represent another management server which has this management server as a child site.
            A master site is read only. Only custom properties can be saved on a master site
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MasterSite.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create master site based on a generic object
            </summary>
            <param name="internalId">Id of the master site.</param>
            <param name="objectProperties">Master site properties.</param>
            <param name="relations">Master site relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. Always false since only existing master site is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MasterSite.Authorize">
            <summary>
            Authorize the site to be master. A site is not considered attached by
            synchronication modules before it is authorized.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteToSiteConnectionFailureException">The server is unable to connect to the remote site</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteMasterSiteDoesNotHaveHomeSiteAsChildException">The server is unable to connect to the remote site</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current user doesn't have the administrator rights on the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing authorize</exception>
            <remarks>A side effect of this call is the site will be refreshed.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MasterSite.Refresh">
            <summary>
            Refreshes the site and get the latest synchronized updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteNotFoundException">The site can't be found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing Refresh</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MasterSite.Synchronize">
            <summary>
            Synchronize the latest updates from the remote site and refreshes the site
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current user doesn't have the administrator rights on the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteNotFoundException">The site can't be found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing synchronization</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ChildSite">
            <summary>
            The <b>ChildSite</b> object represents a remote attached Management Server.
            </summary>
            <remarks>
            A child site represent another management server.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ChildSite.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create sites based on a generic object
            </summary>
            <param name="internalId">Id of the child site.</param>
            <param name="objectProperties">Child site properties.</param>
            <param name="relations">Child site relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. Always false since only existing child sites is loaded.</param>
            <remarks>
            Child sites represent another management server which are attached to the Management Server directly or indirectly.
            Child sites are read only. Only custom properties can be saved on a child site
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChildSite.MarkedInconsistent">
            <summary>
            Time for when the site got marked as inconsistence.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ChildSite.SetMarkInconsistent">
            <summary>
            Marks the site as inconsitent. Will remain inconsistent until the syncronization service
            on the Management Server gets a confirmed handshake from the site.<br/>
            This function will refresh child site object.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChildSite.IsInconsistent">
            <summary>
            Is site inconsistence
            </summary>
            <returns>True if the site has been marked after last confirmed handshake - False if not.</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChildSite.ChildSites">
            <summary>
            Sites attached to the child site
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChildSite.ParentSite">
            <summary>
            Parent child site. Null if site is connected directly to the Management Server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ChildSite.ManagementServer">
            <summary>
            The Management Server
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ChildSite.Refresh">
            <summary>
            Refreshes the site and get the latest synchronized updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteNotFoundException">The site can't be found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing Refresh</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ChildSite.Synchronize">
            <summary>
            Synchronize the latest updates from the remote site and refreshes the site
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current user doesn't have the administrator rights on the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteNotFoundException">The site can't be found</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing synchronization</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.Site">
            <summary>
            The <b>Site</b> object represents a remote attached Management Server.
            </summary>
            <remarks>
            A site represent another management server. The object is read only and properties can only be modified by connecting
            to the remote site, update the properties on the Management Server object and then synchronize the site
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create sites based on a generic object
            </summary>
            <param name="internalId">Id of the site.</param>
            <param name="objectProperties">Site properties.</param>
            <param name="relations">Site relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. Always false since only existing sites is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Site.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Site.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Site.LastModified">
            <summary>
            Gets the last modified date.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Site.LastConfirmedHandshake">
            <summary>
            Get the time of the last time the management server had contact to the site
            directly or indirectly. 
            </summary>
            <value>The last confirmed handshake date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Site.ConnectionState">
            <summary>
            Get the connection state of the site. When a site is added to the MFA hierachy it start being in
            AttachPending state. Then a master site will be created with the state Unauthorized on the remote site. When 
            the master site have been created the state changes to WaitRemoteAuthorize. After the master site have been 
            authroized on the remote site both site will change state to Attached
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.Site._version">
            <summary>
            Get the product version installed on the remote site
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Site.ServiceAccount">
            <summary>
            Get the Service Account the remote site is running under.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Site.SynchronizationStatus">
            <summary>
            Internal state used by the syncronization functionality.
            0 means the last synchronization succeded. Else the status contains a error code description what went wrong:
            - SiteHomeSyncErrorConnection = 101;
            - SiteHomeSyncErrorVersion = 102;
            - SiteHomeSyncErrorServerInformation = 103;
            
            - SiteSlaveSyncErrorSlaveConnection = 201;
            - SiteSlaveSyncErrorHomeConnection = 202;
            - SiteSlaveSyncErrorHomeVersion = 203;
            - SiteSlaveSyncErrorSlaveVersion = 204;
            - SiteSlaveSyncErrorVersionMismatch = 205;
            - SiteSlaveSyncErrorHomeServerInformation = 206;
            - SiteSlaveSyncErrorSlaveServerInformation = 207;
            - SiteSlaveSyncErrorSlaveAccountOnHome = 208;
            - SiteSlaveSyncErrorHomeAccountOnSlave = 209;
            - SiteSlaveSyncErrorNoMaster = 210;
            
            - SiteMasterSyncErrorMasterConnection = 301;
            - SiteMasterSyncErrorHomeConnection = 302;
            - SiteMasterSyncErrorHomeVersion = 303;
            - SiteMasterSyncErrorMasterVersion = 304;
            - SiteMasterSyncErrorVersionMismatch = 305;
            - SiteMasterSyncErrorHomeServerInformation = 306;
            - SiteMasterSyncErrorMasterServerInformation = 307;
            - SiteMasterSyncErrorMasterAccountOnHome = 308;
            - SiteMasterSyncErrorHomeAccountOnMaster = 309;
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Site.Addresses">
            <summary>
            Addresses specifying how to connect to the remote site.
            </summary>
            <remarks>This collection is read only</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.EnumPermissions">
            <summary>
            Enumerates a list of all permissions on the site.
            </summary>
            <returns>
            An array of <see cref="T:VideoOS.Management.VmoClient.SitePermissionInfo"/> object values that contains
            an enumerated list of permissions.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.EnumPermissions(VideoOS.Management.VmoClient.SitePermissionSet)">
            <summary>
            Enumerates a list of permissions on the site for the specified permission set.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object that limits the enumerated 
            list of those listed.
            </param>
            <returns>
            An array of <see cref="T:VideoOS.Management.VmoClient.SitePermissionInfo"/> object values that contains
            an enumerated list of permissions.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.EnumPermissions(System.String)">
            <summary>
            Enumerates a list of permissions on the site for the specified role.
            </summary>
            <param name="identity">
            A SID identity of a user or an id of a role object.
            </param>
            <returns>
            An array of <see cref="T:VideoOS.Management.VmoClient.SitePermissionInfo"/> object values that contains
            an enumerated list of permissions.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.EnumPermissions(System.String,VideoOS.Management.VmoClient.SitePermissionSet)">
            <summary>
            Enumerates a list of permissions on the site for the specified role and a 
            specified permission set.
            </summary>
            <param name="identity">
            A SID identity of a user or an id of a role object.
            </param>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object that limits the enumerated 
            list of those listed.
            </param>
            <returns>
            An array of <see cref="T:VideoOS.Management.VmoClient.SitePermissionInfo"/> object values that contains
            an enumerated list of permissions.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.Allow(VideoOS.Management.VmoClient.SitePermissionSet,System.String)">
            <summary>
            Allows the specified set of permissions to the specified role.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identity">
            A SID identity of a user or an id of a role object that's allowed the specified
            set of permissions on the site.
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.Allow(VideoOS.Management.VmoClient.SitePermissionSet,System.String[])">
            <summary>
            Allows the specified set of permissions to the specified roles.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identities"> An array of identity SID's for users user or role ids that's allowed the specified set of permissions on the site.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.Deny(VideoOS.Management.VmoClient.SitePermissionSet,System.String)">
            <summary>
            Denies the specificed set of permissions for the specified role.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identity">An identity name that are to be denied the specified permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.Deny(VideoOS.Management.VmoClient.SitePermissionSet,System.String[])">
            <summary>
            Denies the specificed set of permissions for the specified roles.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identities">An array of identities that are to be denied the specified permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.Revoke(VideoOS.Management.VmoClient.SitePermissionSet,System.String)">
            <summary>
            Revokes a previously allowed set of permissions from a role.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identity">An identity name that are to be revoked the specified permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.Revoke(VideoOS.Management.VmoClient.SitePermissionSet,System.String[])">
            <summary>
            Revokes a previously allowed set of permissions from a role.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identities">An identity name array for which to revoke the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Site.UpdateCustomProperties">
            <summary>
            Updates custom properties on the site
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.#ctor(VideoOS.Management.VmoClient.RecordingStorage,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ArchiveStorage"/> class.
            Framerate reduction will be disabled as default
            </summary>
            <param name="recordingStorage">The recording storage that this archive storage belongs to.</param>
            <param name="path">The folder path where this archive storage will store its data.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.#ctor(VideoOS.Management.VmoClient.RecordingStorage,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.ArchiveStorage"/> class.
            </summary>
            <param name="recordingStorage">The <see cref="P:VideoOS.Management.VmoClient.ArchiveStorage.RecordingStorage"/> instance to which this archive storage belongs.</param>
            <param name="path">The folder path where this archive storage will store its data.</param>
            <param name="framerateReductionEnabled">A boolean value indicating whether the frame of video data is reduced when archiving to this storage.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Constructs a ArchiveStorage - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
            <param name="recordingStorageId">The id of the <see cref="P:VideoOS.Management.VmoClient.ArchiveStorage.RecordingStorage"/> to which this archive storage belongs.</param>
            <param name="recordingServerId">The id of the <see cref="P:VideoOS.Management.VmoClient.ArchiveStorage.RecordingServer"/> to which this archive storage belongs.</param>
            <param name="path">The folder path where this archive storage will store its data.</param>
            <param name="framerateReductionEnabled">A boolean value indicating whether the frame of video data is reduced when archiving to this storage.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create recording storages based on a generic object
            </summary>
            <param name="internalId">Id of the recording storage.</param>
            <param name="objectProperties">Recording storage properties.</param>
            <param name="relations">Recording storage relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new recording storage is created, false when an existing recording storage is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.RetainMinutes">
            <summary>
            Gets or sets the number of minutes that must elapse before data are deleted or archived.
            </summary>
            <value>A <see cref="T:System.Int32"/> value that specificies the retention period in minutes. By default,
            the value is set to 1 day</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.MaxSize">
            <summary>
            Gets or sets the maximum size of the archive storage in MB.
            </summary>
            <value>A <see cref="T:System.Int64"/> value that specifies the maximum size of the storage in MB. By default,
            the value is set to 1GB</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.IsDefault">
            <summary>
            Gets a value indicating whether this instance is default.
            </summary>
            <value>
                <c>true</c> if this instance is default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.TargetFramerate">
            <summary>
            Gets or sets the framerate of media data in frames per second.
            </summary>
            <value>An <see cref="T:System.Int32"/> value that specifies the target framerate if media data in frames per second.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.ArchiveSchedule">
            <summary>
            Gets or sets the archive schedule.
            </summary>
            <value>The archive schedule.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.FramerateReductionEnabled">
            <summary>
            Gets whether framerate reduction is enabled or not on the archive
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.GetStorageInformation">
            <summary>
            Gets machine disk usage information relating to the archive storage
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the archive storage haven't been created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.RecordingServerId">
            <summary>
            Internal method to get the recording server id.
            </summary>
            <value>The id of the recording server.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.RecordingServer">
            <summary>
            Get the recording server the archive storage is attached to
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.RecordingStorageId">
            <summary>
            Internal method to get the recording storage id.
            </summary>
            <value>The id og the recording storage.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ArchiveStorage.RecordingStorage">
            <summary>
            Get the recording storage the archive storage is assigned to
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.Move(System.String)">
            <summary>
            Moves archive storage to a new storage path.
            This action will refresh the object.
            </summary>
            <param name="newPath">The new path for the archive storage</param>
            <returns><see cref="T:VideoOS.Management.VmoClient.MoveArchiveTask"/> object with progress information of the operation.</returns>
            <remarks>
            Moving an archive storage is potentially a long running operation as the recording server may have to move a lot of data.<br/>
            Calling this function will therefore make the configuration change and will create a <see cref="T:VideoOS.Management.VmoClient.MoveArchiveTask"/> that is executed by the recording server
            to actually perform the move operation.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.EnableFramerateReduction">
            <summary>
            Enabled framerate reduction. This action will refresh the object.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values, object have been deleted on server etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.DisableFramerateReduction">
            <summary>
            Disable framerate reduction. This action will refresh the object.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values, object have been deleted on server etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.Create">
            <summary>
            Create the archive storage
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.Delete">
            <summary>
            Delete the archive storage
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.Refresh">
            <summary>
            Refreshes the archive storage and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ArchiveStorage.Update">
            <summary>
            Apply archive storage changes to the database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values, object have been deleted on server etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.#ctor(VideoOS.Management.VmoClient.RecordingServer,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.RecordingStorage"/> class.
            </summary>
            <param name="recordingServer">The recording server.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.#ctor(VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.RecordingServer,System.String)">
            <summary>
            Constructs a RecordingStorage - required for testability.
            </summary>
            <param name="properties">Recording storage properties</param>
            <param name="recordingServer">The recording server.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.String)">
            <summary>
            Constructs a RecordingStorage - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
            <param name="recordingServerId">The id of the recording server.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,VideoOS.Management.VmoClient.VmoPropertyCollection,System.Guid,System.String)">
            <summary>
            Constructs a RecordingStorage - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
            <param name="objectProperties">Recording storage properties.</param>
            <param name="recordingServerId">The id of the recording server.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create recording storages based on a generic object
            </summary>
            <param name="internalId">Id of the recording storage.</param>
            <param name="objectProperties">Recording storage properties.</param>
            <param name="relations">Recording storage relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new recording storage is created, false when an existing recording storage is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.Path">
            <summary>
            Gets the path.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.RetainMinutes">
            <summary>
            Gets or sets the number of minutes that must elapse before data are deleted or archived.
            </summary>
            <value>A <see cref="T:System.Int32"/> value that specificies the retention period in minutes. The
            value have to be between 1 and  525600000. By default, the value is 1440, which is 1 day</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.MaxSize">
            <summary>
            Gets or sets the maximum size of the recording storage in MB.
            </summary>
            <value>A <see cref="T:System.Double"/> value that specifies the maximum size of the storage in MB. By default,
            the value is set to 1GB</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.IsDefault">
            <summary>
            Gets a value indicating whether this instance is default.
            </summary>
            <value>
                <c>true</c> if this instance is default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.Signing">
            <summary>
            Gets or sets option if database should be signed
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.Encryption">
            <summary>
            Gets the strength of the encryption
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.RecordingServerId">
            <summary>
            Internal method to get the recording server id.
            </summary>
            <value>The id og the recording storage.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.RecordingServer">
            <summary>
            Get the recording server the archive storage is attached to
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.Move(System.String)">
            <summary>
            Moves recording storage to a new storage path.
            This action will refresh the object.
            </summary>
            <param name="newPath">The new path for the recording storage</param>
            <returns><see cref="T:VideoOS.Management.VmoClient.MoveStorageTask"/> object with progress information of the operation.</returns>
            <remarks>
            Moving a recording storage is potentially a long running operation as the recording server may have to move a lot of data.<br/>
            Calling this function will therefore make the configuration change and will create a task that is executed by the recording server
            to actually perform the move operation.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.GetStorageInformation">
            <summary>
            Gets machine disk usage information relating to the recording storage
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RecordingStorageInformationException">Thrown if the storage haven't been created at the recorder yet. </exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.ValidateEncryptionPassword(System.String)">
            <summary>
            Validates encryption password
            </summary>
            <param name="password">The password</param>
            <returns>A boolean indicating whether the password is valid.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.SetAsDefault">
            <summary>
            Sets as default. This action will refresh the object.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.EnableEncryption(VideoOS.Management.VmoClient.StorageEncryptionMethod,System.String)">
            <summary>
            Enables encryption on the recording storage
            </summary>
            <param name="encryptionMethod">Strength of encryption. Possible values are: Strong or Light.</param>
            <param name="password">Password used for encryption</param>
            <returns>An array with a <see cref="T:VideoOS.Management.VmoClient.SetEncryptionMethodTask"/> object and a <see cref="T:VideoOS.Management.VmoClient.SetEncryptionPasswordTask"/> object.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.ArgumentException">Thrown in case an invalid encryption method has been specified.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.DisableEncryption(System.String)">
            <summary>
            Disables encryption on the recording storage
            </summary>
            <param name="password">Current password used for encryption</param>
            <returns>An array with a <see cref="T:VideoOS.Management.VmoClient.SetEncryptionMethodTask"/> object and a <see cref="T:VideoOS.Management.VmoClient.SetEncryptionPasswordTask"/> object.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.ChangeEncryptionMethod(VideoOS.Management.VmoClient.StorageEncryptionMethod,System.String)">
            <summary>
            Changes the strength of encryption for the recording storage. It's only possible to change the encryption strength if encryption has
            already been enabled.
            </summary>
            <param name="encryptionMethod">New encryption strength. Possible values are: Strong or Light.</param>
            <param name="password">Current password used for encryption.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.SetEncryptionMethodTask"/> object.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.ArgumentException">Thrown in case an invalid encryption method has been specified.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.ChangeEncryptionPassword(System.String,System.String)">
            <summary>
            Changes the password used for encryption for the recording storage. It's only possible to change the encryption password if encryption has
            already been enabled.
            </summary>
            <param name="oldPassword">Current password used for encryption.</param>
            <param name="newPassword">New password to be used for encryption.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.SetEncryptionPasswordTask"/> object.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.Create">
            <summary>
            Create the recording storage
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.Delete">
            <summary>
            Delete the recording storage
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.Refresh">
            <summary>
            Refreshes the recording storage and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.Update">
            <summary>
            Apply recording storage changes to the database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingStorage.GetDevicesUsingStorage">
            <summary>
            Get devices that is using the storage.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <returns>Devices that is configured to use the storage</returns>
            <remarks>Getting devices on a recording storage is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingStorage.ArchiveStorages">
            <summary>
            Related archive storages
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration">
            <summary>
            The <b>CounterStateRuleConfiguration</b> object .
            </summary>
            <remarks>
            A performance state rule can be used to setup rules based on performance counters
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create roles based on a generic object
            </summary>
            <param name="internalId">Id of the Configuration .</param>
            <param name="objectProperties">Configuration properties.</param>
            <param name="relations">Configuration relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new configuration is created, false when an existing configuration is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.#ctor(System.String,System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create PerformanceStateRuleConfigurations based on a generic object
            </summary>
            <param name="internalId">Internal id</param>
            <param name="id">Id of the object.</param>
            <param name="objectProperties">PerformanceStateRuleConfiguration properties.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isCreated">Set to <c>true</c> if object is created on the server, otherwise false.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.CriticalThreshold">
            <summary>
            Gets or sets the critical threshold of the PerformanceStateRuleConfiguration.
            </summary>
            <value>
            A string containing the PerformanceStateRuleConfiguration critical threshold .
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.WarningThreshold">
            <summary>
            Gets or sets the warning threshold of the PerformanceStateRuleConfiguration.
            </summary>
            <value>
            A string containing the PerformanceStateRuleConfiguration warning threshold .
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.TimeWindow">
            <summary>
            Gets or sets the time window of the PerformanceStateRuleConfiguration.
            </summary>
            <value>
            A string containing the PerformanceStateRuleConfiguration time window.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.Name">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.RuleType">
            <summary>
            Gets or sets the type of PerformanceStateRuleConfiguration.
            </summary>
            <value>
            A int containing the PerformanceStateRuleConfiguration rule type.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.Direction">
            <summary>
            Gets or sets the direction of PerformanceStateRuleConfiguration.
            </summary>
            <value>
            A boolean containing the PerformanceStateRuleConfiguration direction of the rule values.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.Disabled">
            <summary>
            Gets or sets the state of PerformanceStateRuleConfiguration.
            </summary>
            <value>
            A bool containing the PerformanceStateRuleConfiguration rule state.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.Unit">
            <summary>
            Gets or sets the MaxUnit of PerformanceStateRuleConfiguration.
            </summary>
            <value>
            A bool containing the PerformanceStateRuleConfiguration rule's MaxUnit.
            </value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if the object have been deleted ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the PerformanceStateRuleConfiguration have been deleted from the server</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.Create">
            <summary>
            Creates the PerformanceStateRuleConfiguration.<br />
            <br />
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs. <br />
            - or - <br />
            If invalid properties have been set on the PerformanceStateRuleConfiguration.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.Update">
            <summary>
            Updates the PerformanceStateRuleConfiguration. <br/>
            <br/>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs. <br/>
            - or - <br/>
            If invalid properties have been set on the PerformanceStateRuleConfiguration.
            </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PerformanceStateRuleConfiguration.Delete">
            <summary>
            Deletes the PerformanceStateRuleConfiguration
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the PerformanceStateRuleConfiguration have been deleted from the server</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.SystemDashboardConfiguration">
            <summary>
            The <b>SystemDashboardConfiguration</b> object .
            </summary>
            <remarks>
            A system dashboard configuration can be used to setup system monitors based on performance state rule configurations
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemDashboardConfiguration.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create system monitors based on a generic object
            </summary>
            <param name="internalId">Id of the Configuration.</param>
            <param name="objectProperties">Configuration properties.</param>
            <param name="relations">Configuration relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new configuration is created, false when an existing configuration is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemDashboardConfiguration.#ctor(System.String,System.Int32,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create SystemDashboardConfiguration based on a generic object
            </summary>
            <param name="internalId">Internal id</param>
            <param name="dashboardId">Id of the dashboard object.</param>
            <param name="objectProperties">SystemDashboardConfiguration properties.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isCreated">Set to <c>true</c> if object is created on the server, otherwise false.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SystemDashboardConfiguration.DashboardId">
            <summary>
            Gets or sets the id of the SystemDashboardConfiguration.
            </summary>
            <value>
            A int containing the SystemDashboardConfiguration id.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SystemDashboardConfiguration.StateSourceType">
            <summary>
            Gets or sets the state source type of the SystemDashboardConfiguration.
            </summary>
            <value>
            A int containing the SystemDashboardConfiguration state source type.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SystemDashboardConfiguration.Name">
            <summary>
            Gets or sets the name of the SystemDashboardConfiguration.
            </summary>
            <value>
            A int containing the SystemDashboardConfiguration name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SystemDashboardConfiguration.SingleStateSourceId">
            <summary>
            Gets or sets single state source id of the SystemDashboardConfiguration.
            This can be set if the StateSourceType is for single instance (SingleCameras, SingleCameraGroup)
            </summary>
            <value>
            A Guid containing the SystemDashboardConfiguration state source type.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SystemDashboardConfiguration.Position">
            <summary>
            The top left offset, 1-based position of the tile
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemDashboardConfiguration.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if the object have been deleted ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the SystemDashboardConfiguration have been deleted from the server</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemDashboardConfiguration.Create">
            <summary>
            Creates the SystemDashboardConfiguration.<br />
            <br />
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs. <br />
            - or - <br />
            If invalid properties have been set on the SystemDashboardConfiguration.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemDashboardConfiguration.Update">
            <summary>
            Updates the SystemDashboardConfiguration. <br/>
            <br/>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs. <br/>
            - or - <br/>
            If invalid properties have been set on the SystemDashboardConfiguration.
            </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemDashboardConfiguration.Delete">
            <summary>
            Deletes the SystemDashboardConfiguration
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this operation.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the SystemDashboardConfiguration have been deleted from the server</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.SystemMonitorStateSource">
            <summary>
            The <b>SystemMonitorStateSource</b> object.
            </summary>
            <remarks>
            A boomark can be used to add information to a point-in-time of recorded data.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemMonitorStateSource.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a SystemMonitorStateSources.
            </summary>
            <remarks>This contructor is based on a SystemMonitorStateSources.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemMonitorStateSource.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Internal constructor used for test - constructs a SystemMonitorStateSources
            </summary>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SystemMonitorStateSource.Name">
            <summary>
            Gets or sets the SystemMonitorStateSource name.
            </summary>
            <value>
            A string containing the SystemMonitorStateSource name .
            </value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SystemMonitorStateSource.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if the object have been deleted ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            This expection is thrown in case of communication erros or if an unknown error occurs.
            - or -
            If the MarkedData have been deleted from the server</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.CalendarTimeProfile">
            <summary>
            The <b>CalendarTimeProfile</b> object represents a calendar time profile.
            </summary>
            <remarks>
            A time profile can be used in various places in the system - such as time based security and rules.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CalendarTimeProfile.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid)">
            <summary>
            Constructs a CalendarTimeProfile with a custom id.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the calendar timeproifle should be created.</param>
            <param name="customId">User defined id</param>
            <exception cref="T:System.ArgumentException">Thrown if custom id is empty.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.SunClockTimeProfile"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CalendarTimeProfile.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Constructs a CalendarTimeProfile with a custom id - required for testability.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="customId">Custom id of the event.</param>
            <exception cref="T:System.ArgumentException">Thrown if custom id is empty.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.SunClockTimeProfile"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CalendarTimeProfile.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a CalendarTimeProfile.
            </summary>
            <param name="managementServer">The Management Server where the sunclock timeproifle should be created.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CalendarTimeProfile.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a SunClockTimeProfile - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CalendarTimeProfile.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create time profile based on a generic object
            </summary>
            <param name="internalId">Id of the time profile.</param>
            <param name="objectProperties">Time profile properties.</param>
            <param name="relations">Time profile relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new time profile is created, false when an existing time profile is loaded.</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.SunClockTimeProfile">
            <summary>
            The <b>SunClockTimeProfile</b> object represents a sun clock time profile.
            </summary>
            <remarks>
            A time profile can be used in various places in the system - such as time based security and rules.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SunClockTimeProfile.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid)">
            <summary>
            Constructs a SunClockTimeProfile with a custom id.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the sunclock timeproifle should be created.</param>
            <param name="customId">User defined id</param>
            <exception cref="T:System.ArgumentException">Thrown if custom id is empty.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.SunClockTimeProfile"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SunClockTimeProfile.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Constructs a SunClockTimeProfile with a custom id - required for testability.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="repositories">The repositories.</param>
            <param name="customId">Custom id of the event.</param>
            <exception cref="T:System.ArgumentException">Thrown if custom id is empty.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.SunClockTimeProfile"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SunClockTimeProfile.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a SunClockTimeProfile.
            </summary>
            <param name="managementServer">The Management Server where the sunclock timeproifle should be created.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SunClockTimeProfile.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a SunClockTimeProfile - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SunClockTimeProfile.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create time profile based on a generic object
            </summary>
            <param name="internalId">Id of the time profile.</param>
            <param name="objectProperties">Time profile properties.</param>
            <param name="relations">Time profile relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new time profile is created, false when an existing time profile is loaded.</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.TimeProfile">
            <summary>
            The <b>TimeProfile</b> object represents a time profile.
            </summary>
            <remarks>
            A time profile can be used in various places in the system - such as time based security and rules.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.TimeProfile.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create time profile based on a generic object
            </summary>
            <param name="internalId">Id of the time profile.</param>
            <param name="objectProperties">Time profile properties.</param>
            <param name="relations">Time profile relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new time profile is created, false when an existing time profile is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.TimeProfile.Refresh">
            <summary>
            Refreshes the time profile and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.TimeProfile.Create">
            <summary>
             Create the time profile
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.TimeProfileCreationException">A time profile of same type already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.TimeProfile.Update">
            <summary>
            Apply time profile changes to the database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.TimeProfileUpdateException">This expection is thrown when updating a time profile that doesn't exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.TimeProfileRenameException">This exception is thrown when a time profile of the same type with the same name already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.TimeProfile.Delete">
            <summary>
            Delete the time profile
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingTimeProfileException">This error occurred when deleting a time profile that doesn't exist.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.TimeProfile.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <returns>Return true if custom properties is supported, returns false if custom properties is not supported.</returns>
            <remarks>Custom Properties is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.UserDefinedEvent">
            <summary>
            The <b>UserDefinedEvent</b> object represents a custom user-defined event.
            </summary>
            <remarks>
            A user-defined event can be used to invoke rules to perform various tasks in the system.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Constructs a UserDefinedEvent.
            </summary>
            <param name="managementServer">The Management Server where the event should be created.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid)">
            <summary>
            Constructs a UserDefinedEvent with a custom id.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="managementServer">The Management Server where the event should be created.</param>
            <param name="customId">Custom id of the event.</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.UserDefinedEvent"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion" /> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Constructs a UserDefinedEvent with a custom id - required for testability.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="repositories">Link to repositories.</param>
            <param name="customId">Custom id of the event.</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Creating a <see cref="T:VideoOS.Management.VmoClient.UserDefinedEvent"/> using this constructor is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion" /> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a UserDefinedEvent - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to user-defined events based on a generic object
            </summary>
            <param name="internalId">Id of the user-defined event.</param>
            <param name="objectProperties">User-defined event properties.</param>
            <param name="relations">User-defined event relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new user-defined event is created, false when an existing user-defined event is loaded.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Create">
            <summary>
            Creates the user defined event
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.UserDefinedEventCreationException">This expection is thrown if a user defined event with same name already exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Update">
            <summary>
            Updates the user defined event
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UserDefinedEventRenameException">This expection is thrown if the name has been changed to the same name of an existing user defined event.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UserDefinedEventNotFoundException">This expection is thrown if the user defined event has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Delete">
            <summary>
            Deletes the user defined event
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingUserDefinedEventException">This expection is thrown if the specified user defined event does not exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Trigger">
            <summary>
            Triggers the user defined event
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.UserDefinedEventNotFoundException">This expection is thrown if the user defined event has been removed from the server.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.EnumPermissions">
            <summary>
            Enumerates a list of all permissions on the event.
            </summary>
            <returns>
            An array of <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionInfo"/> object values that contains
            an enumerated list of permissions.
            </returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.EnumPermissions(VideoOS.Management.VmoClient.UserDefinedEventPermissionSet)">
            <summary>
            Enumerates a list of permissions on the event for the specified permission set.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that limits the enumerated 
            list of those listed.
            </param>
            <returns>
            An array of <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionInfo"/> object values that contains
            an enumerated list of permissions.
            </returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.EnumPermissions(System.String)">
            <summary>
            Enumerates a list of permissions on the event for the specified role.
            </summary>
            <param name="identity">An identity name for which to enumerate permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>
            An array of <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionInfo"/> object values that contains
            an enumerated list of permissions.
            </returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.EnumPermissions(System.String,VideoOS.Management.VmoClient.UserDefinedEventPermissionSet)">
            <summary>
            Enumerates a list of permissions on the event for the specified role and a 
            specified permission set.
            </summary>
            <param name="identity">An identity name for which to enumerate permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that limits the enumerated 
            list of those listed.
            </param>
            <returns>
            An array of <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionInfo"/> object values that contains
            an enumerated list of permissions.
            </returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.EffectivePermissions(System.String)">
            <summary>
            Gets the effective permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.UserDefinedEvent"/> instance.
            </summary>
            <param name="identity">An identity name for which effective permissions shoudl be resolved. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> specifying the effective permissions</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.EffectivePermissions(System.String,VideoOS.Management.VmoClient.UserDefinedEventPermissionSet)">
            <summary>
            Gets the effective permissions for the specified user and permission set for this <see cref="T:VideoOS.Management.VmoClient.UserDefinedEvent"/> instance.
            </summary>
            <param name="identity">An identity name for which effective permissions shoudl be resolved. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that specifies the set of permissions.</param>
            <returns>A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> specifying the effective permissions</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Allow(VideoOS.Management.VmoClient.UserDefinedEventPermissionSet,System.String)">
            <summary>
            Allows the specified set of permissions to the specified role.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identity">An identity name to allow the specified permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Allow(VideoOS.Management.VmoClient.UserDefinedEventPermissionSet,System.String[])">
            <summary>
            Allows the specified set of permissions to the specified roles.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identities">An identity name array for which to allow the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Deny(VideoOS.Management.VmoClient.UserDefinedEventPermissionSet,System.String)">
            <summary>
            Denies the specificed set of permissions for the specified role.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identity">An identity name to deny the specified permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Deny(VideoOS.Management.VmoClient.UserDefinedEventPermissionSet,System.String[])">
            <summary>
            Denies the specificed set of permissions for the specified roles.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identities">An identity name array for which to deny the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Revoke(VideoOS.Management.VmoClient.UserDefinedEventPermissionSet,System.String)">
            <summary>
            Revokes a previously allowed set of permissions from a role.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identity">An identity name to revoke the specified permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEvent.Revoke(VideoOS.Management.VmoClient.UserDefinedEventPermissionSet,System.String[])">
            <summary>
            Revokes a previously allowed set of permissions from a role.
            </summary>
            <param name="permissions">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object that specifies the
            set of permissions.
            </param>
            <param name="identities">An identity name array for which to revoke the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MonitorPreset.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create monitor preset based on a generic object
            </summary>
            <param name="internalId">Id of the monitor preset.</param>
            <param name="objectProperties">Monitor preset properties.</param>
            <param name="relations">Monitor preset relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. Always false since only existing monitor preset is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MonitorPreset.DefinitionXml">
            <summary>
            Xml that follows the standard xml structure of views. Use the VideoHandling component
            under VideoOS.Common.SharedComponent to construct or edit the Xml.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MonitorPreset.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MonitorPreset.Monitor">
            <summary>
            The monitor the monitor preset is part of.
            </summary>
            <value>The monitor.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MonitorPreset.MonitorId">
            <summary>
            Internal method to get the monitor id.
            </summary>
            <value>The id og the monitor.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MonitorPreset.VideoWallPreset">
            <summary>
            The video wall preset the monitor preset is part of.
            </summary>
            <value>The monitor.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MonitorPreset.VideoWallPresetId">
            <summary>
            Internal method to get the video wall preset id.
            </summary>
            <value>The id og the video wall preset.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MonitorPreset.VideoWallId">
            <summary>
            Internal method to get the video wall preset id.
            </summary>
            <value>The id og the video wall preset.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MonitorPreset.Refresh">
            <summary>
            Refreshes the monitor preset and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MonitorNotFoundException">This expection is thrown if the monitor have been deleted.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallPresetNotFoundException">This expection is thrown if the video wall preset have been deleted.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MonitorPreset.Update">
            <summary>
            Apply monitor preset changes to database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MonitorPresetUpdateException">This expection is thrown if the monitor preset have been deleted.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MonitorPreset.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <returns>Return true if custom properties is supported, returns false if custom properties is not supported.</returns>
            <remarks>Custom Properties is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion" /> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ViewItem">
            <summary>
            The <b>ViewItem</b> object represents position in a view.
            The view items in a view specifies the content of the view.
            </summary>
            <remarks>
            A view item is a sub part of a view.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewItem.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create view item based on a generic object
            </summary>
            <param name="internalId">Id of the view item.</param>
            <param name="objectProperties">View item properties.</param>
            <param name="relations">View item relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded.  Always false since only existing view items is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ViewItem.DefinitionXml">
            <summary>
            Xml that follows the standard xml structure of views. Use the VideoHandling component
            under VideoOS.Common.SharedComponent to construct or edit the Xml.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ViewItem.View">
            <summary>
            The view
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewItem.Clear">
            <summary>
            Clear the view items
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewItem.Update">
            <summary>
            Apply view changes to database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ViewUpdateException">This expection is thrown when updating a view that doesn't exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ViewRenameException">This exception is thrown when a view with the same name already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewItem.Refresh">
            <summary>
            Refreshes the viewItem and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewItem.ChangeId(System.Guid)">
            <summary>
            Changes the id of the current viewitem
            </summary>
            <param name="id">The new id for this object</param>
            <exception cref="T:VideoOS.Management.VmoClient.ViewItemUpdateException">Thrown if an item already exists with same id as <paramref name="id"/></exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if deleted event have occurred earlier</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.CustomViewItem">
            <summary>
            The <b>CustomViewItem</b> object represents a user defined view item.
            It is used to in the process of creating a new view.
            </summary>
            <remarks>
            A CustomViewItem
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CustomViewItem.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CustomViewItem.DefinitionXml">
            <summary>
            Xml that follows the standard xml structure of views. Use the VideoHandling component
            under VideoOS.Common.SharedComponent to construct or edit the Xml.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewLayout.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create view layout based on a generic object
            </summary>
            <param name="internalId">Id of the view layout.</param>
            <param name="objectProperties">View layout properties.</param>
            <param name="relations">View layout relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded.  Always false since only existing view layouts is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ViewLayout.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ViewLayout.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ViewLayout.DefinitionXml">
            <summary>
            Xml that follows the standard xml structure of views. Use the VideoHandling component
            under VideoOS.Common.SharedComponent to construct or edit the Xml.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ViewLayout.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ViewLayout.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ViewLayout.UpdateCustomProperties">
            <summary>
            Updates custom properties on the site
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SiteConnector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.SiteConnector"/> class.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SiteConnector.#ctor(VideoOS.Management.VmoClient.ISiteAddressCache)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.SiteConnector"/> class using the passed <see cref="T:VideoOS.Management.VmoClient.ISiteAddressCache"/> object as address cache (dependency injection for test purpose).
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SiteConnector.GetServerConnection(VideoOS.Management.VmoClient.ISite,System.Uri@)">
            <summary>
            Obtains a connected <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> to the specified <see cref="T:VideoOS.Management.VmoClient.ISite"/> based on the addresses configured for the site, using the identity of the current thread.
            </summary>
            <param name="site">ManagementServer, MasterSite or a SlaveSite</param>
            <param name="returnUri">When this method returns, contains an instance of the <see cref="T:System.Uri"/> class containing the address used for succcessfully connecting to the site; otherwise <c>null</c>.</param>
            <returns>A connected instance of the <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> if a connection was successfully obtained; otherwise <c>null</c>.</returns>
            <remarks>
            This function will try all the addresses configured for the site when trying to obtain a connection to the site
            but will prefer an address from the site address cache passed to the <see cref="T:VideoOS.Management.VmoClient.SiteConnector"/> in the constructor.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SiteConnector.GetServerConnection(VideoOS.Management.VmoClient.ISite,System.String,System.Security.SecureString,System.Uri@)">
            <summary>
            Obtains a connected <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> to the specified <see cref="T:VideoOS.Management.VmoClient.ISite"/> based on the addresses configured for the site, using the specified credentials.
            </summary>
            <param name="site">ManagementServer, MasterSite or a SlaveSite</param>
            <param name="userName">The user name to use when connecting to the specified site.</param>
            <param name="password">An instance of the <see cref="T:System.Security.SecureString"/> containing the password to use when connecting to the specified site.</param>
            <param name="returnUri">When this method returns, contains an instance of the <see cref="T:System.Uri"/> class containing the address used for succcessfully connecting to the site; otherwise <c>null</c>.</param>
            <returns>A connected instance of the <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> if a connection was successfully obtained; otherwise <c>null</c>.</returns>
            <remarks>
            This function will try all the addresses configured for the site when trying to obtain a connection to the site
            but will prefer an address from the site address cache passed to the <see cref="T:VideoOS.Management.VmoClient.SiteConnector"/> in the constructor.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SiteConnector.GetServerConnection(VideoOS.Management.VmoClient.ISite,System.String,System.String,System.Uri@)">
            <summary>
            Obtains a connected <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> to the specified <see cref="T:VideoOS.Management.VmoClient.ISite"/> based on the addresses configured for the site, using the specified credentials, using the identity of the current thread.
            </summary>
            <param name="site">ManagementServer, MasterSite or a SlaveSite</param>
            <param name="userName">The user name to use when connecting to the specified site.</param>
            <param name="password">The password to use when connecting to the specified site.</param>
            <param name="returnUri">When this method returns, contains an instance of the <see cref="T:System.Uri"/> class containing the address used for succcessfully connecting to the site; otherwise <c>null</c>.</param>
            <returns>A connected instance of the <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> if a connection was successfully obtained; otherwise <c>null</c>.</returns>
            <remarks>
            This function will try all the addresses configured for the site when trying to obtain a connection to the site
            but will prefer an address from the site address cache passed to the <see cref="T:VideoOS.Management.VmoClient.SiteConnector"/> in the constructor.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SiteConnector.GetServerConnectionWithExceptions(VideoOS.Management.VmoClient.ISite,System.Uri@,System.Exception@)">
            <summary>
            Obtains a connected <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> to the specified <see cref="T:VideoOS.Management.VmoClient.ISite"/> based on the addresses configured for the site, using the identity of the current thread.
            </summary>
            <param name="site">ManagementServer, MasterSite or a SlaveSite</param>
            <param name="returnUri">When this method returns, contains an instance of the <see cref="T:System.Uri"/> class containing the address used for succcessfully connecting to the site; otherwise <c>null</c>.</param>
            <param name="exception">When this method returns, contains an exception from one of the failed connection attempts if the function fails (return <c>null</c>); otherwise <c>null</c>.</param>
            <returns>A connected instance of the <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> if a connection was successfully obtained; otherwise <c>null</c>.</returns>
            <remarks>
            This function will try all the addresses configured for the site when trying to obtain a connection to the site
            but will prefer an address from the site address cache passed to the <see cref="T:VideoOS.Management.VmoClient.SiteConnector"/> in the constructor.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SiteConnector.GetServerConnectionWithExceptions(VideoOS.Management.VmoClient.ISite,System.String,System.String,System.Uri@,System.Exception@)">
            <summary>
            Obtains a connected <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> to the specified <see cref="T:VideoOS.Management.VmoClient.ISite"/> based on the addresses configured for the site, using the specified credentials.
            </summary>
            <param name="site">ManagementServer, MasterSite or a SlaveSite</param>
            <param name="userName">The user name to use when connecting to the specified site.</param>
            <param name="password">An instance of the <see cref="T:System.Security.SecureString"/> containing the password to use when connecting to the specified site.</param>
            <param name="returnUri">When this method returns, contains an instance of the <see cref="T:System.Uri"/> class containing the address used for succcessfully connecting to the site; otherwise <c>null</c>.</param>
            <param name="exception">When this method returns, contains an exception from one of the failed connection attempts if the function fails (return <c>null</c>); otherwise <c>null</c>.</param>
            <returns>A connected instance of the <see cref="T:VideoOS.Management.VmoClient.VmoClient"/> if a connection was successfully obtained; otherwise <c>null</c>.</returns>
            <remarks>
            This function will try all the addresses configured for the site when trying to obtain a connection to the site
            but will prefer an address from the site address cache passed to the <see cref="T:VideoOS.Management.VmoClient.SiteConnector"/> in the constructor.
            </remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.View">
            <summary>
            The <b>View</b> object represents one view. 
            </summary>
            <remarks>
            There are monitor views, private views and shared views. 
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.#ctor(VideoOS.Management.VmoClient.ViewGroup,VideoOS.Management.VmoClient.CustomViewItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.View"/> class specifying the <see cref="T:VideoOS.Management.VmoClient.ViewGroup"/> to which the <see cref="T:VideoOS.Management.VmoClient.View"/> belongs and the content <see cref="P:VideoOS.Management.VmoClient.View.CustomViewItem">view items</see>.
            </summary>
            <param name="viewGroup">The <see cref="T:VideoOS.Management.VmoClient.ViewGroup"/> to which the view belongs.</param>
            <param name="customViewItems">The content view items.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.#ctor(VideoOS.Management.VmoClient.ViewGroup,System.Guid,VideoOS.Management.VmoClient.CustomViewItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.View"/> class specifying the <see cref="T:VideoOS.Management.VmoClient.ViewGroup"/> to which the <see cref="T:VideoOS.Management.VmoClient.View"/> belongs and the content <see cref="P:VideoOS.Management.VmoClient.View.CustomViewItem">view items</see>.
            </summary>
            <param name="viewGroup">The <see cref="T:VideoOS.Management.VmoClient.ViewGroup"/> to which the view belongs.</param>
            <param name="customId">The id for the view.</param>
            <param name="customViewItems">The content view items.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.String,VideoOS.Management.VmoClient.CustomViewItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.View"/> class with a custom id - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="viewGroupId">The id of the view group to which the view belongs.</param>
            <param name="customViewItems">The content view items.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create view  based on a generic object
            </summary>
            <param name="internalId">Id of the view .</param>
            <param name="objectProperties">View  properties.</param>
            <param name="relations">View  relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded.  Always false since only existing view s is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.DefinitionXml">
            <summary>
            Xml that follows the standard xml structure of views. Use the VideoHandling component
            under VideoOS.Common.SharedComponent to construct or edit the Xml.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.ViewGroupId">
            <summary>
            Internal method to get the view group id.
            </summary>
            <value>The id og the view group.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.MonitorId">
            <summary>
            Internal method to get the monitor id.
            </summary>
            <value>The id og the monitor.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.VideoWallId">
            <summary>
            Internal method to get the video wall id.
            </summary>
            <value>The id og the video wall.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.View.ViewItems">
            <summary>
            Gets the view items.
            </summary>
            <value>The view items.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.ApplyView(VideoOS.Management.VmoClient.View)">
            <summary>
            Sets the view to another view, including layout and all items
            </summary>
            <param name="view">The source view</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.Clear">
            <summary>
            Clear all view items in the view.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.Refresh">
            <summary>
            Refreshes the view and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ViewNotFoundException">This expection is thrown if the view have been deleted.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.Create">
            <summary>
            Create the view
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.ViewCreationException">A view with the same name already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.Delete">
            <summary>
            Delete the view
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingViewException">This error occurred when deleting a view that doesn't exist.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.View.Update">
            <summary>
            Apply view changes to database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ViewUpdateException">This expection is thrown when updating a view that doesn't exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ViewRenameException">This exception is thrown when a view with the same name already exists</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ServerVersions">
            <summary>
            Class containing relevant <see cref="T:VideoOS.Management.VmoClient.ServerVersion"/> instances 
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.NonCachedVmoObject.ObjectProperties">
            <summary>
            Contains all the properties of the object
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.NonCachedVmoObject.PropertiesLoaded">
            <summary>
            Method is called when properties is changed by the framework.
            Can be used to populate xml based objects on the entity.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.NonCachedVmoObject.Undo">
            <summary>
            Revert changes which have been done since the object was last received from the database.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.NonCachedVmoObject.IsDirty">
            <summary>
            Specifies if the object have been changed.
            </summary>
            <returns>True if it has been changed, false if not</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.NonCachedVmoObject.IsCreated">
            <summary>
            Specifies if the object have been created.
            </summary>
            <remarks>True if the it have been created, false if not.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.NonCachedVmoObject.IsDeleted">
            <summary>
            Specifies if the object have been deleted.
            </summary>
            <remarks>
            True if the it have been deleted, false if not. Bookmarks don't get deleted by Device.
            So if related device get deleted it will not mark the bookmark as deleted.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.NonCachedVmoObject.ThrowIfCheckVersionFail(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Throws <see cref="T:System.NotSupportedException"/> if the actual server version is not &gt;= the version passed in <paramref name="requiredVersion"/>.
            </summary>
            <param name="requiredVersion">The version to compare with the actual server version.</param>
            <exception cref="T:System.NotSupportedException">The server version is &lt; <paramref name="requiredVersion"/>.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.NonCachedVmoObject.GetPropertyValue``1(System.String)">
            <summary>
            Get a property from the property collection
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="key">The key of the property</param>
            <returns>The value if exists or default(T) if not</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.NonCachedVmoObject.SetPropertyValue``1(System.String,``0)">
            <summary>
            Set a property in the property collection
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="key">The key of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.NonCachedVmoObject.CustomProperties">
            <summary>
            Gets the custom properties.<br/>
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="P:VideoOS.Management.VmoClient.NonCachedVmoObject.IsCustomPropertiesSupported"/> is returning false.</exception>
            <remarks>Accessing this collection is only supported if <see cref="P:VideoOS.Management.VmoClient.NonCachedVmoObject.IsCustomPropertiesSupported"/> returns true.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.NonCachedVmoObject.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return true if custom properties is supported, returns false if custom properties is not supported.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.NonCachedVmoObject.GetNestedPropertyValue``1(System.String,System.String)">
            <summary>
            Get a property from the nested property collection.
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="nestedPropertiesCollectionName">The name of the nested properties collection to set the property value in.</param>
            <param name="key">The key of the property</param>
            <returns>The value if exists or default(T) if not</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.NonCachedVmoObject.SetNestedPropertyValue``1(System.String,System.String,``0)">
            <summary>
            Sets a property in the nested property collection.
            Nested properties are not covered by the <see cref="M:VideoOS.Management.VmoClient.NonCachedVmoObject.IsDirty"/> check and the <see cref="M:VideoOS.Management.VmoClient.NonCachedVmoObject.Undo"/> method at the moment,
            so avoid exposing setters for nested properties.
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="nestedPropertiesCollectionName">The name of the nested properties collection to set the property value in.</param>
            <param name="key">The key of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.GenericRepositoryFunctions">
            <summary>
            This class contains server call that needs to either update repositories or properties on a VmoObject
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObjectIntBased.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            Custom properties is not supported for this object type
            </summary>
            <returns>Always false.</returns>
        </member>
        <member name="T:VideoOS.Management.VmoClient.VmoMemberCollection`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObjectGuidBased.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObjectSecurity.Allow(VideoOS.Management.VmoClient.PermissionSetBase,System.String[])">
            <summary>
            Allows the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="identities">An array of identity names that are to be given the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObjectSecurity.Deny(VideoOS.Management.VmoClient.PermissionSetBase,System.String[])">
            <summary>
            Allows the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="identities">An array of identity names that are to be given the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObjectSecurity.Revoke(VideoOS.Management.VmoClient.PermissionSetBase,System.String[])">
            <summary>
            Revokes the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="identities">An array of identity names for whom to revoke the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObjectSecurity.EnumPermissions``1(VideoOS.Management.VmoClient.PermissionSetBase)">
            <summary>
            Gets the specified permissions for this <see cref="T:VideoOS.Management.VmoClient.VmoObject"/> instance.
            </summary>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.PermissionSetBase"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.PermissionInfo"/> instances for this instance.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObjectSecurity.EnumPermissions``1(System.String,VideoOS.Management.VmoClient.PermissionSetBase)">
            <summary>
            Gets the specified permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.VmoObject"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.PermissionSetBase"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.PermissionInfo"/> instances for this instance.</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.Read">
            <summary>
            The ability to read a camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.Edit">
            <summary>
            The ability to change settings on a camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ViewLive">
            <summary>
            The ability to view live on a camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.Playback">
            <summary>
            The ability to playback recordings on a camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ReadRemoteRecordings">
            <summary>
            The ability to read remote recordings stored on for example a edge storage
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ReadSequences">
            <summary>
            The ability to read recording sequences
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.SmartSearch">
            <summary>
            The ability to use smart functionality on the camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.Export">
            <summary>
            The ability to export video from the camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.CreateBookmark">
            <summary>
            The ability to create bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ReadBookmark">
            <summary>
            The ability to read bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.EditBookmark">
            <summary>
            The ability to edit bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.DeleteBookmark">
            <summary>
            The ability to delete bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.CreateEvidenceLock">
            <summary>
            The ability to create evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ReadEvidenceLock">
            <summary>
            The ability to read evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.DeleteEvidenceLock">
            <summary>
            The ability to delete evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.AuxCommands">
            <summary>
            The ability to send aux commands to the camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.PtzControl">
            <summary>
            The ability to control ptz on the camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ActivatePtzPresets">
            <summary>
            The ability to activate ptz presets
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ManagePresetAndPatrolling">
            <summary>
            The ability to manage PTZ presets and patrolling profiles on the camera
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ManageLockPreset">
            <summary>
            The ability to lock a PTZ preset so it can't be modified without lock permission
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ReservePtzSession">
            <summary>
            The ability to reserve a PTZ session so it can't be taken over by other users
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.ReleasePtzSession">
            <summary>
            The ability to release a reserved PTZ session
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.StartManualRecording">
            <summary>
            The ability start recording manually
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.StopManualRecording">
            <summary>
            The ability to stop recording started manually
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.DeleteRecordings">
            <summary>
            The ability to delete recordings
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.LiftPrivacyMasking">
            <summary>
            The ability to lift privacy masking
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.CameraDevicePermissionSet.AdministrateSecurity">
            <summary>
            The ability to administrate security on a video wall
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevicePermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevicePermissionSet.#ctor(VideoOS.Management.VmoClient.CameraDevicePermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.CameraDevicePermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.CameraDevicePermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.InputDevicePermissionSet.Read">
            <summary>
            The ability to read a Input
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.InputDevicePermissionSet.Edit">
            <summary>
            The ability to change settings on a Input
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.InputDevicePermissionSet.AdministrateSecurity">
            <summary>
            The ability to administrate security on a video wall
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevicePermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.InputDevicePermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevicePermissionSet.#ctor(VideoOS.Management.VmoClient.InputDevicePermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.InputDevicePermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.InputDevicePermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.InputDevicePermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.Read">
            <summary>
            The ability to read a Metadata
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.Edit">
            <summary>
            The ability to change settings on a Metadata
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.Live">
            <summary>
            The ability to listen on a Metadata
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.Playback">
            <summary>
            The ability to playback recordings on a Metadata
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.ReadRemoteRecordings">
            <summary>
            The ability to read remote recordings stored on for example a edge storage
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.ReadSequences">
            <summary>
            The ability to read recording sequences
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.Export">
            <summary>
            The ability to export video from the Metadata
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.CreateEvidenceLock">
            <summary>
            The ability to create evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.ReadEvidenceLock">
            <summary>
            The ability to read evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.DeleteEvidenceLock">
            <summary>
            The ability to delete evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.StartManualRecording">
            <summary>
            The ability start recording manually
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.StopManualRecording">
            <summary>
            The ability to stop recording started manually
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.DeleteRecordings">
            <summary>
            The ability to delete recordings
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.AdministrateSecurity">
            <summary>
            The ability to administrate security on a video wall
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.#ctor(VideoOS.Management.VmoClient.MetadataDevicePermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.MetadataDevicePermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MetadataDevicePermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.Read">
            <summary>
            The ability to read a Microphone
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.Edit">
            <summary>
            The ability to change settings on a Microphone
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.Listen">
            <summary>
            The ability to listen on a Microphone
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.Playback">
            <summary>
            The ability to playback recordings on a Microphone
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.ReadRemoteRecordings">
            <summary>
            The ability to read remote recordings stored on for example a edge storage
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.ReadSequences">
            <summary>
            The ability to read recording sequences
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.Export">
            <summary>
            The ability to export video from the Microphone
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.CreateBookmark">
            <summary>
            The ability to create bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.ReadBookmark">
            <summary>
            The ability to read bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.EditBookmark">
            <summary>
            The ability to edit bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.DeleteBookmark">
            <summary>
            The ability to delete bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.CreateEvidenceLock">
            <summary>
            The ability to create evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.ReadEvidenceLock">
            <summary>
            The ability to read evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.DeleteEvidenceLock">
            <summary>
            The ability to delete evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.StartManualRecording">
            <summary>
            The ability start recording manually
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.StopManualRecording">
            <summary>
            The ability to stop recording started manually
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.DeleteRecordings">
            <summary>
            The ability to delete recordings
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.AdministrateSecurity">
            <summary>
            The ability to administrate security on a video wall
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.#ctor(VideoOS.Management.VmoClient.MicrophoneDevicePermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.MicrophoneDevicePermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.MicrophoneDevicePermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.OutputDevicePermissionSet.Read">
            <summary>
            The ability to read a Output
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.OutputDevicePermissionSet.Edit">
            <summary>
            The ability to change settings on a Output
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.OutputDevicePermissionSet.Activate">
            <summary>
            The ability to activate on a Output
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.OutputDevicePermissionSet.AdministrateSecurity">
            <summary>
            The ability to administrate security on a video wall
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevicePermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevicePermissionSet.#ctor(VideoOS.Management.VmoClient.OutputDevicePermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.OutputDevicePermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.OutputDevicePermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.Read">
            <summary>
            The ability to read a Speaker
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.Edit">
            <summary>
            The ability to change settings on a Speaker
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.Listen">
            <summary>
            The ability to listen on a Speaker
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.Speak">
            <summary>
            The ability to speak on a Speaker
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.Playback">
            <summary>
            The ability to playback recordings on a Speaker
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.ReadRemoteRecordings">
            <summary>
            The ability to read remote recordings stored on for example a edge storage
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.ReadSequences">
            <summary>
            The ability to read recording sequences
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.Export">
            <summary>
            The ability to export video from the Speaker
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.CreateBookmark">
            <summary>
            The ability to create bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.ReadBookmark">
            <summary>
            The ability to read bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.EditBookmark">
            <summary>
            The ability to edit bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.DeleteBookmark">
            <summary>
            The ability to delete bookmarks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.CreateEvidenceLock">
            <summary>
            The ability to create evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.ReadEvidenceLock">
            <summary>
            The ability to read evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.DeleteEvidenceLock">
            <summary>
            The ability to delete evidence locks
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.StartManualRecording">
            <summary>
            The ability start recording manually
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.StopManualRecording">
            <summary>
            The ability to stop recording started manually
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.DeleteRecordings">
            <summary>
            The ability to delete recordings
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.AdministrateSecurity">
            <summary>
            The ability to administrate security on a video wall
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.#ctor(VideoOS.Management.VmoClient.SpeakerDevicePermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.SpeakerDevicePermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SpeakerDevicePermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet.Read">
            <summary>
            The ability to read a public view group.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet.Edit">
            <summary>
            The ability to change a public view group.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet.Delete">
            <summary>
            The ability to delete a public view group.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet.Operate">
            <summary>
            The ability to create, modify or delete items in a public view group.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet.AdministrateSecurity">
            <summary>
            The ability to change security in a public view group.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet.#ctor(VideoOS.Management.VmoClient.PublicViewGroupPermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.PublicViewGroupPermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PublicViewGroupPermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="T:VideoOS.Management.VmoClient.SitePermissionSet">
            <summary>
            The SitePermissionSet object represents a set of
            site permissions.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.SitePermissionSet.Read">
            <summary>
            The ability to read a site
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SitePermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SitePermissionSet.#ctor(VideoOS.Management.VmoClient.SitePermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.SitePermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.SitePermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.SitePermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="T:VideoOS.Management.VmoClient.SitePermissionSetValue">
            <summary>
            The SitePermissionSetValue enumeration is a list of constant values that
            specify all the site permissions.
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.SitePermissionSetValue.Read">
            <summary>
            The ability to read a site
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet">
            <summary>
            The UserDefinedEventPermissionSet object represents a set of 
            user-defined event permissions.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet.Read">
            <summary>
            The ability to read a user-defined event
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet.Write">
            <summary>
            The ability to change a user-defined event
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet.Delete">
            <summary>
            The ability to delete a user-defined event.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet.TriggerEvent">
            <summary>
            The ability to trigger a user-defined event.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet.AdministrateSecurity">
            <summary>
            The ability to trigger a user-defined event.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet.#ctor(VideoOS.Management.VmoClient.UserDefinedEventPermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.UserDefinedEventPermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.UserDefinedEventPermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="T:VideoOS.Management.VmoClient.UserDefinedEventPermissionSetValue">
            <summary>
            The UserDefinedEventPermissionSetValue enumeration is a list of constant values that
            specify all the user-defined event permissions.
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.UserDefinedEventPermissionSetValue.Read">
            <summary>
            The ability to read a user-defined event
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.UserDefinedEventPermissionSetValue.Edit">
            <summary>
            The ability to change a user-defined event
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.UserDefinedEventPermissionSetValue.Delete">
            <summary>
            The ability to delete a user-defined event
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.UserDefinedEventPermissionSetValue.Trigger">
            <summary>
            The ability to trigger a user-defined event.
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.UserDefinedEventPermissionSetValue.AdministrateSecurity">
            <summary>
            The ability to adminiter security on a user-defined event.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPermissionSet.Read">
            <summary>
            The ability to read a video wall
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPermissionSet.Write">
            <summary>
            The ability to change a video wall
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPermissionSet.Delete">
            <summary>
            The ability to delete a video wall
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPermissionSet.Operate">
            <summary>
            The ability to operate a video wall
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPermissionSet.AdministrateSecurity">
            <summary>
            The ability to administrate security on a video wall
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPermissionSet.Playback">
            <summary>
            Right to use (view and manipulate) the playback pane in the SmartWall.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPermissionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.VideoWallPermissionSet"/> object.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPermissionSet.#ctor(VideoOS.Management.VmoClient.VideoWallPermission)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.VideoWallPermissionSet"/> object.
            </summary>
            <param name="permission">
            A <see cref="T:VideoOS.Management.VmoClient.VideoWallPermission"/> object that specifies a single permission
            for a set of permissions
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPermissionSet.SupportedPermissions(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Returns all permissions that's supported by the specified version
            </summary>
            <param name="version">Version of the server</param>
            <returns>Permission set where all checked permissions are supported</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.#ctor(VideoOS.Management.VmoClient.VideoWall)">
            <summary>
            Construct a video wall preset
            </summary>
            <param name="videoWall">The video wall</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.#ctor(VideoOS.Management.VmoClient.VideoWall,System.Guid)">
            <summary>
            Construct a video wall preset with a custom id.
            </summary>
            <param name="videoWall">The video wall.</param>
            <param name="customId">Custom id of the video wall preset.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Guid)">
            <summary>
            Constructs a video wall preset with a custom id - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="videoWallId">The id of the video wall this preset belongs to.</param>
            <param name="customId">Custom id of the video wall.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Constructs a video wall preset - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="videoWallId">The id of the video wall this preset belongs to.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create video wall preset based on a generic object
            </summary>
            <param name="internalId">Id of the video wall preset.</param>
            <param name="objectProperties">Video wall preset properties.</param>
            <param name="relations">Video wall preset relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new video wall preset is created, false when an existing Video wall preset is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPreset.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPreset.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPreset.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPreset.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPreset.VideoWall">
            <summary>
            The video wall the video wall preset is part of.
            </summary>
            <value>The video wall.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPreset.VideoWallId">
            <summary>
            Internal method to get the video wall id.
            </summary>
            <value>The id og the video wall.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWallPreset.MonitorPresets">
            <summary>
            The monitor presets.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Accessing this collection is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion" /> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.Activate">
            <summary>
            Activates the video wall preset on each monitor on the video wall
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallPresetNotFoundException">The video wall preset have been deleted</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">Thrown if the monitor haven't been created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.Refresh">
            <summary>
            Refreshes the video wall preset and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallPresetNotFoundException">The video wall preset has been deleted</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.Create">
            <summary>
            Create the video wall preset and a monitor preset with same name on all monitors on the video wall
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallPresetNoVideoWallException">The video wall does not exists</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallPresetCreationException">A video wall preset with the same name already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.Delete">
            <summary>
            Delete the video wall preset and a monitor preset with the same name on all monitors on the video wall
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingVideoWallPresetException">The video wall preset does not exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWallPreset.Update">
            <summary>
            Apply video wall preset changes to database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallPresetUpdateException">The video wall preset does not exists</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallPresetRenameException">A video wall preset with the same name already exists</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.Monitor">
            <summary>
            The <b>Monitor</b> object represents one monitor in a video wall.
            </summary>
            <remarks>
            A monitor is a sub part of a video wall.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.#ctor(VideoOS.Management.VmoClient.VideoWall)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.Monitor"/> class.
            </summary>
            <param name="videoWall">The video wall.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.#ctor(VideoOS.Management.VmoClient.VideoWall,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.Monitor"/> class with a custom id.
            </summary>
            <param name="videoWall">The video wall.</param>
            <param name="customId">Custom id of the monitor.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.Monitor"/> class with a custom id - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="videoWallId">The id of the video wall this monitor instance belongs to.</param>
            <param name="customId">Custom id of the monitor.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.Monitor"/> class - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
            <param name="videoWallId">The id of the video wall this preset belongs to.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create monitor based on a generic object
            </summary>
            <param name="internalId">Id of the monitor.</param>
            <param name="objectProperties">Monitor properties.</param>
            <param name="relations">Monitor relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new monitor is created, false when an existing monitor is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.AspectRatio">
            <summary>
            Gets or sets the aspect ratio.
            </summary>
            <value>The aspect ratio.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.MonitorSize">
            <summary>
            Gets or sets the size of the monitor.
            </summary>
            <value>The size of the monitor.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.EmptyViewItems">
            <summary>
            Gets or sets the empty view items.
            </summary>
            <value>The empty view items.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.InsertionMethod">
            <summary>
            Gets or sets the insertion method.
            </summary>
            <value>The insertion method.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.NoLayout">
            <summary>
            Gets or sets the no layout.
            </summary>
            <value>The no layout.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.VideoWall">
            <summary>
            The video wall the monitor is part of.
            </summary>
            <value>The video wall.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.VideoWallId">
            <summary>
            Internal method to get the video wall id.
            </summary>
            <value>The id og the video wall.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.ViewId">
            <summary>
            Internal method to get the view id.
            </summary>
            <value>The id og the view.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.State">
            <summary>
            Gets the current monitor state (xml-string representing client-side MonitorState object).
            </summary>
            <remarks>The max length is 2000 chars.</remarks>
            <value>The monitor state xml.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.View">
            <summary>
            The monitor view.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Monitor.MonitorPresets">
            <summary>
            The monitor presets
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.Refresh">
            <summary>
            Refreshes the monitor and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MonitorNotFoundException">This expection is thrown if the monitor have been deleted.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.Create">
            <summary>
            Create the monitor
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.MonitorCreationException">A monitor with the same name already exists</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallNotFoundException">The video wall has been deleted.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.Delete">
            <summary>
            Delete the monitor
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingMonitorException">This error occurred when deleting a monitor that doesn't exist.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.Update">
            <summary>
            Apply monitor changes to database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MonitorUpdateException">This expection is thrown when updating a monitor that doesn't exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.MonitorRenameException">This exception is thrown when a monitor with the same name already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.ActivateCameras(System.Guid[],System.Guid[],System.Int32,System.Guid)">
            <summary>
            Apply a new layout to the monitors view and set cameras to the view from a given position.
            Content of existing viewitems that lies before the fromPosition will not be affected.
            Content of existing viewitems that lies after the fromPosition will eighter be overwrited, moved
            or be unthouched depending on what InsertionMethod the monitor has and the number of cameras.
            </summary>
            <param name="cameraIds">Array of camera Ids</param>
            <param name="cameraGroupsIds">Array of camera devicegroup ids</param>
            <param name="fromPosition">Zero-based position number</param>
            <param name="layoutId">Id of the layout you wish to change to</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">Thrown if the monitor haven't been created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.ActivateCameras(System.Guid[],System.Guid[],System.Int32)">
            <summary>
            Apply cameras to the monitors view from a given position.
            Content of existing viewitems that lies before the fromPosition will not be affected.
            Content of existing viewitems that lies after the fromPosition will eighter be overwrited, moved
            or be unthouched depending on what InsertionMethod the monitor has and the number of cameras.
            </summary>
            <param name="cameraIds">Array of camera Ids</param>
            <param name="cameraGroupsIds">Array of camera devicegroup ids</param>
            <param name="fromPosition">Zero-based position number</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">Thrown if the monitor haven't been created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.RemoveCameras(System.Guid[],System.Guid[])">
            <summary>
            Remove cameras from a monitors view. This will remove all the camers passed in parameters no matter there position in the layout.
            </summary>
            <param name="cameraIds">Array of camera Ids</param>
            <param name="cameraGroupsIds">Array of camera devicegroup ids</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">Thrown if the monitor haven't been created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks><see cref="M:VideoOS.Management.VmoClient.Monitor.RemoveCameras(System.Guid[],System.Guid[])"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.ApplyViewItemsXml(System.String[],System.Int32)">
            <summary>
            Apply ViewItemDefinitionXmls to the monitors view from a given position.
            Content of existing viewitems that lies before the fromPosition will not be affected.
            Content of existing viewitems that lies after the fromPosition will eighter be overwrited, moved
            or be unthouched depending on what InsertionMethod the monitor has and the number of cameras.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">Thrown if the monitor haven't been created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.ApplyMonitorState(System.String)">
            <summary>
            Apply a state to the monitors.
            The monitor state contains the current smart client monitor state, including worskapce state, and playback settings.
            </summary>
            <param name="xmlState">The new monitor state.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">Thrown if the monitor haven't been created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks><see cref="M:VideoOS.Management.VmoClient.Monitor.ApplyMonitorState(System.String)"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.ApplyLayout(System.Guid)">
            <summary>
            Apply a new layout to the monitor's view
            </summary>
            <param name="layoutId"></param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">Thrown if the monitor haven't been created</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Monitor.DisplayText(System.String,System.Int32,System.Guid)">
            <summary>
            Display text at the monitor in specified layout, at specified position. The underlying monitor instance becomes refreshed.
            </summary>
            <param name="message">Text message to display.</param>
            <param name="viewPosition">View item position (0-based).</param>
            <param name="layoutId">Monitor layout id to switch to. If <c>layoutId</c>layoutId is <c>Guid.Empty</c>, then layout would not be updated.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">Thrown if the feature isn't licensed</exception>
            <exception cref="T:VideoOS.Management.VmoClient.ObjectNotCreatedException">Thrown if the monitor haven't been created</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks><see cref="M:VideoOS.Management.VmoClient.Monitor.DisplayText(System.String,System.Int32,System.Guid)"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.AspectRatio">
            <summary>
            The different aspect ratios
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.PresetLayoutMethod">
            <summary>
            The different preset layout methods
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ElementInsertionMethod">
            <summary>
            The insert methods
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.Location">
            <summary>
            Monitor locations
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.VideoWall">
            <summary>
            The <b>VideoWall</b> object represents a video wall. 
            A video wall consists of monitors and presets.
            </summary>
            <remarks>TODO: Consider deep refresh to easy refresh on activate video wall preset</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.#ctor(VideoOS.Management.VmoClient.ManagementServer)">
            <summary>
            Construct a video wall. 
            </summary>
            <param name="managementServer">The management server.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.#ctor(VideoOS.Management.VmoClient.ManagementServer,System.Guid)">
            <summary>
            Construct a video wall with a custom id. 
            </summary>
            <param name="managementServer">The management server.</param>
            <param name="customId">Custom id of the video wall.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Guid)">
            <summary>
            Constructs a VideoWall with a custom id - required for testability.
            </summary>
            <param name="repositories">Link to repositories.</param>
            <param name="customId">Custom id of the video wall.</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Constructs a VideoWall - required for testability.
            </summary>
            <param name="repositories">The repositories object</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create video walls based on a generic object
            </summary>
            <param name="internalId">Id of the video wall.</param>
            <param name="objectProperties">Video wall properties.</param>
            <param name="relations">Video wall relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new video wall is created, false when an existing video wall is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.StatusText">
            <summary>
            Gets or sets if there should be a status text on the video wall.
            </summary>
            <value>A <see cref="T:System.Boolean"/> value that specifies if there should be a status text.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.TitleBar">
            <summary>
            Gets or sets what kind of titlebar the video wall should have.
            </summary>
            <value>The title bar.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.Refresh">
            <summary>
            Refreshes the video wall and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.Create">
            <summary>
            Create the video wall
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallCreationException">A video wall with the same name already exists</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.Delete">
            <summary>
            Delete the video wall
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.RemoveNonExistingVideoWallException">This error occurred when deleting a video wall that doesn't exist.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.Update">
            <summary>
            Apply video wall changes to the database
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallUpdateException">This expection is thrown when updating a video wall that doesn't exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VideoWallRenameException">This exception is thrown when a video wall with the same name already exists</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.Monitors">
            <summary>
            Gets the monitors.
            </summary>
            <value>The monitors.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VideoWall.VideoWallPresets">
            <summary>
            Gets the video wall presets.
            </summary>
            <value>The video wall presets.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.EnumPermissions">
            <summary>
            Gets all permissions for this <see cref="T:VideoOS.Management.VmoClient.VideoWall"/> instance.
            </summary>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.VideoWallPermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.VideoWall"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.EnumPermissions(VideoOS.Management.VmoClient.VideoWallPermissionSet)">
            <summary>
            Gets the specified permissions for this <see cref="T:VideoOS.Management.VmoClient.VideoWall"/> instance.
            </summary>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.VideoWallPermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.VideoWallPermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.VideoWall"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.EnumPermissions(System.String)">
            <summary>
            Gets the permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.VideoWall"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.VideoWallPermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.VideoWall"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.EnumPermissions(System.String,VideoOS.Management.VmoClient.VideoWallPermissionSet)">
            <summary>
            Gets the specified permissions for the specified user for this <see cref="T:VideoOS.Management.VmoClient.VideoWall"/> instance.
            </summary>
            <param name="identity">An identity name for whom to get permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
            <param name="permissions">A <see cref="T:VideoOS.Management.VmoClient.VideoWallPermissionSet"/> instance specifying (filter) the permissions to retrieve.</param>
            <returns>An array of <see cref="T:VideoOS.Management.VmoClient.VideoWallPermissionInfo"/> for the <see cref="T:VideoOS.Management.VmoClient.VideoWall"/>.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.Allow(VideoOS.Management.VmoClient.VideoWallPermissionSet,System.String)">
            <summary>
            Allows the specified permissions to a single identity.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="identity">An identity name that are to be given the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.Allow(VideoOS.Management.VmoClient.VideoWallPermissionSet,System.String[])">
            <summary>
            Allows the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to allow.</param>
            <param name="identities">An array of identity names that are to be given the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.Revoke(VideoOS.Management.VmoClient.VideoWallPermissionSet,System.String)">
            <summary>
            Revokes the specified permissions for a single identity.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="identity">An identity name for whom to revoke the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VideoWall.Revoke(VideoOS.Management.VmoClient.VideoWallPermissionSet,System.String[])">
            <summary>
            Revokes the specified permissions for a number of identities.
            </summary>
            <param name="permissions">The permissions to revoke.</param>
            <param name="identities">An array of identity names for whom to revoke the permissions. (Use AccountName on the form 'Domain\User' or '[VideoOS]\RoleName').</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ManagementServer">
            <summary>
            The <b>ManagementServer</b> object represents the Management Server.
            </summary>
            <remarks>
            The management server is the root of the system.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Internal constructor used by the framework to create time profile based on a generic object
            </summary>
            <param name="internalId">Id of the management server.</param>
            <param name="objectProperties">Management server properties.</param>
            <param name="relations">Management server relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new time profile is created, false when an existing time profile is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.ComputerName">
            <summary>
            Get the machine name of the Management Server.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.DomainName">
            <summary>
            Get the domain the Management Server is running under.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.LastModified">
            <summary>
            Gets the last modified date.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.LastStatusHandshake">
            <summary>
            Get the time of the last time the management server checked the address collection by
            connecting to itself by using these addesses
            </summary>
            <value>The last confirmed handshake date.</value>
            <remarks>This is used to check if the addresses specified can be used to contact the management server.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.ServiceAccount">
            <summary>
            Get the Service Account the Management Server is running under.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.SynchronizationStatus">
            <summary>
            Status of the last syncronization contact. This is 0 if the last attempt succedded.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.TimeZone">
            <summary>
            The local time zone id used on the Management Server (System.TimeZoneInfo.Local.Id)
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServer._version">
            <summary>
            Product version of Management Server.
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.ManagementServer._addresses">
            <summary>
            Addresses descriping how to connect to the Management Server. These addresses will be synchronized to master site in MFA setup
            </summary>
            <remarks>This is primarily used in the MFA setup so external clients can get info about how to connect to the server.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.MasterSite">
            <summary>
            The Master site
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.PrivateUserGroupId">
            <summary>
            Gets the private view group for the user e.g. milestone\james
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.AttachChildSite(System.Guid,VideoOS.Management.VmoClient.AddressCollection)">
            <summary>
            Attach a child site to the MFA hierachy
            </summary>
            <param name="childSiteId">Id of the child site</param>
            <param name="addresses">Addresses specifing how the server can connect to the remote site</param>
            <returns>The remote child site</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="childSiteId"/> parameter is an empty guid</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="addresses"/> is null</exception>
            <exception cref="T:VideoOS.Management.VmoClient.InvalidServerAddressException">The address uri instance represents a relative URI - this property is valid only for absolute URIs.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.InvalidServerIdException">The remote server doen't have the specified id</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteToSiteConnectionFailureException">The server is unable to connect to the remote site</exception>
            <exception cref="T:VideoOS.Management.VmoClient.InvalidServerVersionException">The remote server have different version than the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">The Management Server user doesn't have the administrator rights on the remote site</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current user doesn't have the administrator rights on the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteRemoteSiteHasMasterException">The remote site is already attched to MFA hierachy</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteRemoteSiteHasSiteAsChildException">The Management Server is part of the remote sites MFA hierachy</exception>
            <exception cref="T:VideoOS.Management.VmoClient.FeatureNotLicensedException">The feature is not license on the server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing the attach</exception>
            <remarks>The child site can be attached in a pending state if adminitrator rights aren't
            fullfilled on the remote site.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.DetachChildSite(VideoOS.Management.VmoClient.ChildSite)">
            <summary>
            Detach a child site from the MFA hierachy
            </summary>
            <param name="childSite">The child site</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="childSite"/> parameter is null</exception>
            <exception cref="T:System.ArgumentException">
            The childSite passed in parameter <paramref name="childSite"/> is not a child of this management server<br/>
            - or -
            The childSite passed in parameter <paramref name="childSite"/> is not created<br/>
            </exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteNotFoundException">The site can't be found</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current user don't have the administrator rights on the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing the detach</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.AttachMasterSite(System.Guid,VideoOS.Management.VmoClient.AddressCollection)">
            <summary>
            Attach a master site to the MFA hierachy
            </summary>
            <param name="masterSiteId">Id of the master site</param>
            <param name="addresses">Addresses specifing how the server can connect to the remote site</param>
            <returns>The remote master site</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="masterSiteId"/> parameter is an empty guid</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="addresses"/> is null</exception>
            <exception cref="T:VideoOS.Management.VmoClient.InvalidServerAddressException">The address uri instance represents a relative URI - this property is valid only for absolute URIs.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteAlreadyAttachedException">A child site with the same id is already attached to the MFA hierachy.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteMasterAlreadyAttachedException">The Management Server already have another master site.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.SiteToSiteConnectionFailureException">The server is unable to connect to the remote site</exception>
            <exception cref="T:VideoOS.Management.VmoClient.InvalidServerVersionException">The remote server have different version than the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">The Management Server user doesn't have the administrator rights on the remote site</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current user don't have the administrator rights on the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing the attach</exception>
            <remarks>The master site can be attached in a pending state if adminitrator rights aren't
            fullfilled on the remote site.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.DetachMasterSite">
            <summary>
            Detach a child site from the MFA hierachy
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.SiteNotFoundException">The master site can't be found</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current user doesn't have the administrator rights on the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing the detach</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.FullSiteSynchronization">
            <summary>
            Trigger a full syncronization of the sites in the MFA hierachy.
            </summary>
            <exception cref="T:System.UnauthorizedAccessException">The current user doesn't have the administrator rights on the Management Server</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Unknown exception occurred doing the synchronization</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.GetServiceStatus">
            <summary>
            Gets the current status of the MFA site's management server as:
            Running
            Stopped
            </summary>
            <returns>current status of the Management Server or "PendingStatus" if the status is unknown</returns>
            <exception cref="T:System.NotSupportedException">The version of the installation on the slave site is below Polar</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.QuerySystemMonitorStateSourcesByIds(System.String[])">
            <summary>
            Search for a SystemMonitorStateSources by ids
            </summary>
            <param name="ids">The sources id</param>
            <returns>The SystemMonitorStateSources</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="ids"/> contains no entries or null</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.QuerySystemMonitorStateSourcesByTypes(System.String[])">
            <summary>
            Search for a SystemMonitorStateSources by types
            </summary>
            <param name="types">The sources types</param>
            <returns>The SystemMonitorStateSources</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="types"/> contains no elements or null</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.QueryAllRuleSources">
            <summary>
            Search for all performance counter RuleSources
            </summary>
            <returns>The RuleSources</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.MarkedDataSearch(System.Guid)">
            <summary>
            Search for a MarkedData by id
            </summary>
            <param name="markedDataId">The MarkedData id</param>
            <returns>The MarkedData</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="markedDataId"/> contains a empty guid</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.MarkedDataSearch(System.String[],System.String,System.String[],System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,VideoOS.Management.VmoClient.SortOrderOption,System.Boolean)">
            <summary>
            Markeds the data search.
            </summary>
            <param name="deviceIds">The devices.</param>
            <param name="searchText">The search text.</param>
            <param name="users">The users.</param>
            <param name="createdFromTime">The created from time.</param>
            <param name="createdToTime">The created to time.</param>
            <param name="markedDataFromTime">The marked data from time.</param>
            <param name="markedDataToTime">The marked data to time.</param>
            <param name="tagTimeFromTime">The tag time from time.</param>
            <param name="tagTimeToTime">The tag time to time.</param>
            <param name="retentionExpireFrom">The retention expire from.</param>
            <param name="retentionExpireTo">The retention expire to.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="sortOrder">The sort order.</param>
            <param name="sortAscending">if set to <c>true</c> sort ascending.</param>
            <returns>
            A list of found marked data
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.CreateMarkedDataReference(VideoOS.Management.VmoClient.Device[],System.Boolean,VideoOS.Management.Common.MarkedDataDefinitions.MarkedDataTypes)">
            <summary>
            Create a MarkedData reference that can be used to create a MarkedData at a later time
            </summary>
            <param name="devices">The devices</param>
            <param name="triggerMarkedDataReferenceRequestedEvent">
            If true the build-in system event 'MarkedDataReferenceRequested' get triggered. By default it will result in start recording on the device.
            </param>
            <param name="markedDataTypes">The types of the marked data</param>
            <returns>The MarkedData reference</returns>
            <exception cref="T:VideoOS.Management.VmoClient.DeviceNotFoundException">On of the specified devices was not found on the server</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="devices"/> is null</exception>
            <exception cref="T:System.ArgumentException">One of the <paramref name="devices"/> is not created or is deleted</exception>
            <remarks>
            The 'MarkedDataReferenceRequested' is used by a default rule to start recording. This rule can be editted or
            deleted by the user or other rules can be set to be dependend on the event.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.DeleteBookmarksByDeviceIdBeforeTime(VideoOS.Management.Common.MediaStatusEntry)">
            <summary>
            Deletes the bookmarks by device identifier before the time specified.
            </summary>
            <param name="mediaStatus">Information about the media store for the device</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.UpdateLicense(System.Byte[],System.String,System.String)">
            <summary>
            Update the license
            </summary>
            <param name="license">Encrypted base64 encoded license</param>
            <param name="ownerXml">Xml containing license owner information</param>
            <param name="sitesInformation">Xml containing sites information</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="license"/> is a null reference</exception>
            <exception cref="T:System.NotSupportedException">The function is not supported in this version</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.ActivateLicense(System.String,System.String)">
            <summary>
            Activate license. Supported from version 8.0
            </summary>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.ActivateLicenseTask"/> representing the task running on the server to
            activate license.</returns>
            <param name="userName">user name to be used in activation</param>
            <param name="password">password to be used in activation</param>
            <exception cref="T:System.NotSupportedException">The function is not supported in this version</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">There was an issue activating the license.</exception>
            <remarks>Activate license is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/>
            is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.QueueAutomaticActivation">
            <summary>
            Queues automatic activation. Supported from version 8.0(10.0)
            </summary>
            <exception cref="T:System.NotSupportedException">The function is not supported in this version</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.RefreshLicenseCache">
            <summary>
            Refresh license cache. Supported from version 13.3
            </summary>
            <exception cref="T:System.NotSupportedException">The function is not supported in this version</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.UpdateMipPluginsLicenseRequestPart(System.String)">
            <summary>
            Update MIP license request on the server. Supported from version 8.0.
            </summary>
            <param name="mipLicenseRequestXml">MipPlugins license request part in XML format to be saved on the server</param>
            <exception cref="T:System.NotSupportedException">The function is not supported in this version</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">There was an issue updating MIP license.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.SetSystemSetting(System.String,System.String)">
            <summary>
            Updates a system setting in the database
            </summary>
            <param name="name">setting name</param>
            <param name="value">setting value</param>
            <exception cref="T:System.NotSupportedException">The function is not supported in this version</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">There was an issue updating the setting.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.GetSystemSetting(System.String)">
            <summary>
            Gets a system setting from the database
            </summary>
            <param name="name">setting name</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">The function is not supported in this version</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">There was an issue getting the setting.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.LastAutomaticActivationErrorMessage">
            <summary>
            Gets the error message from the last automatic license activation
            </summary>
            <exception cref="T:System.NotSupportedException">The function is not supported in this version</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">There was an issue getting the error message.</exception>]
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.IsFeatureLicensed(System.String)">
            <summary>
            Specify if a feature is licensed
            </summary>
            <param name="featureName">Name of the feature - valid feature names are specified in <see cref="T:VideoOS.Management.Common.CorporateFeature"/></param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="featureName"/> is a null reference</exception>
            <returns>true if feature is licensed; false if feature is not licensed</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.GetFeatureParameterValue(System.String,System.String)">
            <summary>
            Specified the value of a license parameter.<br/>
            e.g. the amount of Smart Client Profiles that is supported by the license is returned <br/>
            by setting <paramref name="featureName"/> to <see cref="F:VideoOS.Management.Common.CorporateFeature.SmartClientProfiles"/> <br/>
            and <paramref name="parameterName"/> to <see cref="F:VideoOS.Management.Common.CorporateLicenseParameter.SmartClientProfilesLimit"/>.
            </summary>
            <param name="featureName">The name of the feature - valid feature names are specified in <see cref="T:VideoOS.Management.Common.CorporateFeature"/></param>
            <param name="parameterName">The name of the parameter - - valid parameter names are specified in <see cref="T:VideoOS.Management.Common.CorporateLicenseParameter"/></param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="featureName"/> is a null reference <br/>
            - or -
            The <paramref name="parameterName"/> is a null reference <br/>
            </exception>
            <returns>The value of the parameter</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.Refresh">
            <summary>
            Refreshes the management server and get the latest updates from the database.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.Update">
            <summary>
            Apply management server changes to the database including custom properties.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.RecordingServers">
            <summary>
            All recorders attached to the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.FailoverServers">
            <summary>
            All failover servers attached to the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.Rules">
            <summary>
            All rules on the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.AudioMessages">
            <summary>
            All audio messages on the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.VideoWalls">
            <summary>
            All video walls on the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.UserDefinedEvents">
            <summary>
            All user defined events on the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.PluginEvents">
            <summary>
            All plug-in events on the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.MIPActions">
            <summary>
            All MIP actions on the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.TimeProfiles">
            <summary>
            All time profiles on the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.ChildSites">
            <summary>
            Sites attached to the Management Server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.AxisTunnelServers">
            <summary>
            All Axis tunnel servers on the management server
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.PublicViewGroups">
            <summary>
            All public view groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.PrivateViewGroups">
            <summary>
            All private view groups for the user that's logged in to the VmoClient
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.FailoverServerGroups">
            <summary>
            All failover server groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.MIPObjectGroups">
            <summary>
            All failover server groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.ViewLayoutGroups">
            <summary>
            All public view groups
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.BasicOwnerInformation">
            <summary>
            Collection of all Basic Owner Information
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.RetentionOptionRoleRelations">
            <summary>
            Collection of all Retention Option Role Relations
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.PerformanceStateRuleConfigurations">
            <summary>
            Collection of all Performance state rule configurations
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ManagementServer.SystemDashboardConfigurations">
            <summary>
            Collection of all System Monitor dashboard configurations
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ManagementServer.AddNotification(VideoOS.Management.VmoClient.VmoObject)">
            <summary>
            This function determines which child-objects that should be added to collections on parent objects.
            It is override on the ManagementServer since child objects don't have direct relations to the ManagementServer.
            Instead the relation to the ManagementServer is determined by that the child object don't have any relations.
            </summary>
            <param name="obj">The vmoObject recieved from the server</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.HardwareId">
            <summary>
            Gets the id of the hardware to which the device is realted.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.RecordingServerId">
            <summary>
            Gets the id of the recording server where this device is configured.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.Name">
            <summary>
            Gets or sets the name of the <see cref="T:VideoOS.Management.VmoClient.Device"/>.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.Description">
            <summary>
            Gets or sets the description of the <see cref="T:VideoOS.Management.VmoClient.Device"/>.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.Enabled">
            <summary>
            Gets or sets a boolean value indicating whether the device is enabled in the configuration.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.DeviceType">
            <summary>
            Gets the device type as one if the <see cref="P:VideoOS.Management.VmoClient.Device.DeviceType"/> enumeration values.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.DeviceIndex">
            <summary>
            Gets the device index which is unique for each device of a given type on a <see cref="P:VideoOS.Management.VmoClient.Device.Hardware"/> unit.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.GisPoint">
            <summary>
            Gets or sets the device gis point indicaling the actual position in the world.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.ShortName">
            <summary>
            Gets or sets the device short name used as name in the UI where appropriate.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.Icon">
            <summary>
            Gets or sets the device icon identity used to show the relevant device icon.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.CoverageDirection">
            <summary>
            Gets or sets the device coverage direction used to indicate the direction of the area covered by the device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.CoverageDepth">
            <summary>
            Gets or sets the device coverage depth used to indicate the depth of the area covered by the device.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.CoverageFieldOfView">
            <summary>
            Gets or sets the device coverage field of view used to indicate the coverage field of view of the device.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Device.AddDeviceLink(System.String)">
            <summary>
            Gets the device links for this device.
            </summary>
            <param name="deviceId">The device identifier.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Device.RemoveDeviceLink(System.String)">
            <summary>
            Gets the device links for this device.
            </summary>
            <param name="deviceId">The device identifier.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.Hardware">
            <summary>
            Gets the <see cref="P:VideoOS.Management.VmoClient.Device.Hardware"/> instance which this <see cref="T:VideoOS.Management.VmoClient.Device"/> is related to.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.RecordingServer">
            <summary>
            Gets the <see cref="P:VideoOS.Management.VmoClient.Device.RecordingServer"/> instance on which this <see cref="T:VideoOS.Management.VmoClient.Device"/> is configured.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Device.Refresh">
            <summary>
            Refreshes the device and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Device.Update">
            <summary>
            Apply time profile changes to the database.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">Update is not supported by the server.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Device.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on device.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroup.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroup.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroup.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.DeviceGroup.Refresh">
            <summary>
            Refreshes the content of this object from the server.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.BasicUserNotExistException">This expection is thrown if the basic user has been removed from the server.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Refreshing a Device Group is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.DeviceGroup.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on basic user.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.#ctor(System.String,VideoOS.Management.VmoClient.VmoPropertyCollection,VideoOS.Management.VmoClient.VmoRelationCollection,VideoOS.Management.VmoClient.IVmoRepositories,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.Hardware"/> class.
            </summary>
            <param name="internalId">Id of the hardware.</param>
            <param name="objectProperties">Hardware properties.</param>
            <param name="relations">Hardware relations.</param>
            <param name="repositories">Link to repositories.</param>
            <param name="isInitialized">Specifies if underlying collections should be considered loaded. True when a new hardware is created, false when an existing hardware is loaded.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.HardwareDriverId">
            <summary>
            Gets the id of the hardware driver configured for this hardware instance.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.RecordingServerId">
            <summary>
            Get the id of the recording server on which this hardware instance is configured.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.Name">
            <summary>
            Gets or sets the name of the hardware instance.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.Description">
            <summary>
            Gets or sets the description of the hardware instance.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.Enabled">
            <summary>
            Gets or sets a boolean value indicating whether the hardware is enabled in the configuration.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.Address">
            <summary>
            Gets the address of the hardware instance.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.UserName">
            <summary>
            Gets the configured user name of the hardware instance.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.ProductId">
            <summary>
            Gets the product id of the hardware instance.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.DriverNumber">
            <summary>
            Gets the driver number for the driver used by the hardware instance.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.RecordingServer">
            <summary>
            Gets the <see cref="P:VideoOS.Management.VmoClient.Hardware.RecordingServer"/> where the hardware instance is configured.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.GetActiveDriver">
            <summary>
            Gets the active <see cref="T:VideoOS.Management.VmoClient.HardwareDriver"/> that is used by the hardware.
            </summary>
            <remarks>The driver can change version if the recorder goes in failover</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.Refresh">
            <summary>
            Refreshes the hardware and get the latest updates from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.Refresh(System.Boolean)">
            <summary>
            Refreshes the hardware and get the latest updates from the database.
            </summary>
            <param name="updateRelations">True if object should be tested and possibly moved in the object hierarchy</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.Update">
            <summary>
            Apply changes to the database.<br/>
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">Update is not supported by the server.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.Delete">
            <summary>
            Delete the hardware
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.Hardware.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return false.</returns>
            <remarks>Custom Properties is not supported on hardware.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.MoveToRecordingServer(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Moves the hardware device to another recording server.
            </summary>
            <param name="destinationRecordingServerId">Id of the recording server to move the hardware device to.</param>
            <param name="destinationStorageId">Id of the storage to move the hardware device to.</param>
            <param name="ignoreSourceRecordingServer"><b>true</b> to ignore if is the recording server from which the hardware is moved is unreachable; otherwise, <b>false</b>. Only set this to <b>true</b> if it is confirmed that the source recording server is not running.</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>Move hardware to another recording server is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.<br/>
            <br/>
            Moving a hardware device to a new recording server is potentially a long running operation as the hardware must be properly stopped before moving it.<br/>
            Calling this function will therefore create a task that first stop the hardware device on the current recording server, then it makes the configuration change and finally updates
            the current and destination recording servers.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.HardwarePasswordChange(System.String)">
            <summary>
            Changes the hardware password on the device itself.
            </summary>
            <param name="password">The new password of the hardware device in a pure text format</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred earlier.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>Change hardware password is supported only if <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v13_2"/> or above.<br/>
            <br/>
            Changing password for hardware device can take some time.<br/>
            Calling this function will therefore create a task that will try to change the password on the device itself and if successful call the <see cref="M:VideoOS.Management.VmoClient.Hardware.ChangePassword(System.String)"/>
            to change the VMS password also.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.HardwareCredentialsChange(System.String,System.String)">
            <summary>
            Changes the hardware username and password on the device itself.
            </summary>
            <param name="userName">The new username that is going to be used. Not all devices support this</param>
            <param name="password">The new password of the hardware device in a pure text format</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred earlier.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>Change credentials is supported only if <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v20_1"/> or above.<br/>
            <br/>
            Changing credentials for hardware device can take some time.<br/>
            Calling this function will therefore create a task that will try to change the password on the device itself and if successful call the <see cref="M:VideoOS.Management.VmoClient.Hardware.ChangePassword(System.String)"/>
            to change the VMS password also.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.ChangePassword(System.String)">
            <summary>
            Changes the password of the hardware device in the configuration
            </summary>
            <param name="password">The new password of the hardware device in a pure text format</param>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>This is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.ReadPassword">
            <summary>
            Read the password of the hardware device
            </summary>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>This is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.Hardware.UpdateHardware(System.Int64)">
            <summary>
            Update hardware task, by detection what the physical device configuration is now.
            The detection step is called when SessionDataId = "0".
            The apply step is called when SessionDataId is value returned by the detection step.
            </summary>
            <param name="sessionDataId">Id of the saved detection information. Set to zero on detection step</param>
            <returns>Result of the detection/apply step</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.#ctor(VideoOS.Management.VmoClient.IVmoRepositories)">
            <summary>
            Initializes a new instance of the RecordingServer class - required for testability.
            </summary>
            <param name="repositories"></param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the name.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.SynchronizationTime">
            <summary>
            Gets or sets the synchronization time.
            </summary>
            <value>Time of the day when the configuration synchronization should happen with the hardware.
            The time is defined with a TimeSpan.
            Seconds and milliseconds are truncated from the TimeSpan. TimeSpan value should be less than a whole day.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.IsSynchronizationEnabled">
            <summary>
            Gets or sets if the synchronization time is enabled.
            </summary>
            <value>Sets -1 on the server if false</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified date.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.Enabled">
            <summary>
            Gets the enabled state.
            </summary>
            <value>Enabled state.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.HostName">
            <summary>
            Gets the HostName of the server.
            </summary>
            <value>The HostName.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.TimeZoneName">
            <summary>
            Gets the TimeZone Name of the server.
            </summary>
            <value>The TimeZone Name.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.MulticastSettings">
            <summary>
            Gets the MulticastSettings (internal format).
            </summary>
            <value>The MulticastSettings.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.DevicePackInfo">
            <summary>
            Gets the DevicePackInfo (internal format).
            </summary>
            <value>The DevicePackInfo.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.IsX64">
            <summary>
            Gets the bitness of the server (32 or 64 bit).
            </summary>
            <value>The bitness.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.PrimaryFailoverGroup">
            <summary>
            Gets the Primary Failover Group.
            </summary>
            <value>The Primary Failover Group.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.SecondaryFailoverGroup">
            <summary>
            Gets the Secondary Failover Group.
            </summary>
            <value>The Secondary Failover Group.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.OriginalHostName">
            <summary>
            Gets the hostname of the original recording server. Relevant when failover recording server is active.
            </summary>
            <value>The hostname of the original recording server.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.FailoverPort">
            <summary>
            Gets the port the failover service is listning in on.
            </summary>
            <value>The Failover Port.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.FailoverId">
            <summary>
            Gets the id of the the failover service, if the failover is active.
            Otherwise Guid.Empty is returned.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.IsFailoverRunning">
            <summary>
            Returns true if a failover recording server is active.
            </summary>
            <value>Returns true if a failover recording server is active.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.ScanRanges">
            <summary>
            Gets the ScanRanges (internal format).
            </summary>
            <value>The ScanRanges.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.WebserverUri">
            <summary>
            Gets the Webserver Uri.
            </summary>
            <value>The Webserver Uri.</value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.WebserverUriConfiguration">
            <summary>
            Gets the configured Webserver Uri, if any (or null).
            </summary>
            <value>The configured Webserver Uri or null.</value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.GetActiveHardwareDrivers">
            <summary>
            Get the hardware drivers in use on the recorder
            </summary>
            <returns>Currently active hardware drivers</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.Create">
            <summary>
            Creates the recording server
            </summary>
            <exception cref="T:System.NotSupportedException">The function not support. Check <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> which must be <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">
            A communication error occurred<br/>
            -
            Too many recording server exists according to the license<br/>
            </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.GetHardwareDrivers(System.Boolean)">
            <summary>
            Get the hardware drivers installed on the recorder
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <param name="usedOnly">If true only drivers that is used by the recorder is returned.</param>
            <returns>Installed hardware drivers</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>Get installed hardware drivers on a <see cref="T:VideoOS.Management.VmoClient.RecordingServer"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.GetRecordingServerInformation">
            <summary>
            Gets machine information relating to the recording server
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.QueryOtherDevicesWithMediaOnRecorder">
            <summary>
            Queries the server for the devices moved away from this recorder but still having recordings there.
            </summary>
            <returns>Devices moved away with recordings on this recorder</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the object hasn't been created or if a deleted event have occurred ealier</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <remarks>This is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.Authorize">
            <summary>
            Authorizes the recording server if it is online.
            </summary>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.AuthorizeRecordingServerTask"/> representing the task running on the server to authorize the recording server.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if a deleted event have occurred ealier; or recording server is not created.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoUnauthorizedAccessException">This expection is thrown if the user is not authorized to perform this peration.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
            <remarks>Authorizing a recording server is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.AddHardware(System.Uri,System.String,System.String,System.Int32)">
            <summary>
            Starts a task that will add the specified hardware to the recording server.
            </summary>
            <param name="address">The address of the hardware to add.</param>
            <param name="userName">The user name to use for communicating with the hardware.</param>
            <param name="password">The password to use for communicating with the hardware.</param>
            <param name="driverNumber">The driver number as returned by <see cref="P:VideoOS.Management.VmoClient.HardwareDriver.DriverNumber"/> to use for adding the hardware.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Any of the properties <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCreated"/> or <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted"/> is false.</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.AddHardware(System.Uri,System.String,System.String,System.String)">
            <summary>
            Starts a task that will add the specified hardware to the recording server.
            </summary>
            <param name="address">The address of the hardware to add.</param>
            <param name="userName">The user name to use for communicating with the hardware.</param>
            <param name="password">The password to use for communicating with the hardware.</param>
            <param name="definitionXml">The hardware definition xml.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Any of the properties <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCreated"/> or <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted"/> is false.</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.AddHardwareTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.HardwareScan(System.Uri,System.Int32[],System.String,System.String,System.Boolean)">
            <summary>
            Starts a task that will scan for a specific hardware.
            </summary>
            <param name="address">The address of the hardware to scan for</param>
            <param name="drivers">Selection of driver ids to scan for. The available driver ids can be obtaining by querying <see cref="T:VideoOS.Management.VmoClient.HardwareDriver"/> on the recording server.</param>
            <param name="userName">User name to be used in the scan</param>
            <param name="password">Password to be used in the scan</param>
            <param name="useDefaultCredentials">Use default credentials during the scan.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.HardwareScanTask"/> object</returns>
            /// <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Any of the properties <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCreated"/> or <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted"/> is false.</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.HardwareScanTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v10_1"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.HardwareScanExpress(VideoOS.Management.VmoClient.CameraCredentialCollection,System.Boolean)">
            <summary>
            Starts a task that will scan for all hardware on the same sub network as the recording server.
            </summary>
            <param name="cameraCredentials">A collection of user name and password to use for communicating with hardware on the network.</param>
            <param name="useDefaultCredentials">Is default credentials used when scanning.</param>
            <returns>An <see cref="T:VideoOS.Management.VmoClient.HardwareScanExpressTask"/> object</returns>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">This expection is thrown in case of communication erros or if an unknown error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The functionality is not supported by the server (see remarks).</exception>
            <exception cref="T:System.InvalidOperationException">Any of the properties <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCreated"/> or <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted"/> is false.</exception>
            <remarks>Creating an <see cref="T:VideoOS.Management.VmoClient.HardwareScanExpressTask"/> is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v11_1"/> or above.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.Refresh">
            <summary>
            Refreshes the recording server and get the latest updates from the database.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.RecordingServer.Update">
            <summary>
            Apply recorder changes to the database
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.RecordingServerNotFoundException">Thrown when updating a recorder that no longer exist.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">Thrown in case of server communication issues, Sql server issues, invalid property values etc. </exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.RecordingServer.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            Supported from server version <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/>.
            </summary>
            <returns>Return true if custom properties is supported, returns false if custom properties is not supported.</returns>
            <remarks>Custom Properties is only supported by servers where <see cref="P:VideoOS.Management.VmoClient.ConnectionManager.ServerVersion"/> is <see cref="F:VideoOS.Management.VmoClient.ServerVersions.v7_0"/> or above.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ConnectionManager.IsOpen">
            <summary>
            Gets a <see cref="T:System.Boolean"/> property value that specifies whether
            the connetion is currently open.
            </summary>
            <value>
            A <b>Boolean</b> value that specifies whether the connection is open. If
            <b>True</b>, the connection is open. If <b>False</b> (default) the connection
            is not open.
            </value>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ConnectionManager.Connect">
            <summary>
            Connect to the server.
            </summary>
            <exception cref="T:VideoOS.Management.VmoClient.ConnectionFailureException">Check the server address. The system could not connect to the server &apos;{0}&apos;.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.UserNamePasswordException">Failed to connect, check the user name and password.</exception>
            <exception cref="T:VideoOS.Management.VmoClient.VmoException">A unknown error occured doing connection to the server.</exception>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ConnectionSettings">
            <summary>
            The <b>ConnectionSettings</b> class represents the settings used by a connection
            to the server. The <see cref="T:VideoOS.Management.VmoClient.ServerConnection"/> inherits <b>ConnectionSettings</b>
            class
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ConnectionSettings.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the
            name of the server.
            </value>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUser">
            <summary>
            Gets or sets a property value the specifies whether the connection is
            established using impersonation.
            </summary>
            <value>
            A <b>Boolean</b> value that specifies whether the connection is
            established using impersonation. If <b>True</b>, the connection is
            established using impersonation. If <b>False</b> (default), the
            connection is established using the credentials of the current
            user.
            </value>
            <remarks>
            If the <b>ConnectAsUser</b> property is set to <b>True</b>, the
            <see cref="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUserName"/> property and the <see cref="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUserPassword"/>
            property are used to acquire credentials for impersonation. Any
            subsequent connection is made with the credentials of the specified
            user.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUserName">
            <summary>
            Gets or sets the name of the user when connecting using impersonation.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the user name when connection
            is established using impersonation of a user.
            </value>
            <remarks>
            If the <see cref="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUser"/> property is set to <b>True</b>, the
            <b>ConnectAsUserName</b> property and the <see cref="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUserPassword"/>
            property are used to acquire credentials for impersonation. Any
            subsequent connection is made with the credentials of the specified user.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUserPassword">
            <summary>
            Gets or sets the password for the user when connecting using impersonation.
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the password when connection
            is established using impersonation of a user.
            </value>
            <remarks>
            If the <see cref="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUser"/> property is set to <b>True</b>, the
            <see cref="P:VideoOS.Management.VmoClient.ConnectionSettings.ConnectAsUserName"/> property and the <b>ConnectAsUserPassword</b>
            property are used to acquire credentials for impersonation. Any
            subsequent connection is made with the credentials of the specified user.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.ConnectionSettings.NetworkProtocol">
            <summary>
            Gets or sets the network protocol used to establish the connection
            to the server.
            </summary>
            <value>A <see cref="P:VideoOS.Management.VmoClient.ConnectionSettings.NetworkProtocol"/> object value that specifies the
            network protocol used to establish the connection to the server</value>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ServerConnection">
            <summary>
            The <b>ServerConnection</b> object represents a connection to a server.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.VmoException">
            <summary>
            The VmoException class represents the exception raised when an error
            occurs during a VideoOS Manangement Objects (VMO) operation.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.VmoException"/> class.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.VmoException"/> class with
            the specified message.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.VmoException"/> class with
            the specified message and specified inner exception.
            </summary>
            <param name="message">
            A <see cref="T:System.String"/> value that specifies the message string for the
            VideoOS Management Objects (VMO) exception.
            </param>
            <param name="innerException">
            An <see cref="T:System.Exception"/> system object that specifies the exception on
            which to base the referenced object.
            </param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This constructor supports the VideoOS Management Objects (VMO) infrastructure
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.PermissionInfo">
            <summary>
            The PermissionInfo class represents information regarding allowed or
            denied privileges.
            </summary>
            <remarks>
            The PermissionInfo object is returned by the EnumPermissions method.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PermissionInfo.Sid">
            <summary>
            Gets the security identifier (SID) of the user or the ID of the role
            that has been allowed of denied access to the object.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.PermissionInfo.PermissionState">
            <summary>
            Gets the permission state of the object to which the permission
            applies, such as whether the permission is allowed or denied.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.PermissionState">
            <summary>
            The PermissionState enumeration contains values the specify the
            state of a permission.
            </summary>
            <remarks>
            The PermissionState enumeration class is served by
            the <see cref="T:VideoOS.Management.VmoClient.PermissionState"/> property.
            </remarks>
        </member>
        <member name="F:VideoOS.Management.VmoClient.PermissionState.Allow">
            <summary>
            The permission has been allowed.
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.PermissionState.Deny">
            <summary>
            The permission has been denied.
            </summary>
        </member>
        <member name="F:VideoOS.Management.VmoClient.PermissionState.Revoke">
            <summary>
            The permission has been revoked.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.PermissionSetBase">
            <summary>
            The PermissionSetBase class is a base class that is inherited by
            permission set classes.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PermissionSetBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PermissionSetBase"/> class.
            </summary>
            <remarks>
            The default constructor initializes any fields to their default values.
            </remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PermissionSetBase.#ctor(VideoOS.Management.VmoClient.PermissionSetBase)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoOS.Management.VmoClient.PermissionSetBase"/> class
            based on the specified PermissionSetBase object.
            </summary>
            <param name="permissionSet"></param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PermissionSetBase.ToString">
            <summary>
            Returns a string value that represents the specified <see cref="T:VideoOS.Management.VmoClient.PermissionSetBase"/>
            object.
            </summary>
            <returns>
            A <see cref="T:System.String"/> value the specifies the PermissionSetBase object.
            </returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PermissionSetBase.AdjustForSupportedPermissionsAllow``1(``0)">
            <summary>
            Adjust permissions for given supported permissions: set all permissions out of the supported to Allow.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.PermissionSetBase.AdjustForSupportedPermissionsDeny``1(``0)">
            <summary>
            Adjust permissions for given supported permissions: set all permissions out of the supported to Deny.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.TimeProfilePermissionInfo">
            <summary>
            The PermissionInfo class represents information regarding allowed or
            denied privileges.
            </summary>
            <remarks>
            The PermissionInfo object is returned by the EnumPermissions method.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.TimeProfilePermissionInfo.Sid">
            <summary>
            Gets the security identifier (SID) of the user or the ID of the role
            that has been allowed of denied access to the object.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.TimeProfilePermissionInfo.TimeProfileId">
            <summary>
            Gets the permission state of the object to which the permission
            applies, such as whether the permission is allowed or denied.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.ICreatable">
            <summary>
            The ICreatable class represents an interface that implements the New method.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.ICreatable.Create">
            <summary>
            Creates an object on the server defined by the referenced VideoOS Management
            Objects (VMO) object.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.IUpdatable">
            <summary>
            The IUpdatable class represents an interface that implements the Update method.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.IUpdatable.Update">
            <summary>
            Updates any property changes on the server defined by the referenced VideoOS Management
            Objects object.
            </summary>
            <remarks>
            The Update method updates any changes that have been made to the properties on the
            reference VideoOS Management Objects (VMO) object.
            </remarks>
        </member>
        <member name="T:VideoOS.Management.VmoClient.IDeletable">
            <summary>
            The IDeletable class represents an interface that implements the Delete method
            and IsDeleted property.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.IDeletable.Delete">
            <summary>
            Deleted the referenced object.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.GenericRepository`1.Cache">
            <summary>
            Returns the cache
            </summary>
            <remarks>This should only be used for test purposes.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.GenericRepository`1.#ctor(VideoOS.Management.VmoClient.IVmoRepositories,System.Collections.Generic.Dictionary{System.String,`0})">
            <summary>
            This contructor is used for unittest purposes
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.GenericRepository`1.RefreshObjectInternal(VideoOS.Management.VmoClient.VmoObject,VideoOS.Management.VmoClient.VMOWebserviceObject,System.Boolean,System.Boolean)">
            <summary>
            This method refreshes the properties and relations of a VMO object
            </summary>
            <param name="vmoObject">This is the old VMO object</param>
            <param name="webObj">This is the new VMO object having the new properties and relations</param>
            <param name="updateRelations">Should relation be updated in notification engine, and object possibly moved in collections</param>
            <param name="updateRelatedObjects">Should related objects be refreshed</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.VmoRepositories">
            <summary>
            The RepositoryRelationObject object represents all objects which should recieve events from the
            repository when obejcts gets deleted.
            </summary>
        </member>
        <member name="T:VideoOS.Management.VmoClient.VmoCollection`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoCollection`1.Refresh(System.Boolean)">
            <summary>
            Refreshes the collection to reflect the state of the server.
            Objects contained in the collection that has been removed from the server since last refresh will be removed from the collection.
            New objects on the server will be added to the collection.
            Objects contained in the collection that still exist on server will be refreshed depending on the value of <paramref name="refreshChildObjects"/>.
            </summary>
            <param name="refreshChildObjects">If True, objects that still exist on server will be refreshed.</param>
        </member>
        <member name="T:VideoOS.Management.VmoClient.VmoObject">
            <summary>
            The VmoObject object represents all VideoOS server objects.
            </summary>
            <remarks>
            The VmoObject is a generic object that is used to reference objects 
            that are not of a specified type. The VmoObject is also used as a base 
            class.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.InternalId">
            <summary>
            Gets the internal id of the object.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.ObjectProperties">
            <summary>
            Contains all the properties of the object
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.Undo">
            <summary>
            Revert changes which have been done since the object was last received from the database.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.PropertiesLoaded">
            <summary>
            Method is called when properties is changed by the framework.
            Can be used to populate xml based objects on the entity.
            </summary>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.IsDirty">
            <summary>
            Specifies if the object have been changed.
            </summary>
            <returns>True if it has been changed, false if not</returns>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.IsCreated">
            <summary>
            Specifies if the object have been created.
            </summary>
            <remarks>True if the object have been created, false if not.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted">
            <summary>
            Specifies if the object have been deleted.
            </summary>
            <remarks>
            True if the object have been deleted, false if not.
            </remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.Exists">
            <summary>
            Specifies if the object exists on the server.
            </summary>
            <remarks>True if the object have been created and not deleted, false if not.</remarks>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.ThrowIfNotCreated">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/> if <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCreated"/> is false.
            </summary>
            <exception cref="T:System.InvalidOperationException">The property <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCreated"/> is false.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.ThrowIfDeleted">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/> if <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted"/> is false.
            </summary>
            <exception cref="T:System.InvalidOperationException">The property <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted"/> is false.</exception>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.ThrowIfNotCreatedOrDeleted">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/> if <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCreated"/> is false or <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted"/> is false.
            </summary>
            <exception cref="T:System.InvalidOperationException">Any of the properties <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCreated"/> or <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDeleted"/> is false.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.Relations">
            <summary>
            Contains all relations to other objects. A relation is here identified by you get deleted 
            if the other object get deleted.
            </summary>
        </member>
        <member name="E:VideoOS.Management.VmoClient.VmoObject.Deleted">
            <summary>
            Event fired when this object is deleted. Either by direct delete or by delete of related objects.
            </summary>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.AddNotification(VideoOS.Management.VmoClient.VmoObject)">
            <summary>
            The AddNotifition is called when an object is created or received from the server,
            that has a relation defined to this object. This information is used to put the object
            into a collection of this kind of objects, if any such is defined on this object.
            </summary>
            <param name="obj">The vmo object with relation to this object</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.RemoveNotification(VideoOS.Management.VmoClient.VmoObject)">
            <summary>
            The RemoveNotifition is called when an object is moved (not deleted),
            that has a previous relation defined to this object. This information is used to remove the object
            a collection of this kind of objects, if any such is defined on this object.
            </summary>
            <param name="obj">The vmo object with relation to this object</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.TryGetPropertyValue``1(System.String,``0@)">
            <summary>
            Try to get a property from the property collection
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="key">The key of the property</param>
            <param name="value">The value of the property</param>
            <returns>The true if a value is found; Otherwise false</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.GetPropertyValue``1(System.String)">
            <summary>
            Get a property from the property collection
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="key">The key of the property</param>
            <returns>The value if exists or default(T) if not</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.SetPropertyValue``1(System.String,``0)">
            <summary>
            Set a property in the property collection
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="key">The key of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.GetNestedPropertyValue``1(System.String,System.String)">
            <summary>
            Get a property from the nested property collection.
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="nestedPropertiesCollectionName">The name of the nested properties collection to set the property value in.</param>
            <param name="key">The key of the property</param>
            <returns>The value if exists or default(T) if not</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.SetNestedPropertyValue``1(System.String,System.String,``0)">
            <summary>
            Sets a property in the nested property collection.
            Nested properties are not covered by the <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsDirty"/> check and the <see cref="M:VideoOS.Management.VmoClient.VmoObject.Undo"/> method at the moment,
            so avoid exposing setters for nested properties.
            </summary>
            <typeparam name="T">Simple types (string, bool, int, float, double, datetime, enums)</typeparam>
            <param name="nestedPropertiesCollectionName">The name of the nested properties collection to set the property value in.</param>
            <param name="key">The key of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.CustomProperties">
            <summary>
            Gets the custom properties.<br/>
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCustomPropertiesSupported"/> is returning false.</exception>
            <remarks>Accessing this collection is only supported if <see cref="P:VideoOS.Management.VmoClient.VmoObject.IsCustomPropertiesSupported"/> returns true.</remarks>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoObject.IsCustomPropertiesSupported">
            <summary>
            Specify if the custom properties is supported
            </summary>
            <returns>Return true if custom properties is supported, returns false if custom properties is not supported.</returns>
        </member>
        <member name="M:VideoOS.Management.VmoClient.VmoObject.ThrowIfCheckVersionFail(VideoOS.Management.VmoClient.ServerVersion)">
            <summary>
            Throws <see cref="T:System.NotSupportedException"/> if the actual server version is not &gt;= the version passed in <paramref name="requiredVersion"/>.
            </summary>
            <param name="requiredVersion">The version to compare with the actual server version.</param>
            <exception cref="T:System.NotSupportedException">The server version is &lt; <paramref name="requiredVersion"/>.</exception>
        </member>
        <member name="P:VideoOS.Management.VmoClient.VmoClient.Environment">
            <summary>
            Get the static vmo client environment where specific options can be set
            </summary>
        </member>
    </members>
</doc>
